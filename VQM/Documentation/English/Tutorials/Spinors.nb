(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    531987,      10439]
NotebookOptionsPosition[    504773,       9991]
NotebookOutlinePosition[    505603,      10017]
CellTagsIndexPosition[    505511,      10012]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$Version", ",", 
   RowBox[{"Date", "[", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.3918507375625*^9, 3.39185074071875*^9}},
 CellLabel->
  "In[1252]:=",ExpressionUUID->"0d7e1d1a-a8d1-4c50-b39c-436a0ba7c00f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"11.3.0 for Microsoft Windows (64-bit) (March 7, 2018)\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "2018", ",", "4", ",", "25", ",", "15", ",", "6", ",", 
     "59.659011`9.528250877784679"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1252]=",ExpressionUUID->"a9952622-967f-4e80-83ef-ad489139b58b"]
}, Open  ]],

Cell["\<\
RM: todo (?) :Lighting is different to 5.2 (completely different ...) .
     I added Glow as an option.\
\>", "Program",
 CellChangeTimes->{{3.391850760140625*^9, 
  3.3918508313125*^9}},ExpressionUUID->"4be8870a-a3bd-4214-b15b-6d11f6d61210"],

Cell[CellGroupData[{

Cell["The package Spinors.m", "Title",ExpressionUUID->"0a0c03bd-2c71-4ee1-9394-751627ff19f2"],

Cell["\<\
Bernd Thaller
Institute of Mathematics
University of Graz
Austria
2006-08-08\
\>", "Subsubtitle",ExpressionUUID->"7634f8b2-07ec-4d1a-a225-3a91e82be12b"],

Cell[CellGroupData[{

Cell["Abstract", "Subsection",ExpressionUUID->"b5447cef-737a-4732-b30e-0cef49736323"],

Cell[TextData[{
 "The package VQM`Spinors defines basic operations in the two-dimensional \
complex Hilbert space of a qubit. It defines the Pauli matrices and provides \
tools to visualize pure and mixed states of a qubit. This package is part of \
the VQM packages which can be obtained here:  ",
 ButtonBox["http://www.uni-graz.at/imawww/vqm/software.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.uni-graz.at/imawww/vqm/software.html"], None}],
 " (free download). The VQM packages are part of the Visual Quantum Mechanics \
project, see ",
 ButtonBox["http://www.uni-graz.at/imawww/vqm/",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.uni-graz.at/imawww/vqm/"], None}],
 ". In particular, these packages are distributed with the book ",
 StyleBox["Advanced Visual Quantum Mechanics",
  FontSlant->"Italic"],
 ", Springer-Verlag New York, 2004."
}], "Text",ExpressionUUID->"52a0d80e-3420-41cd-9ac4-235276f12f93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load package", "Section",ExpressionUUID->"bb5f607e-811c-4cd3-b99c-a7c083894bfc"],

Cell["Needs[\"VQM`\"];", "Input",
 CellChangeTimes->{{3.3917813578541613`*^9, 3.3917813671141*^9}, {
   3.392472651138022*^9, 3.392472656068408*^9}, 3.3938509107756233`*^9, {
   3.393851005263566*^9, 3.393851006148788*^9}, 3.393854570679183*^9},
 CellLabel->
  "In[1253]:=",ExpressionUUID->"e6041aa1-7e88-4597-b55c-1969c0cdf946"],

Cell["", "Input",
 CellChangeTimes->{{3.3917813578541613`*^9, 3.3917813671141*^9}, {
   3.392472651138022*^9, 3.392472656068408*^9}, 3.3938509107756233`*^9, 
   3.393851003787365*^9},
 CellLabel->
  "In[1254]:=",ExpressionUUID->"df2e9b1b-40f7-4601-85f8-913a54be41b0"],

Cell[TextData[{
 "This also loads the package \"",
 StyleBox["VQM`VisualizeVector", "InlineInput"],
 "\"."
}], "Text",
 CellChangeTimes->{
  3.39178137583251*^9},ExpressionUUID->"7a480ff4-c96f-42d0-bf76-5d8fefe7ed09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bases", "Section",ExpressionUUID->"50e88c4d-e232-419e-b26c-3358ec50a762"],

Cell[TextData[{
 "A spinor is a complex two-dimensional vector {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "1"], ",", 
   SubscriptBox["c", "2"]}]],ExpressionUUID->
  "3efb008c-9a8a-4e10-ab43-178d38745f63"],
 "}, ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "i"], "\[Epsilon]", " "}]],ExpressionUUID->
  "a3322499-798e-4578-ad0a-b128e6d5a3c9"],
 "\[DoubleStruckCapitalC],",
 " that is, an element of the linear space ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", "2"], TraditionalForm]],
  ExpressionUUID->"0ff5d801-a6dc-4fe7-8833-88c2fcf4865e"],
 ". The spinors are usually defined with respect to a reference basis in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", "2"], TraditionalForm]],
  ExpressionUUID->"5a7bcbac-8299-419e-bd41-68df18158b56"],
 ". The package defines the canonical standard basis"
}], "Text",ExpressionUUID->"913c2be6-219a-41da-af0c-beab2e10ed0c"],

Cell[CellGroupData[{

Cell["$QSpinBasis", "Input",
 CellLabel->
  "In[1255]:=",ExpressionUUID->"da7706ec-6643-4bcd-ac4e-9c1b800719bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1255]=",ExpressionUUID->"1511b735-6dbd-4ecf-a980-8e66b6132c6b"]
}, Open  ]],

Cell[TextData[{
 "The basis spinors are interpreted as \"spin-up\" and \"spin-down\" with \
respect to the z-axis of a Cartesian basis in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"761af871-3564-4ab2-bc50-bccfd4effd7d"],
 "."
}], "Text",ExpressionUUID->"376bc828-166e-475b-aad9-a4ab16f507ab"],

Cell[TextData[{
 "Other standard bases provided by the package are ",
 StyleBox["QxBasis", "InlineInput"],
 ", ",
 StyleBox["QyBasis", "InlineInput"],
 ", and ",
 StyleBox["QzBasis", "InlineInput"],
 " (",
 StyleBox["QzBasis", "InlineInput"],
 " is equal to ",
 StyleBox["$QSpinBasis", "InlineInput"],
 "). For example, ",
 StyleBox["QxBasis", "InlineInput"],
 " consists of up and down spinors with respect to the x-axis:"
}], "Text",ExpressionUUID->"5cc3e2af-cc94-4584-9f30-4b822b7737a4"],

Cell[CellGroupData[{

Cell["QxBasis", "Input",
 CellLabel->
  "In[1256]:=",ExpressionUUID->"3e77ec9f-e02b-4c5c-bd5e-8e68ed16ca85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1256]=",ExpressionUUID->"5a900e27-1cd8-4d3c-bbee-a579a57c8868"]
}, Open  ]],

Cell[TextData[{
 "Note that the symbols defined by the VQM packages all start with the letter \
Q in order to prevent conflicts with existing symbols defined in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " or in other third-party packages."
}], "Text",ExpressionUUID->"608ae862-7587-4e2f-b40d-a11cce90fac3"],

Cell[TextData[{
 "The package also defines ",
 StyleBox["QSpinBasis", "InlineInput"],
 " as a default basis for some basis-dependent commands. It is initially \
equal to ",
 StyleBox["$QSpinBasis", "InlineInput"],
 ", but can be changed with the command ",
 StyleBox["QSetSpinBasis[{", "InlineInput"],
 "basespinor1",
 StyleBox[",", "InlineInput"],
 "basespinor2",
 StyleBox["}]", "InlineInput"],
 ". This influences how the components of spinors are calculated."
}], "Text",ExpressionUUID->"dc17c9a7-0c8f-47bf-b07a-99f7e8f29f62"],

Cell[CellGroupData[{

Cell["\<\
QSetSpinBasis[QxBasis];
QSpinBasis\
\>", "Input",
 CellLabel->
  "In[1257]:=",ExpressionUUID->"8a00ad3f-c3e7-4d2e-b095-49ac19045bfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1258]=",ExpressionUUID->"660b104a-256e-4730-b3e9-228fb526b87e"]
}, Open  ]],

Cell[TextData[{
 "An example of an operation that depends on the chosen basis is the \
calculation of the components of a spinor with respect to that basis. This is \
done with the command ",
 StyleBox["QSpinorToComponents", "InlineInput"],
 ". The spinor psi is given with respect to the reference basis ",
 StyleBox["$QSpinBasis", "InlineInput"],
 ". ",
 StyleBox["QSpinorToComponents[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " calculates the components of psi with respect to the basis ",
 StyleBox["QSpinBasis", "InlineInput"],
 ". This gives the components of the spinor {1,0} with respect to the \
previously set ",
 StyleBox["QSpinBasis", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"440c7b96-f668-4606-9b1d-f56c5bf1cf6b"],

Cell[CellGroupData[{

Cell["components = QSpinorToComponents[{1,0}]", "Input",
 CellLabel->
  "In[1259]:=",ExpressionUUID->"dd101017-c663-4de7-8ec0-c9a8d5b17ef4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1259]=",ExpressionUUID->"4391e438-ce08-49d9-b87f-f1121d7a383d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["components.QSpinBasis", "InlineInput"],
 " returns the original spinor. More generally, ",
 StyleBox["QComponentsToSpinor", "InlineInput"],
 " takes two complex coefficients and forms the corresponding linear \
combination of the basis vectors in ",
 StyleBox["QSpinBasis", "InlineInput"],
 ". The result is the spinor in the canonical standard basis."
}], "Text",ExpressionUUID->"fdfa3b74-0ea3-4aaf-85bd-c70b28d51271"],

Cell[CellGroupData[{

Cell["QComponentsToSpinor[components]", "Input",
 CellLabel->
  "In[1260]:=",ExpressionUUID->"261b5ebc-801c-4791-b974-742d871f757f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[1260]=",ExpressionUUID->"42fd05d9-59d5-4dc8-8227-6a2554bf7321"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QProjectUp[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " projects a spinor psi into the direction of the first basis vector of ",
 StyleBox["QSpinBasis", "InlineInput"],
 ", "
}], "Text",ExpressionUUID->"9cc80d4c-5f68-4372-9250-4c9863721db4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QProjectUp", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[1261]:=",ExpressionUUID->"30e709a0-5d6d-4b4a-9fd7-a65bd7d347b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellLabel->
  "Out[1261]=",ExpressionUUID->"6d2451ea-c03d-4575-a30c-a70789265ba5"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QProjectDown[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " gives the part proportional to the second basis vector. The sum of the two \
projections is the identity, that is,"
}], "Text",ExpressionUUID->"584749ff-1ddb-49bb-bc1b-11993eb60b70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "I"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QProjectUp", "[", "sp", "]"}], "+", 
   RowBox[{"QProjectDown", "[", "sp", "]"}]}], " ", "\[Equal]", " ", 
  "sp"}]}], "Input",
 CellLabel->
  "In[1262]:=",ExpressionUUID->"16c057e7-aa6a-43bd-a1fd-eaa78a713b50"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1263]=",ExpressionUUID->"4741a7fa-f67b-479f-a7f9-9968de24bed2"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QProbabilityUp[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " gives the probability that the spinor has spin-up with respect to the ",
 StyleBox["QSpinBasis", "InlineInput"],
 ", ",
 StyleBox["QProbabilityDown[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " gives the probability for spin down."
}], "Text",ExpressionUUID->"12e8f613-e334-48f6-84ef-50196b6e3479"],

Cell["\<\
A natural method for the visualization of a spinor is to represent its \
components with respect to a basis by a bar diagram. The height of the bars \
gives the absolute value, and the color gives the phase of the component.\
\>", "Text",ExpressionUUID->"ae608c06-31ab-476c-bf30-34bec13b87ae"],

Cell[CellGroupData[{

Cell["QSpinorBarDiagram[{1,0}]", "Input",
 CellLabel->
  "In[1264]:=",ExpressionUUID->"18be9348-4611-4aee-8d46-043a4fa4580f"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0], 
    RectangleBox[{0.05, 0}, 
     NCache[{0.95, 2^Rational[-1, 2]}, {0.95, 0.7071067811865475}]]}, 
   {Hue[
     NCache[
      Rational[1, 2], 0.5]], 
    RectangleBox[{1.05, 0}, 
     NCache[{1.95, 2^Rational[-1, 2]}, {1.95, 0.7071067811865475}]]}},
  Epilog->{
    GrayLevel[0], 
    LineBox[{{0, 0}, {2, 0}}], 
    LineBox[{{0, 1}, {2, 1}}]},
  Frame->True,
  FrameTicks->{{{0.5, 
      FormBox["\"\\!\\(c\\_1\\)\"", TraditionalForm]}, {1.5, 
      FormBox["\"\\!\\(c\\_2\\)\"", TraditionalForm]}}, Automatic, None, 
    Automatic},
  PlotRange->{{-0.1, 2.1}, {-0.1, 1.1}}]], "Output",
 CellLabel->
  "Out[1264]=",ExpressionUUID->"4a28527c-cede-4092-b704-58984f1b7b25"]
}, Open  ]],

Cell[TextData[{
 "Note that the image above shows the components {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "1"], ",", 
   SubscriptBox["c", "2"]}]],ExpressionUUID->
  "d586e139-33fb-48a2-9003-6b14436cc301"],
 "} of the spinor with respect to the chosen ",
 StyleBox["QSpinBasis", "InlineInput"],
 " (= ",
 StyleBox["QxBasis", "InlineInput"],
 "). Let us restore the default setting. The following image then gives the \
components of the same spinor with respect to the canonical standard basis ",
 StyleBox["$QSpinBasis = QzBasis", "InlineInput"],
 "."
}], "Text",ExpressionUUID->"527a5b88-0e59-40da-8a49-57ed3995764f"],

Cell[CellGroupData[{

Cell["\<\
QSetSpinBasis[$QSpinBasis];
QSpinorBarDiagram[{1,0}]\
\>", "Input",
 CellLabel->
  "In[1265]:=",ExpressionUUID->"11c35d57-cb27-4ae3-b815-c31809142711"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0], RectangleBox[{0.05, 0}, {0.95, 1}]}, 
   {Hue[0], RectangleBox[{1.05, 0}, {1.95, 0}]}},
  Epilog->{
    GrayLevel[0], 
    LineBox[{{0, 0}, {2, 0}}], 
    LineBox[{{0, 1}, {2, 1}}]},
  Frame->True,
  FrameTicks->{{{0.5, 
      FormBox["\"\\!\\(c\\_1\\)\"", TraditionalForm]}, {1.5, 
      FormBox["\"\\!\\(c\\_2\\)\"", TraditionalForm]}}, Automatic, None, 
    Automatic},
  PlotRange->{{-0.1, 2.1}, {-0.1, 1.1}}]], "Output",
 CellLabel->
  "Out[1266]=",ExpressionUUID->"ebbe0756-9b57-4b2e-90f9-c031f3e9f783"]
}, Open  ]],

Cell[TextData[{
 "All the commands above accept the option ",
 StyleBox["QUseBasis", "InlineInput"],
 ". You can use this option when you want use a particular basis just for one \
command. The following command gives the spin-up part with respect to the ",
 StyleBox["QyBasis", "InlineInput"],
 " of the spinor {1,-1}."
}], "Text",ExpressionUUID->"52a603e7-1785-469c-a903-37d925ec5b94"],

Cell[CellGroupData[{

Cell["QProjectUp[{1,-1},QUseBasis->QyBasis]", "Input",
 CellLabel->
  "In[1267]:=",ExpressionUUID->"6759cda5-d0b7-4dcb-bbd9-3ecbe6d9d6b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "+", 
    FractionBox["\[ImaginaryI]", "2"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1267]=",ExpressionUUID->"6cf2a5aa-6103-413a-b025-72ad7bab49ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QSpinorToComponents[{1,-1}, QUseBasis->QxBasis]", "Input",
 CellLabel->
  "In[1268]:=",ExpressionUUID->"10953743-19af-4fb8-b4ca-4ac80b122ef6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1268]=",ExpressionUUID->"2c452e9c-69c2-4322-9884-985f8daa798a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QSpinorBarDiagram[{1,-1}, QUseBasis->QyBasis]", "Input",
 CellLabel->
  "In[1269]:=",ExpressionUUID->"aa6d4d3b-a22f-49d0-867d-59a827fc1035"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[
     NCache[
      Rational[1, 8], 0.125]], RectangleBox[{0.05, 0}, {0.95, 1}]}, 
   {Hue[
     NCache[
      Rational[3, 8], 0.375]], RectangleBox[{1.05, 0}, {1.95, 1}]}},
  Epilog->{
    GrayLevel[0], 
    LineBox[{{0, 0}, {2, 0}}], 
    LineBox[{{0, 1}, {2, 1}}]},
  Frame->True,
  FrameTicks->{{{0.5, 
      FormBox["\"\\!\\(c\\_1\\)\"", TraditionalForm]}, {1.5, 
      FormBox["\"\\!\\(c\\_2\\)\"", TraditionalForm]}}, Automatic, None, 
    Automatic},
  PlotRange->{{-0.1, 2.1}, {-0.1, 1.1}}]], "Output",
 CellLabel->
  "Out[1269]=",ExpressionUUID->"9f05e378-2ce0-4ac3-9057-b12c19b72b52"]
}, Open  ]],

Cell["You can compute the norm of a spinor with", "Text",ExpressionUUID->"80e07804-9801-4582-8b41-7cb5a5c71f0a"],

Cell[CellGroupData[{

Cell["Norm[{2,-I}]", "Input",
 CellLabel->
  "In[1270]:=",ExpressionUUID->"753d670d-0193-4081-ae97-43806f6c32eb"],

Cell[BoxData[
 SqrtBox["5"]], "Output",
 CellLabel->
  "Out[1270]=",ExpressionUUID->"55a8add9-7e06-4918-bbd3-ae842af1f66a"]
}, Open  ]],

Cell[TextData[{
 "and ",
 StyleBox["QNormalize", "InlineInput"],
 " returns a spinor with norm 1"
}], "Text",ExpressionUUID->"7fbee2ce-bdae-4a22-88af-3fb85474fbae"],

Cell[CellGroupData[{

Cell["QNormalize[{2,-I}]", "Input",
 CellLabel->
  "In[1271]:=",ExpressionUUID->"734507fb-a90a-4a0c-9aca-ec79ae3507c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["5"]], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", 
     SqrtBox["5"]]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1271]=",ExpressionUUID->"3b52a7e9-e24c-472e-8002-e740b2e26467"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Norm[%]", "Input",
 CellLabel->
  "In[1272]:=",ExpressionUUID->"fe46c062-4548-48c5-aacd-12a98207cc2d"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[1272]=",ExpressionUUID->"c7499baf-e1c8-48dc-b1bc-952010dafffc"]
}, Open  ]],

Cell[TextData[{
 " The function ",
 StyleBox["QNormalize", "InlineInput"],
 " can also be used to normalize arbitrary vectors"
}], "Text",ExpressionUUID->"bd9afc9b-4d4c-4062-b9be-2eb63e5d928c"],

Cell[CellGroupData[{

Cell["QNormalize[{1,2,3}]", "Input",
 CellLabel->
  "In[1273]:=",ExpressionUUID->"70e5d564-3fbd-4815-9961-5f16c9aaaf97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["14"]], ",", 
   SqrtBox[
    FractionBox["2", "7"]], ",", 
   FractionBox["3", 
    SqrtBox["14"]]}], "}"}]], "Output",
 CellLabel->
  "Out[1273]=",ExpressionUUID->"e4e37c48-f93f-49f2-833f-b0ce5458aa2d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some matrices", "Section",ExpressionUUID->"38709526-1acf-4d1a-8f9f-1874ba3b74ab"],

Cell[TextData[{
 "The package \"",
 StyleBox["VQM`Spinors", "InlineInput"],
 "\" also defines the some important operators. First of all, we have the \
Pauli spin matrices ",
 StyleBox["QPauliSigma1", "InlineInput"],
 ", ",
 StyleBox["QPauliSigma2", "InlineInput"],
 ", and ",
 StyleBox["QPauliSigma3", "InlineInput"],
 ". Moreover, ",
 StyleBox["QPauliSigmaV", "InlineInput"],
 " is a vector with the three Pauli matrices as components"
}], "Text",ExpressionUUID->"edc63e7b-af01-40d9-8bb2-4d566ae58fcc"],

Cell[CellGroupData[{

Cell["QPauliSigma2//MatrixForm", "Input",
 CellLabel->
  "In[1274]:=",ExpressionUUID->"23eec854-a328-46f9-bc6c-83584e94377b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1274]//MatrixForm=",ExpressionUUID->"5342e770-2123-4da7-b9ce-\
6ce70936cb4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QPauliSigmaV", "Input",
 CellLabel->
  "In[1275]:=",ExpressionUUID->"7541402f-655b-4644-9498-3ef95c0bfebc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1275]=",ExpressionUUID->"3edc3a26-2526-4d45-b4b1-51e2d41d3370"]
}, Open  ]],

Cell[TextData[{
 "The two-by-two identity matrix is ",
 StyleBox["QIdentity2", "InlineInput"],
 ". The Pauli sigma matrices are the quantum-mechanical observables for the \
spin measured with respect to the x-, y-, and z-axis of the reference \
coordinate system in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"538eca69-2405-4f89-8708-d3bb27d78ecb"],
 ". The spin-observable with respect to an arbitrary axis (represented by a \
vector ",
 StyleBox["kv", "InlineInput"],
 ") is ",
 StyleBox["QSpinHamiltonian[kv]", "InlineInput"],
 ". This matrix is obtained as\n ",
 StyleBox["QPauliSigma1.kv[[1]]+QPauliSigma2.kv[[2]]+QPauliSigma3.kv[[3]]", 
  "InlineInput"]
}], "Text",ExpressionUUID->"7dc99561-3ff3-41e0-ab46-255112c14422"],

Cell["This is a three-dimensional vector with symbolic components", "Text",ExpressionUUID->"3fd1f7f0-393f-483e-8713-af9d02632815"],

Cell["\<\
Clear[k0, k1, k2, k3, kv];
kv = {k1,k2,k3};\
\>", "Input",
 CellLabel->
  "In[1276]:=",ExpressionUUID->"c25e2d4a-5fae-4e62-9432-356c51bdd27a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hs", "=", 
  StyleBox[
   RowBox[{"QSpinHamiltonian", "[", "kv", "]"}], "InlineInput"]}]], "Input",
 CellLabel->
  "In[1278]:=",ExpressionUUID->"a636d616-39a7-47f9-b39e-38e588f258d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k3", ",", 
     RowBox[{"k1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
     RowBox[{"-", "k3"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1278]=",ExpressionUUID->"f4c32465-d3ea-49ea-80b0-394a7c7c674e"]
}, Open  ]],

Cell[TextData[{
 "A density matrix is a hermitian matrix with trace 1. It is also determined \
by a vector in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"509659bb-4593-4e00-ba41-0305966396e7"],
 ":"
}], "Text",ExpressionUUID->"d53af9d1-7c3a-43bb-9375-9618b8086423"],

Cell[TextData[{
 "This is the density matrix describing spin in the direction of ",
 StyleBox["kv", "InlineInput"]
}], "Text",ExpressionUUID->"76cb17ab-a6e8-47d2-ac38-11f098a98e5c"],

Cell[CellGroupData[{

Cell["ma = QVectorToDensityMatrix[kv]", "Input",
 CellLabel->
  "In[1279]:=",ExpressionUUID->"cb4fe5ad-bd7a-4d5f-8b8b-efea8de054a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", "k3"}], "2"], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"k1", "-", 
        RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", 
        RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"1", "-", "k3"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1279]=",ExpressionUUID->"97380436-5aea-4793-8ddd-39aa1c1a2b10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ma", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[1280]:=",ExpressionUUID->"01d1bf75-f022-4de9-a9d5-c7d8db6d4b45"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "k3"}], "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"k1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}], 
      FractionBox[
       RowBox[{"1", "-", "k3"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1280]//MatrixForm=",ExpressionUUID->"8c7e52eb-0bdd-4682-b7ff-\
593ab6504ca1"]
}, Open  ]],

Cell["\<\
A four-vector {k0,k1,k2,k3} can be converted into a Hermitian matrix by:\
\>", "Text",ExpressionUUID->"15528963-9b78-4902-9ae4-a8efb3d23316"],

Cell[CellGroupData[{

Cell["QVectorToHermitianMatrix[{k0,k1,k2,k3}]", "Input",
 CellLabel->
  "In[1281]:=",ExpressionUUID->"ef5bdb92-1a88-49ba-bbc2-d2082dc58a29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k0", "+", "k3"}], ",", 
     RowBox[{"k1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
     RowBox[{"k0", "-", "k3"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1281]=",ExpressionUUID->"94b1178b-6ce3-488b-a7ec-b78f502795ba"]
}, Open  ]],

Cell["and a three-vector {k1,k2,k3} by", "Text",ExpressionUUID->"1e939c33-10eb-41fb-bf17-ddcc2539c013"],

Cell[CellGroupData[{

Cell["QVectorToHermitianMatrix[{k1,k2,k3}]", "Input",
 CellLabel->
  "In[1282]:=",ExpressionUUID->"75709916-0021-48af-ace5-047d9596c632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k3", ",", 
     RowBox[{"k1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
     RowBox[{"-", "k3"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1282]=",ExpressionUUID->"972c4ce2-9834-4d04-a19f-e84106bb462c"]
}, Open  ]],

Cell["which is the same as QSpinHamiltonian[{k1,k2,k3}]", "Text",ExpressionUUID->"65dfcefc-f6e8-4d2b-8929-dc8c9541b2c6"],

Cell["\<\
There is also an inverse operation which determines the vector from a \
Hermitian matrix:\
\>", "Text",ExpressionUUID->"233e9664-50d6-43cc-9372-fe30f465ff69"],

Cell[TextData[{
 StyleBox["QHermitianMatrixToVector", "InlineInput"],
 " is inverse to ",
 StyleBox["QVectorToHermitianMatrix", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"e3fe1228-7ec5-465b-8562-1967363810bf"],

Cell[TextData[{
 StyleBox["QDensityMatrixToVector", "InlineInput"],
 " is inverse to ",
 StyleBox["QVectorToDensityMatrix", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"fc24d4a3-a9f6-4e7f-b58d-5484655be719"],

Cell[CellGroupData[{

Cell["\<\
QHermitianMatrixToVector[QVectorToHermitianMatrix[{k0,k1,k2,k3}]] // Simplify\
\
\>", "Input",
 CellChangeTimes->{{3.390202079315736*^9, 3.3902021169598656`*^9}},
 CellLabel->
  "In[1283]:=",ExpressionUUID->"012cdf7e-40ee-40f6-8b02-64627e59890f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k0", ",", "k1", ",", "k2", ",", "k3"}], "}"}]], "Output",
 CellLabel->
  "Out[1283]=",ExpressionUUID->"a86a4fd6-939b-44da-b142-dea368857106"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QDensityMatrixToVector[QVectorToDensityMatrix[{k1,k2,k3}]] // Simplify\
\>", "Input",
 CellLabel->
  "In[1284]:=",ExpressionUUID->"beac97bd-afbc-4117-a0ae-2c228a146d53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}]], "Output",
 CellLabel->
  "Out[1284]=",ExpressionUUID->"6fc3b8ea-28db-4735-9f00-4671d5fa5e42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ma == QVectorToDensityMatrix[QDensityMatrixToVector[ma]] //Simplify\
\>", "Input",
 CellLabel->
  "In[1285]:=",ExpressionUUID->"210997a3-61e6-4816-871d-a02e9fa1cf61"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1285]=",ExpressionUUID->"07b45474-05db-48d1-99c9-081eb57af006"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The spinors QSpinorUp and QSpinorDown", "Section",ExpressionUUID->"0beaaef5-7f64-4d84-9be5-bf24cd4122ad"],

Cell[TextData[{
 "The package defines two basis spinors for each direction in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"5fc87b01-669e-4b8e-a566-bea3137b9a64"],
 ". These spinors are ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " and ",
 StyleBox["QSpinorDown[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 ". Here 'vector ' defines the direction. These spinors are eigenvectors of \
the matrix ",
 StyleBox["QVectorToMatrix[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 "."
}], "Text",ExpressionUUID->"b5a9f735-0a90-4a6b-a686-c71d74b25538"],

Cell["Clear[k1, k2, k3, kv]; kv = {k1,k2,k3};", "Input",
 CellLabel->
  "In[1286]:=",ExpressionUUID->"9f106155-776e-449a-a2d2-4eb165eef6a5"],

Cell[CellGroupData[{

Cell["\<\
QVectorToDensityMatrix[kv].QSpinorUp[kv] == Sqrt[kv.kv] \
QSpinorUp[kv]//Simplify\
\>", "Input",
 CellLabel->
  "In[1287]:=",ExpressionUUID->"9dedaacd-e42e-4542-821f-4dacf5905ac1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["k1", "2"], "+", 
       SuperscriptBox["k2", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "k3"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"k3", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k1", "2"], "+", 
            SuperscriptBox["k2", "2"], "+", 
            SuperscriptBox["k3", "2"]}]]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k1", "2"], "+", 
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"k3", " ", 
          RowBox[{"(", 
           RowBox[{"k3", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k1", "2"], "+", 
              SuperscriptBox["k2", "2"], "+", 
              SuperscriptBox["k3", "2"]}]]}], ")"}]}]}]]}]]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k1", "2"], "+", 
           SuperscriptBox["k2", "2"], "+", 
           SuperscriptBox["k3", "2"]}]]}], ")"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k1", "2"], "+", 
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"k3", " ", 
          RowBox[{"(", 
           RowBox[{"k3", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k1", "2"], "+", 
              SuperscriptBox["k2", "2"], "+", 
              SuperscriptBox["k3", "2"]}]]}], ")"}]}]}]]}]]}]}], "}"}], 
  "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]}]], "Output",
 CellLabel->
  "Out[1287]=",ExpressionUUID->"99107fca-3f5b-40c2-9b3c-b155aea916c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVectorToHermitianMatrix[kv].QSpinorDown[kv] == -Sqrt[kv.kv] \
QSpinorDown[kv]//Simplify\
\>", "Input",
 CellLabel->
  "In[1288]:=",ExpressionUUID->"8a0e8a4e-a806-4410-a8e9-48dda8129208"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1288]=",ExpressionUUID->"69e4caf2-f91b-4563-b82b-e0ebdff86f00"]
}, Open  ]],

Cell[TextData[{
 "Hence, for example, ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " is the state with spin-up in the direction of 'vector'. The two spinors \
form an orthonormal basis in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", "2"], TraditionalForm]],
  ExpressionUUID->"b3cc7043-eeb3-4033-a608-6e9c0d45e687"],
 ". For example,"
}], "Text",ExpressionUUID->"2995de42-8498-4750-b8f6-7f03bc15b773"],

Cell[CellGroupData[{

Cell["QConjSpinorUp[kv].QSpinorUp[kv]//Simplify", "Input",
 CellLabel->
  "In[1289]:=",ExpressionUUID->"e4379f27-3bef-426b-95c2-185217d13e6d"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[1289]=",ExpressionUUID->"768880a8-6c4c-495c-98cf-081c833032c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QConjSpinorDown[kv].QSpinorUp[kv]//Simplify", "Input",
 CellLabel->
  "In[1290]:=",ExpressionUUID->"8ebdfde9-1a87-401e-97bf-6480cc0210a7"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[1290]=",ExpressionUUID->"11196dd3-75e3-4ce6-80e4-a79480c197d4"]
}, Open  ]],

Cell[TextData[{
 "The conjugate comples spinors ",
 StyleBox["QConjSpinorUp[kv]", "InlineInput"],
 " and ",
 StyleBox["QConjSpinorDown[kv]", "InlineInput"],
 " have been defined for convenience."
}], "Text",ExpressionUUID->"103ffec4-177f-4071-94a8-a4e42e3eaced"],

Cell[TextData[{
 "We also note that ",
 StyleBox["QSpinorUp[kv]", "InlineInput"],
 " has a phase discontinuity on the negative z-axis, and ",
 StyleBox["QSpinorDown", "InlineInput"],
 StyleBox["[kv]", "InlineInput"],
 " has a phase discontinuity on the positive z-axis."
}], "Text",ExpressionUUID->"1f8f639a-ffb2-412e-93c0-8afc44fcf068"],

Cell[CellGroupData[{

Cell["QSpinorUp[{0,0,-1}]", "Input",
 CellLabel->
  "In[1291]:=",ExpressionUUID->"4ffa3585-5928-4486-920c-52401e089aa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellLabel->
  "Out[1291]=",ExpressionUUID->"5aef3598-3a1e-41c7-b1dd-9245671b43a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limit[QSpinorUp[{eps,0,-1}],eps->0]", "Input",
 CellLabel->
  "In[1292]:=",ExpressionUUID->"2afc50ab-e09b-4138-a08c-b7529ff9d129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "Indeterminate"}], "}"}]], "Output",
 CellLabel->
  "Out[1292]=",ExpressionUUID->"61d2d896-dcae-4290-81e8-c4671655ce93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limit[QSpinorUp[{-eps,0,-1}],eps->0]", "Input",
 CellLabel->
  "In[1293]:=",ExpressionUUID->"a045d813-be63-49fb-8aec-38889896fa5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "Indeterminate"}], "}"}]], "Output",
 CellLabel->
  "Out[1293]=",ExpressionUUID->"9e59adf0-10f1-43c9-b758-37fcc18dbe13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limit[QSpinorUp[{0,eps,-1}],eps->0]", "Input",
 CellLabel->
  "In[1294]:=",ExpressionUUID->"05af6871-b5fd-44e9-94e4-f544ff3c62ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "Indeterminate"}], "}"}]], "Output",
 CellLabel->
  "Out[1294]=",ExpressionUUID->"5d735310-e78e-4630-aac7-ee290a9c0fae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spinors and Vectors", "Section",ExpressionUUID->"5c67dbe7-385e-4862-913e-2ff34491b5ef"],

Cell["Consider the unit vector in three-dimensional space", "Text",ExpressionUUID->"d7b68932-0fed-4c53-b61b-0edea1d83277"],

Cell[CellGroupData[{

Cell["vec = {-4/9,8/9,-1/9}", "Input",
 CellLabel->
  "In[1295]:=",ExpressionUUID->"6c56fe90-0c0c-440f-9b1d-aa57f6c34a25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["8", "9"], ",", 
   RowBox[{"-", 
    FractionBox["1", "9"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1295]=",ExpressionUUID->"357ca902-f57a-4e46-867a-67b3a349c9ef"]
}, Open  ]],

Cell["\<\
It defines a direction in space. The state which is \"spin-up\" with respect \
to this direction is\
\>", "Text",ExpressionUUID->"9311b78a-62d4-4998-834c-21dc7f73bbdd"],

Cell[CellGroupData[{

Cell["sp = QSpinorUp[vec]", "Input",
 CellLabel->
  "In[1296]:=",ExpressionUUID->"2edd5f5d-f885-4596-89b8-1b32cfda87d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1296]=",ExpressionUUID->"6f6ade6f-a646-4401-9298-5676e0240f4c"]
}, Open  ]],

Cell["We can convert this spinor back to the vector", "Text",ExpressionUUID->"74f1e7e6-fb14-4a3d-a135-c000cc653db3"],

Cell[CellGroupData[{

Cell["QSpinorToVector[sp]", "Input",
 CellLabel->
  "In[1297]:=",ExpressionUUID->"f79fbe61-7605-48a2-9d01-e0982b55c525"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["8", "9"], ",", 
   RowBox[{"-", 
    FractionBox["1", "9"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1297]=",ExpressionUUID->"82f30f86-821b-45cd-b2c7-09ec26b7e3c3"]
}, Open  ]],

Cell[TextData[{
 "The norm (length) of the three-dimensional real vector ",
 StyleBox["QSpinorToVector[", "InlineInput"],
 "spinor",
 StyleBox["]", "InlineInput"],
 " is equal to  ",
 StyleBox["Norm[", "InlineInput"],
 "spinor",
 StyleBox["]^2", "InlineInput"],
 ", that is"
}], "Text",ExpressionUUID->"4055c9f0-6260-4bd5-afd6-79704e26cd03"],

Cell[CellGroupData[{

Cell["Norm[QSpinorToVector[{3,2}]] == Norm[{3,2}]^2", "Input",
 CellLabel->
  "In[1298]:=",ExpressionUUID->"b8ffc471-d631-4570-966d-cf5d689b2556"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1298]=",ExpressionUUID->"f12ccfd6-a02b-4f0c-bdcd-1181f4fc3d7c"]
}, Open  ]],

Cell[TextData[{
 "The command ",
 StyleBox["QSpinorToVector", "InlineInput"],
 " accepts the option ",
 StyleBox["QVectorLength", "InlineInput"]
}], "Text",ExpressionUUID->"96124e82-ec76-403b-a984-969d3f0ca7f2"],

Cell[TextData[{
 StyleBox["QSpinorToVector[psi, QVectorLength->", "InlineInput"],
 "n",
 StyleBox["]", "InlineInput"],
 " with",
 StyleBox["\n", "Input"],
 "n=1\t\t\tgenerates a unit vector\nn=2\t\t\tgenerates a vector with norm \
Norm[psi]^2 (default)\nn=3\t\t\tgenerates a vector with norm Norm[psi]"
}], "Text",ExpressionUUID->"2b0bca09-3870-4224-9ab6-02948712852c"],

Cell["\<\
There is also an inverse command QVectorToSpinor that accepts the same option.\
\>", "Text",ExpressionUUID->"a6d821a8-97b8-418f-880c-4d08987049aa"],

Cell[TextData[{
 StyleBox["QVectorToSpinor[vec, QVectorLength->", "InlineInput"],
 "n",
 StyleBox["]", "InlineInput"],
 " with the option",
 StyleBox["\n", "Input"],
 "n=1\t\t\tgenerates a unit spinor\nn=2\t\t\tgenerates a vector with norm \
Norm[vec]^1/2 (default)\nn=3\t\t\tgenerates a vector with norm Norm[vec]"
}], "Text",ExpressionUUID->"367012a9-018a-4f83-b219-c97047f04e1f"],

Cell[TextData[{
 "We have ",
 StyleBox["QVectorToSpinor[", "InlineInput"],
 "vec",
 StyleBox[", QVectorLength->1] == QSpinorUp[", "InlineInput"],
 "vec",
 StyleBox["]", "InlineInput"],
 "."
}], "Text",ExpressionUUID->"7ee46b0b-9fd9-45d2-9d5f-aafff2f6d439"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QExtractPhase", "Section",ExpressionUUID->"571a1e98-ddab-4711-b60f-3f7492e60acf"],

Cell["\<\
Note that the relation between spinors and vectors is not one-to-one. Here is \
another normalized spinor that gives the same vector than the spinor sp above:\
\>", "Text",ExpressionUUID->"381e29d3-1309-4575-b30b-022d375008d8"],

Cell[CellGroupData[{

Cell["sp2 =  {2/3,2 I/3-1/3}", "Input",
 CellLabel->
  "In[1299]:=",ExpressionUUID->"d7e45a57-b666-4977-9c4e-00067c3efbfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1299]=",ExpressionUUID->"fb814c0c-0ada-4324-98f0-2a966f4c3593"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QSpinorToVector[sp2]", "Input",
 CellLabel->
  "In[1300]:=",ExpressionUUID->"87451acd-a511-41a0-b61f-5e8a2ecaf868"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["8", "9"], ",", 
   RowBox[{"-", 
    FractionBox["1", "9"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1300]=",ExpressionUUID->"5be278ec-1cc1-454d-9545-4189b06cf550"]
}, Open  ]],

Cell["\<\
Generally, two spinors differing by a phase, sp1=Exp[I phi] sp2, lead to the \
same vector. \
\>", "Text",ExpressionUUID->"24541710-78c2-4069-9b61-287e3476ba8d"],

Cell[TextData[{
 StyleBox["QExtractPhase[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " returns a real number for any nonzero psi={z1,z2}. This number is a phase \
determined from comparison with ",
 StyleBox["QSpinorUp", "InlineInput"],
 ", where ",
 StyleBox["QSpinorUp", "InlineInput"],
 " is taken with respect to the spin-up direction defined by psi. Let us \
illustrate this with an example:"
}], "Text",ExpressionUUID->"46ee60f2-8f7c-4f50-b2ee-4f60b46cfb59"],

Cell[CellGroupData[{

Cell["psi = QNormalize[{-2 I,1}]", "Input",
 CellLabel->
  "In[1301]:=",ExpressionUUID->"07b4f893-dcfc-4870-a377-2c31d20dc9cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     SqrtBox["5"]]}], ",", 
   FractionBox["1", 
    SqrtBox["5"]]}], "}"}]], "Output",
 CellLabel->
  "Out[1301]=",ExpressionUUID->"c36ab1ce-8755-4836-bc3e-25031dd37d9a"]
}, Open  ]],

Cell["This spinor has the spin-up direction (unit vector)", "Text",ExpressionUUID->"b0128b5c-246a-4824-adbb-ace16034ac30"],

Cell[CellGroupData[{

Cell["dir = QSpinorToVector[psi]", "Input",
 CellLabel->
  "In[1302]:=",ExpressionUUID->"8e158ea3-2cf8-4d73-88f9-d83d3bd06eef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["3", "5"]}], "}"}]], "Output",
 CellLabel->
  "Out[1302]=",ExpressionUUID->"f059c38b-aabd-4613-8d5c-dceb35c1e33c"]
}, Open  ]],

Cell[TextData[{
 "Note, however, that ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "dir",
 StyleBox["]", "InlineInput"],
 " is different from ",
 StyleBox["psi", "InlineInput"]
}], "Text",ExpressionUUID->"bbd05c1a-bfff-4ac1-a602-4f7c96c277d2"],

Cell[CellGroupData[{

Cell["QSpinorUp[dir]", "Input",
 CellLabel->
  "In[1303]:=",ExpressionUUID->"75d3de41-8e58-4b24-bf95-3514bed4c466"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["5"]], ",", 
   FractionBox["\[ImaginaryI]", 
    SqrtBox["5"]]}], "}"}]], "Output",
 CellLabel->
  "Out[1303]=",ExpressionUUID->"283d4207-d210-4873-a77c-24ae4eeb0530"]
}, Open  ]],

Cell[TextData[{
 "but the difference is only a phase factor. The phase can be obtained with \
",
 StyleBox["QExtractPhase", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"ceb19f78-7780-44c6-b24b-f41ca2c29250"],

Cell[CellGroupData[{

Cell["ph = QExtractPhase[psi]", "Input",
 CellLabel->
  "In[1304]:=",ExpressionUUID->"02a9ea08-e04d-408c-8dd7-2c3e4ab452ed"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[Pi]", "2"]}]], "Output",
 CellLabel->
  "Out[1304]=",ExpressionUUID->"3f00d98d-a55c-4035-8221-b656f42b0a3e"]
}, Open  ]],

Cell[TextData[{
 "psi can now be recovered by multiplying ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "dir",
 StyleBox["]", "InlineInput"],
 " with the appropriate phase factor"
}], "Text",ExpressionUUID->"7ad1d988-109e-4a5c-b923-42213a14d8a9"],

Cell[CellGroupData[{

Cell["Exp[I ph] QSpinorUp[dir]", "Input",
 CellLabel->
  "In[1305]:=",ExpressionUUID->"213de24c-4929-4b16-a088-d701394caf3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     SqrtBox["5"]]}], ",", 
   FractionBox["1", 
    SqrtBox["5"]]}], "}"}]], "Output",
 CellLabel->
  "Out[1305]=",ExpressionUUID->"d671664f-3fda-4384-a38b-853764f3446d"]
}, Open  ]],

Cell["\<\
Any spinor psi is thus uniquely determined by a three-dimensional vector \
together with phase factor.\
\>", "Text",ExpressionUUID->"324aa201-3a11-4d36-b023-d9d9b0514f83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotations", "Section",ExpressionUUID->"f6ed9647-6a97-444a-bb95-48019501ead6"],

Cell[TextData[{
 StyleBox["QRotationSO3[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " and ",
 StyleBox["QRotationSU2[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " define rotations around the axis given by vector through an angle given by \
",
 StyleBox["Norm[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 ". The matrix ",
 StyleBox["QRotationSO3[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " is an orthogonal 3x3-matrix. ",
 StyleBox["QRotationSU2[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " is a unitary 2x2 matrix realizing the 'spinor representation' of the \
rotation group."
}], "Text",ExpressionUUID->"a8827867-0522-43d5-ba92-7b18d9ff870e"],

Cell["For example,", "Text",ExpressionUUID->"e230af2d-4a0c-456e-aaec-19b046621af3"],

Cell[CellGroupData[{

Cell["QRotationSU2[{2 Pi,0,0}]//MatrixForm", "Input",
 CellLabel->
  "In[1306]:=",ExpressionUUID->"5e1357f3-71cd-44a3-8e6f-b6f85c67c580"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1306]//MatrixForm=",ExpressionUUID->"a8caf464-558d-45d1-a70c-\
4b83cb6ee73e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QRotationSU2[{1,1,1}]//MatrixForm", "Input",
 CellLabel->
  "In[1307]:=",ExpressionUUID->"53d5c9e3-2467-4e0b-9657-a0b6727a1979"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         SqrtBox["3"], "2"], "]"}], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SqrtBox["3"], "2"], "]"}]}], 
        SqrtBox["3"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SqrtBox["3"], "2"], "]"}]}], 
        SqrtBox["3"]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          SqrtBox["3"], "2"], "]"}]}], 
       SqrtBox["3"]], 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         SqrtBox["3"], "2"], "]"}], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SqrtBox["3"], "2"], "]"}]}], 
        SqrtBox["3"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[1307]//MatrixForm=",ExpressionUUID->"4f8fe834-1c8c-42df-a963-\
f2fdde7be08c"]
}, Open  ]],

Cell["\<\
The textbook-form of the SU(2)-rotation matrix can be obtained as follows. \
Let us first define a unit vector with symbolic components.\
\>", "Text",ExpressionUUID->"983305e5-dd13-4b08-88af-92c3246dde66"],

Cell["\<\
Clear[nv,n1,n2,n3];
nv = {n1,n2,n3}; (* should be a unit vector *)\
\>", "Input",
 CellLabel->
  "In[1308]:=",ExpressionUUID->"8eead72f-0506-4730-9d84-292c310f96fb"],

Cell[CellGroupData[{

Cell["QRotationSU2[phi nv] // Simplify[#,{phi>0,nv.nv==1}]&", "Input",
 CellLabel->
  "In[1310]:=",ExpressionUUID->"d1b2dffc-fc4a-4a7d-bce6-7a1faa4baf65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"(", 
       RowBox[{"n1", "-", 
        RowBox[{"\[ImaginaryI]", " ", "n2"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "n1"}], "+", "n2"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1310]=",ExpressionUUID->"e77d8d56-8115-4563-b0dc-73aa3edd7f0d"]
}, Open  ]],

Cell["This matrix is the same as the following:", "Text",ExpressionUUID->"57482c70-22c8-4b4d-8cb5-ded6de39258b"],

Cell[CellGroupData[{

Cell["\<\
MatrixExp[-I phi/2 QVectorToHermitianMatrix[nv]] // ExpToTrig // \
Simplify[#,{phi>0,nv.nv==1}]&\
\>", "Input",
 CellLabel->
  "In[1311]:=",ExpressionUUID->"316aba18-c74c-408a-a414-7265e6ac9954"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "n1"}], "-", "n2"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "n1"}], "+", "n2"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1311]=",ExpressionUUID->"46b375e1-64ff-4f85-8608-d481e96feecc"]
}, Open  ]],

Cell["\<\
Any unitary 2x2-matrix may be considered a SU(2) rotation. The following \
example shows the connection with a basis transformation\
\>", "Text",ExpressionUUID->"f887189f-27cc-460a-8ea5-35026e83b0db"],

Cell[CellGroupData[{

Cell["\<\
Clear[a,b];
T=QRotationSU2[{1,1,1}];
newBasis={T.QzBasis[[1]], T.QzBasis[[2]]};
QSpinorToComponents[{a,b},QUseBasis->newBasis] == Inverse[T].{a,b} // Simplify\
\>", "Input",
 CellLabel->
  "In[1312]:=",ExpressionUUID->"7b732964-c3be-4704-ae33-aff1dc211803"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1315]=",ExpressionUUID->"3f682370-c22b-4ea8-9ce7-420700a6a522"]
}, Open  ]],

Cell["\<\
The connection between rotations in SO(3) and rotations in SU(2) is the \
following:\
\>", "Text",ExpressionUUID->"bad6c460-d16b-4e4b-8e44-b34446ad03b0"],

Cell["\<\
rotV = {1, 0.5, -1};
R = QRotationSO3[rotV];
T = QRotationSU2[rotV];\
\>", "Input",
 CellLabel->
  "In[1316]:=",ExpressionUUID->"e4d2b0e0-363c-4bf8-839c-1f584d3626e1"],

Cell[CellGroupData[{

Cell["\<\
QVectorToSpinor[ R . {1,0,0} ] == T . QVectorToSpinor[{1,0,0}]\
\>", "Input",
 CellLabel->
  "In[1319]:=",ExpressionUUID->"891b40b9-547b-4788-a342-8a9dac41c11e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1319]=",ExpressionUUID->"fc09be97-ddb0-49e2-b9c7-7875fe090960"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVectorToHermitianMatrix[ R . {1,0,0} ] == Chop[T . \
QVectorToHermitianMatrix[{1,0,0}] . Inverse[T]]\
\>", "Input",
 CellLabel->
  "In[1320]:=",ExpressionUUID->"b1000622-aeea-424f-b7d9-35d11ffb5630"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[1320]=",ExpressionUUID->"21a266f3-4c6d-4499-9265-86c0b2555cd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["QVectorToArrow"], "Input",
 CellLabel->
  "In[1321]:=",ExpressionUUID->"f0982a92-9224-45ed-8184-1e01dc82d97f"],

Cell[BoxData["QVectorToArrow"], "Output",
 CellLabel->
  "Out[1321]=",ExpressionUUID->"5cf582ba-2a7e-4a62-806b-9b4c85ff33f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QVectorToArrow", "//", "Options"}]], "Input",
 CellChangeTimes->{{3.39385182443626*^9, 3.393851825589398*^9}},
 CellLabel->
  "In[1322]:=",ExpressionUUID->"2f1f9658-4b37-44f3-9ed4-ea454b8034e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1322]=",ExpressionUUID->"58177208-2aee-42ba-8c1c-9611f0959ba9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",ExpressionUUID->"8a7e1a71-9a11-4739-8500-938267be4570"],

Cell[CellGroupData[{

Cell[BoxData["coloroptt"], "Input",
 CellChangeTimes->{3.393852019823992*^9},
 CellLabel->
  "In[1323]:=",ExpressionUUID->"fe03c456-f264-48cd-88a5-b3d680b527ce"],

Cell[BoxData["coloroptt"], "Output",
 CellLabel->
  "Out[1323]=",ExpressionUUID->"582c75c5-02bf-4c07-9ae4-8e7b54506809"]
}, Open  ]],

Cell["\<\
Since spinors and Hermitian matrices can be converted into vectors, we can \
visualize them\
\>", "Text",ExpressionUUID->"b8ab646d-5967-40ef-a2ba-649928d754b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Glow"}]], "Input",
 CellChangeTimes->{{3.393853833264017*^9, 3.393853834626066*^9}},
 CellLabel->
  "In[1324]:=",ExpressionUUID->"a50fc522-2a6b-4958-b463-9dac44e7caf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"Glow\\\", \\\"[\\\", StyleBox[\\\"col\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) is a graphics directive which specifies that \
surfaces of 3D graphics objects that follow are to be taken to glow with \
color \\!\\(\\*StyleBox[\\\"col\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Glow\\\", \\\"[\\\", \\\"]\\\"}]\\) specifies that \
there is no glow. \"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Glow"]}]], "Print", "PrintUsage",
 CellTags->
  "Info13243733657622-5963568",ExpressionUUID->"31c41b18-fe8f-483d-b565-\
0830524e1ba3"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Glow", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"Protected", ",", "ReadProtected"}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Glow],
  Editable->False]], "Print",
 CellTags->
  "Info13243733657622-5963568",ExpressionUUID->"8d2c79e3-8b26-4567-929e-\
b2df7917a4ef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"QSpinorToArrow", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "I"}], ",", 
     RowBox[{"1", "+", "I"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.393853697256723*^9, 3.3938537409777193`*^9}, {
  3.3938538159442387`*^9, 3.393853824354298*^9}, {3.393853859166441*^9, 
  3.393853946218874*^9}, {3.393854115308565*^9, 3.393854127360586*^9}},
 CellLabel->
  "In[1325]:=",ExpressionUUID->"1193572c-242e-4704-ad97-7d596b7d54b2"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {-2, 2, -1}}]}, 
   {Hue[0.75, 1., 1.], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.3361189908316922`, 
       1.6638810091683078`, -0.75}, {-1.3707511230366511`, 
       1.534632132204959, -0.9392334895167802}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.3707511230366511`, 
       1.534632132204959, -0.9392334895167802}, {-1.534632132204959, 
       1.3707511230366511`, -0.9392334895167802}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}}, {{-2, 2, -1}, {-1.534632132204959, 
       1.3707511230366511`, -0.9392334895167802}, {-1.6638810091683078`, 
       1.3361189908316922`, -0.75}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.6638810091683078`, 
       1.3361189908316922`, -0.75}, {-1.6292488769633489`, 
       1.465367867795041, -0.5607665104832198}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.6292488769633489`, 
       1.465367867795041, -0.5607665104832198}, {-1.465367867795041, 
       1.6292488769633489`, -0.5607665104832198}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}}, {{-2, 2, -1}, {-1.465367867795041, 
       1.6292488769633489`, -0.5607665104832198}, {-1.3361189908316922`, 
       1.6638810091683078`, -0.75}}]]}},
  ImageSize->{360., 309.5895424770095},
  ViewPoint->{-3.2371995282253057`, 0.4220051088299329, 0.8901971144523532},
  ViewVertical->{-0.3319673470642641, 0.4807301302023575, 
   1.6232020482968084`}]], "Output",
 CellLabel->
  "Out[1325]=",ExpressionUUID->"f95b8acb-fbe3-42ee-8d1c-e6153bffee94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"QSpinorToArrow", "[", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}], "]"}], "/.", 
    "\[InvisibleSpace]", 
    RowBox[{
     RowBox[{"Hue", "[", "a__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Glow", "[", 
      RowBox[{"Hue", "[", "a", "]"}], "]"}]}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.393851684618824*^9, 3.39385169074304*^9}, {
   3.393851869765396*^9, 3.393851872207851*^9}, 3.393853479045322*^9, {
   3.393853560112652*^9, 3.393853561303982*^9}, {3.393853593638112*^9, 
   3.393853676858457*^9}},
 CellLabel->
  "In[1326]:=",ExpressionUUID->"7c23333a-592d-48a7-afb7-ab3eca88a2aa"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
   {Glow[
     Hue[0.25, 1., 1.]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {Rational[-1, 4]/GoldenRatio, Rational[-3, 2], 0}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 
       0}, {-0.1545084971874737, -1.5, 
        0}, {-0.07725424859373685, -1.5, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 
       0}, {-0.07725424859373685, -1.5, -0.1338082836649087}, {
       0.07725424859373685, -1.5, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[1, 4]/GoldenRatio, Rational[-3, 2], 0}}, {{0, -2, 0}, {
       0.07725424859373685, -1.5, -0.1338082836649087}, {
       0.1545084971874737, -1.5, 0}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {Rational[1, 4]/GoldenRatio, Rational[-3, 2], 0}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 0}, {
       0.1545084971874737, -1.5, 0}, {0.07725424859373685, -1.5, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 0}, {
       0.07725424859373685, -1.5, 
       0.1338082836649087}, {-0.07725424859373685, -1.5, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[-1, 4]/GoldenRatio, Rational[-3, 2], 0}}, {{0, -2, 
       0}, {-0.07725424859373685, -1.5, 
       0.1338082836649087}, {-0.1545084971874737, -1.5, 0}}]]}},
  Lighting->Automatic]], "Output",
 CellLabel->
  "Out[1326]=",ExpressionUUID->"8ce2261f-531c-46e0-9059-7f164a801ed7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", " ", "[", "Graphics3D", "]"}]], "Input",
 CellChangeTimes->{{3.39385357302444*^9, 3.393853578361883*^9}, {
  3.393853629938384*^9, 3.393853630392205*^9}},
 CellLabel->
  "In[1327]:=",ExpressionUUID->"36539d0b-0661-4b60-883a-079752f6281b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AutomaticImageSize", "\[Rule]", "False"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AxesEdge", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BoxStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ClipPlanes", "\[Rule]", "None"}], ",", 
   RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerLinking", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerPath", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", 
   RowBox[{"FaceGridsStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RotationAction", "\[Rule]", "\<\"Fit\"\>"}], ",", 
   RowBox[{"SphericalRegion", "\[Rule]", "False"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}], ",", 
   RowBox[{"ViewAngle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewCenter", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.3`", ",", 
      RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}], ",", 
   RowBox[{"ViewProjection", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ViewVector", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewVertical", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1327]=",ExpressionUUID->"2e10b184-b5ac-4fee-ac27-994c6d40d508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QSpinorToArrow", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], "]"}], "//", "Graphics3D"}]], "Input",
 CellChangeTimes->{{3.3902027403462515`*^9, 3.3902027456638975`*^9}, 
   3.390210249675383*^9, {3.390225998471664*^9, 3.390226005880858*^9}, {
   3.3902265452964354`*^9, 3.390226574105443*^9}, {3.390226807927422*^9, 
   3.390226809804764*^9}, {3.390227203837964*^9, 3.390227205203659*^9}, 
   3.39247263166999*^9, {3.392472670590097*^9, 3.3924726723890123`*^9}, {
   3.393850753177603*^9, 3.393850780710935*^9}, {3.393851049456848*^9, 
   3.3938510536328297`*^9}},
 CellLabel->
  "In[1328]:=",ExpressionUUID->"0759c71e-61bf-429c-9ad5-e652de21ffac"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
   {Hue[0., 1., 1.], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.1545084971874737, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}, {1.5, 
       0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {1.5, 
       0.07725424859373685, -0.1338082836649087}, {
       1.5, 0.1545084971874737, 0}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, 0.1545084971874737, 0}, {1.5, 0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {1.5, 0.07725424859373685,
        0.1338082836649087}, {1.5, -0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, 0.1338082836649087}, {
       1.5, -0.1545084971874737, 0}}]]}}]], "Output",
 CellLabel->
  "Out[1328]=",ExpressionUUID->"d76c3e31-eedd-41bb-9aea-90903e7763e9"]
}, Open  ]],

Cell[TextData[{
 "The package ",
 StyleBox["VQM`VisualizeVector", "InlineInput"],
 " (which is loaded automatically by ",
 StyleBox["VQM`Spinors", "InlineInput"],
 ") provides all necessary commands for visualizing vectors. These commands \
are also used by ",
 StyleBox["VQM`Spinors", "InlineInput"],
 " for the visualization of spinors and Hermitian matrices.. "
}], "Text",ExpressionUUID->"cc5463da-2ef7-4ad1-9f46-5c2dd99d0932"],

Cell[TextData[{
 "The  commands ",
 StyleBox["QVectorToArrow", "InlineInput"],
 " and ",
 StyleBox["QSpinorToArrow", "InlineInput"],
 " return a 3D-graphics primitive describing an arrow whose properties are \
determined by the following options"
}], "Text",ExpressionUUID->"a4332a94-0860-495e-b81c-a65d65dc2878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVectorToArrow", "]"}]], "Input",
 CellLabel->
  "In[1329]:=",ExpressionUUID->"a149c0c7-7e9c-4dc7-958e-db0b7c691596"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1329]=",ExpressionUUID->"965fdfbd-df36-4757-b588-ec71e8b577ba"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QArrowHead->True", "InlineInput"],
 " (default) causes the vector to be drawn with an arrow head.",
 StyleBox[" QArrowHead->Automatic", "InlineInput"],
 " draws the vector with a point of size ",
 StyleBox["2*QLinePointSize", "InlineInput"],
 " instead of the ",
 StyleBox["QArrowHead", "InlineInput"],
 ". Otherwise the vector is just represented by a line segment."
}], "Text",ExpressionUUID->"08a80458-bdff-4eef-acd5-efe961cc60fc"],

Cell[TextData[{
 StyleBox["QMinLength", "InlineInput"],
 StyleBox["->0.1", "InlineInput"],
 " (default) specifies that vectors of length less than 0.1 are to be drawn \
as points of size QLinePointSize."
}], "Text",ExpressionUUID->"afafcf86-5226-4b09-8864-80f0d5912e07"],

Cell[TextData[{
 StyleBox["QArrowShape->{", "InlineInput"],
 StyleBox["n",
  FontSlant->"Italic"],
 ",",
 StyleBox["k",
  FontSlant->"Italic"],
 StyleBox["}", "InlineInput"],
 ": The head of the arrow is a cone with half height ",
 StyleBox["h",
  FontSlant->"Italic"],
 " = ",
 StyleBox["k",
  FontSlant->"Italic"],
 " * ",
 StyleBox["Norm[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " and radius ",
 StyleBox["r ",
  FontSlant->"Italic"],
 "= ",
 StyleBox["h",
  FontSlant->"Italic"],
 StyleBox["/(2 GoldenRatio)", "InlineInput"],
 " drawn using ",
 StyleBox["n",
  FontSlant->"Italic"],
 " polygons. If ",
 StyleBox["k",
  FontSlant->"Italic"],
 " is negative, then ",
 StyleBox["h",
  FontSlant->"Italic"],
 " = -",
 StyleBox["k",
  FontSlant->"Italic"],
 ". Default is (1,1/6)"
}], "Text",ExpressionUUID->"7281e2b6-c30d-4ea7-8278-6f86df55b050"],

Cell[TextData[{
 StyleBox["QArrowScale", "InlineInput"],
 StyleBox["-> ", "InlineInput"],
 StyleBox["k",
  FontSlant->"Italic"],
 " scales the length of the arrow by the factor ",
 StyleBox["k",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"51a56148-fc43-4008-917c-4358f10d10a3"],

Cell[TextData[{
 StyleBox["QHeadColor", "InlineInput"],
 StyleBox["->", "InlineInput"],
 StyleBox["colordirective",
  FontSlant->"Italic"],
 ": The arrow appears in the color specified by colordirective. Turn Lighting \
off to see the effect."
}], "Text",ExpressionUUID->"1be72a74-3ae4-4bb6-a32e-15bbcb029eee"],

Cell[TextData[{
 StyleBox["QLinePointSize", "InlineInput"],
 StyleBox["->", "InlineInput"],
 StyleBox["pt",
  FontSlant->"Italic"],
 "  causes the shaft of the arrow to be drawn with relative pointsize ",
 StyleBox["pt",
  FontSlant->"Italic"],
 ". Default is  ",
 StyleBox["pt ",
  FontSlant->"Italic"],
 "= 0.001."
}], "Text",ExpressionUUID->"dab1984c-c8ea-417a-970c-5f63d05aec2b"],

Cell[TextData[{
 StyleBox["QSpinorToArrow", "InlineInput"],
 " draws the arrow head by default in a color determined by the complex phase \
of the spinor. The options ",
 StyleBox["QHeadColor->QExtractPhase", "InlineInput"],
 " is also accepted. The complex phase factor ",
 StyleBox["Exp[I ", "InlineInput"],
 "phase",
 StyleBox["] ", "InlineInput"],
 "is mapped to colors according to ",
 StyleBox["Hue[", "InlineInput"],
 "phase",
 StyleBox["/(2 Pi)]", "InlineInput"],
 " (this is the standard color map of complex numbers)."
}], "Text",ExpressionUUID->"39356d40-789b-42de-a855-ca464583343c"],

Cell["Here are some examples:", "Text",ExpressionUUID->"837e6dfb-e964-49fe-91ef-92e1687c2639"],

Cell[CellGroupData[{

Cell["\<\
Graphics3D[
\tQVectorToArrow[{1,1,-1},
\t\tQArrowShape->{12,1/3}, QLinePointSize->0.007]
]\
\>", "Input",
 CellChangeTimes->{{3.390222413776577*^9, 3.390222416879047*^9}, {
   3.390232270323421*^9, 3.390232286372056*^9}, 3.3902323268905163`*^9, {
   3.390294045113927*^9, 3.390294065147149*^9}, 3.390294211922637*^9},
 CellLabel->
  "In[1330]:=",ExpressionUUID->"a739e3bd-79c5-4ef0-8443-409d5c7d32bd"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.007], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {GrayLevel[1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}}]], "Output",
 CellLabel->
  "Out[1330]=",ExpressionUUID->"55ec90ff-8b32-4f7c-8c13-ece417501631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.393854211124669*^9, 3.393854213762082*^9}},
 CellLabel->
  "In[1331]:=",ExpressionUUID->"042e786d-2f2e-47ee-900f-b05e94588e50"],

Cell["\<\
Graphics3D[{{Thickness[0.007], Line[{{0, 0, 0}, {1, 1, -1}}]}, 
  {GrayLevel[1], {Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3 \
- 1/(2*Sqrt[6]*GoldenRatio), -2/3}, 
      {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 2/3 - 1/(3*Sqrt[2]*GoldenRatio), -2/3 \
- 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, {2/3, 2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3, 2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), \
2/3 - 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(3*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 - 1/(3*Sqrt[2]*GoldenRatio)}, \
{2/3 - 1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 - 1/(3*Sqrt[2]*GoldenRatio), \
2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, \
{2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 + 1/(2*Sqrt[6]*GoldenRatio), -2/3}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), -2/3}, 
      {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + 1/(3*Sqrt[2]*GoldenRatio), -2/3 \
+ 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), \
2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}, \
{2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 + 1/(3*Sqrt[2]*GoldenRatio), \
2/3 - 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(3*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, \
{2/3 + 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3}}]}}}]\
\>", "Output",
 CellLabel->
  "Out[1331]//InputForm=",ExpressionUUID->"b94baefe-de18-474e-a5fb-\
4e96dfad297d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Graphics3D[{{Thickness[0.007], Line[{{0, 0, 0}, {1, 1, -1}}]}, 
  {White, {Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(3*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, 
      {2/3, 2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3 - \
1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3, 2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3 - \
1/(2*Sqrt[6]*GoldenRatio)}, 
      {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 \
- 1/(3*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(3*Sqrt[2]*GoldenRatio)}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), \
2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 - 1/(3*Sqrt[2]*GoldenRatio), \
2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, \
{2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 + 1/(2*Sqrt[6]*GoldenRatio), -2/3}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), -2/3}, 
      {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + 1/(3*Sqrt[2]*GoldenRatio), -2/3 \
+ 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), \
2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}, \
{2/3 + 1/(2*Sqrt[6]*GoldenRatio), 
       2/3, -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3, -2/3 + \
1/(2*Sqrt[6]*GoldenRatio)}, 
      {2/3 + 1/(3*Sqrt[2]*GoldenRatio), 2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 \
+ 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(3*Sqrt[2]*GoldenRatio), 2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), \
2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       -2/3}}]}}},Lighting->Automatic]\
\>", "Input",
 CellChangeTimes->{{3.3938542142488337`*^9, 3.3938542274173117`*^9}, {
  3.393854286014658*^9, 3.393854312025385*^9}},
 CellLabel->
  "In[1332]:=",ExpressionUUID->"e5013eb2-4f95-4fa0-92c8-a3e45a5b9baa"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.007], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {GrayLevel[1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}},
  Lighting->Automatic]], "Output",
 CellLabel->
  "Out[1332]=",ExpressionUUID->"9c9a6e4e-41b6-4daf-9278-618867b824fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QVectorToArrow", "//", "Options"}]], "Input",
 CellChangeTimes->{{3.390219785784399*^9, 3.390219790421028*^9}, {
  3.390219842903577*^9, 3.390219843833543*^9}},
 CellLabel->
  "In[1333]:=",ExpressionUUID->"cc1cd452-b2ae-4efb-8ee8-4b62bc018401"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1333]=",ExpressionUUID->"d865e5bc-9dbb-4ad9-b734-ed455b610068"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.390219873706263*^9, 3.390219874375732*^9}},
 CellLabel->
  "In[1334]:=",ExpressionUUID->"1a954d50-3f96-4f18-b32f-f94ad88c814e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"QVectorToArrow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"QArrowShape", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       FractionBox["1", "3"]}], "}"}]}], ",", 
    RowBox[{"QLinePointSize", "\[Rule]", "0.02"}], ",", 
    RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3902194266242*^9, 3.390219441688385*^9}, {
   3.390219501354521*^9, 3.3902195357024927`*^9}, {3.390219879910611*^9, 
   3.390219906128868*^9}, {3.3902200204808617`*^9, 3.39022005446014*^9}, {
   3.39022223870511*^9, 3.390222239160843*^9}, {3.390232365319017*^9, 
   3.3902323732864933`*^9}, {3.390293993592916*^9, 3.390293999193632*^9}, 
   3.393850671122547*^9, {3.393850726395426*^9, 3.393850739636883*^9}},
 CellLabel->
  "In[1335]:=",ExpressionUUID->"20c758b7-23e0-440b-9c5c-1143a3c08a37"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.02], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {GrayLevel[1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}}]], "Output",
 CellLabel->
  "Out[1335]=",ExpressionUUID->"7b23fc28-5a53-4599-89ea-fd5f194270b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVectorToArrow", "]"}]], "Input",
 CellChangeTimes->{{3.390232611942411*^9, 3.390232616481105*^9}},
 CellLabel->
  "In[1336]:=",ExpressionUUID->"f17bb107-a18b-40a7-820c-69c4b2eaaba8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1336]=",ExpressionUUID->"3b06b2fb-42f0-4aed-9542-83e93ee37ecb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"QVectorToArrow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"QArrowShape", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       FractionBox["1", "3"]}], "}"}]}], ",", 
    RowBox[{"QLinePointSize", "\[Rule]", "0.02"}], ",", 
    RowBox[{"QHeadColor", "\[Rule]", "Blue"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3902194266242*^9, 3.390219441688385*^9}, {
   3.390232387855072*^9, 3.3902324824832993`*^9}, {3.3902900716971197`*^9, 
   3.390290075030418*^9}, {3.390290118627667*^9, 3.390290121254785*^9}, 
   3.390293983873961*^9, 3.393850646254328*^9},
 CellLabel->
  "In[1337]:=",ExpressionUUID->"2faf96fa-365d-489e-b3ef-09497f7c8dd5"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.02], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {RGBColor[0, 0, 1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}}]], "Output",
 CellLabel->
  "Out[1337]=",ExpressionUUID->"93b72ca1-7301-4660-8fa7-a0f9180fd875"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"QSpinorToArrow", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]], " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "None"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3902330509952717`*^9, 3.39023305995817*^9}, {
  3.39023335103624*^9, 3.390233387181116*^9}},
 CellLabel->
  "In[1338]:=",ExpressionUUID->"ea7f43f0-7870-47a1-95f8-78f1ffaac832"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
   {Hue[0.125, 1., 1.], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.1545084971874737, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}, {1.5, 
       0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {1.5, 
       0.07725424859373685, -0.1338082836649087}, {
       1.5, 0.1545084971874737, 0}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, 0.1545084971874737, 0}, {1.5, 0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {1.5, 0.07725424859373685,
        0.1338082836649087}, {1.5, -0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, 0.1338082836649087}, {
       1.5, -0.1545084971874737, 0}}]]}},
  PlotRange->All]], "Output",
 CellLabel->
  "Out[1338]=",ExpressionUUID->"38ef6e7e-fa96-4dd2-b0f8-de897227904e"]
}, Open  ]],

Cell[TextData[{
 "Finally, there are the commands ",
 StyleBox["QVisualizeVector", "InlineInput"],
 ", ",
 StyleBox["QVisualizeSpinor", "InlineInput"],
 ", and ",
 StyleBox["QVisualizeOperator", "InlineInput"],
 ". They convert their argument into an arrow which is then shown together \
with auxiliary graphics elements. The appearance of those auxiliary graphics \
elements is controlled by the following options"
}], "Text",ExpressionUUID->"27848b9a-88a7-40e4-b1b9-4336ffacd314"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVisualizeVector", "]"}]], "Input",
 CellLabel->
  "In[1339]:=",ExpressionUUID->"b4a6e141-63aa-4220-97c2-e30f9b81de69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QDrawUnitSphere", "\[Rule]", "18"}], ",", 
   RowBox[{"QDrawAxes", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCube", "\[Rule]", "False"}], ",", 
   RowBox[{"QCoordinateCircles", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCirclesColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1339]=",ExpressionUUID->"39f26186-cfd7-4b00-820c-b7b782cc0263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVisualizeSpinor", "]"}]], "Input",
 CellChangeTimes->{{3.3902908172403173`*^9, 3.390290818091012*^9}},
 CellLabel->
  "In[1340]:=",ExpressionUUID->"c14f8d10-c667-4da7-9ab0-62c24a8c62b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QNeedleStyle", "\[Rule]", "True"}], ",", 
   RowBox[{"QDrawUnitSphere", "\[Rule]", "18"}], ",", 
   RowBox[{"QDrawAxes", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCube", "\[Rule]", "False"}], ",", 
   RowBox[{"QCoordinateCircles", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCirclesColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellLabel->
  "Out[1340]=",ExpressionUUID->"8a636fda-4082-4d01-b486-5b0e3ee82f24"]
}, Open  ]],

Cell[TextData[{
 "This shows a spinor as a vector on the surface of the Bloch-sphere. The \
size and shape of the arrow is controlled by ",
 StyleBox["Options[QArrowToVector]", "InlineInput"],
 " as described above."
}], "Text",ExpressionUUID->"799aaf3c-ec3a-413a-86f5-35209cb0635f"],

Cell[CellGroupData[{

Cell["QVisualizeSpinor[QNormalize[(-1+I) {1 , 1+I}]]", "Input",
 CellChangeTimes->{{3.390289860638399*^9, 3.3902899349073353`*^9}, {
   3.39029083164787*^9, 3.390290833950815*^9}, {3.3902908735359917`*^9, 
   3.390290875955452*^9}, {3.390291055540636*^9, 3.3902910819612617`*^9}, 
   3.390291159803007*^9, {3.390292500078312*^9, 3.39029250705829*^9}, {
   3.390293374794389*^9, 3.390293375149041*^9}, 3.390293481275622*^9, 
   3.390293550008285*^9, {3.390293811393549*^9, 3.390293816062522*^9}, 
   3.39029396620325*^9, {3.3902946220029583`*^9, 3.39029463591173*^9}, {
   3.393851551483891*^9, 3.3938516012058067`*^9}},
 CellLabel->
  "In[1341]:=",ExpressionUUID->"8ac3f506-de07-47b5-b283-24688b7713c0"],

Cell[BoxData[
 Graphics3DBox[{{
    {Hue[0.375, 1., 0.6666666666666667], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.42172168098165175`, 
       0.24494498568501488`, -0.16666666666666666`}, {0.35201198900350106`, 
       0.2636236413551827, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.35201198900350106`, 
       0.2636236413551827, -0.2687287392826324}, {0.2636236413551827, 
       0.35201198900350106`, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.2636236413551827, 0.35201198900350106`, -0.2687287392826324}, {
       0.24494498568501488`, 0.42172168098165175`, -0.16666666666666666`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.24494498568501488`, 
       0.42172168098165175`, -0.16666666666666666`}, {0.31465467766316557`, 
       0.40304302531148395`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.31465467766316557`, 
       0.40304302531148395`, -0.06460459405070089}, {0.40304302531148395`, 
       0.31465467766316557`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.40304302531148395`, 0.31465467766316557`, -0.06460459405070089}, {
       0.42172168098165175`, 0.24494498568501488`, -0.16666666666666666`}}]]}, 
    {Hue[0.5, 1., 0.8718115663020503], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.42172168098165175`, 0.24494498568501488`, -0.16666666666666666`}, {
        0.35201198900350106`, 0.2636236413551827, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.35201198900350106`, 0.2636236413551827, -0.2687287392826324}, {
        0.2636236413551827, 0.35201198900350106`, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{0, 0, 0}, {
        0.2636236413551827, 0.35201198900350106`, -0.2687287392826324}, {
        0.24494498568501488`, 0.42172168098165175`, -0.16666666666666666`}}]],
      Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.24494498568501488`, 0.42172168098165175`, -0.16666666666666666`}, {
        0.31465467766316557`, 0.40304302531148395`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.31465467766316557`, 0.40304302531148395`, -0.06460459405070089}, {
        0.40304302531148395`, 0.31465467766316557`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{0, 0, 0}, {
        0.40304302531148395`, 0.31465467766316557`, -0.06460459405070089}, {
        0.42172168098165175`, 
        0.24494498568501488`, -0.16666666666666666`}}]]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1:eJxN2Hk8FesfB3BLKFuqG2UtdMsSRSHhUbaiSLJrkUIlibiWCAdZQ1mSZM0R
su/bc5xz5thK2SVdIrLfFq4l6dcfv/s8/ph/3q95zcx5Zr6fz5zZffnW2ass
TExM739vrL+3EDcuP0FVBlAx8x02iVTWEBAOiIwg/QMcJRmPXI8wQPcnbVbt
pKvgP7drUR3yVmYAQsHjYupjd+TSNX0JHxQZwD5Y6Vbnc3/krbnbOCvkGGCG
JfzBfr8Q5OT5MdLiLgYI4ont3VQSg3z6XVeFAS8DKHq+PV/BloBcydArQWOe
AA89kyIlmpKRu7D165F6CVC3YlpZFp2G/OmmzvHrRQRo9c4ZyXLJRP7t3dFK
4WACiMhdHRjQyEbeLyvV7mNOgBitlQ/2fTnIz1JMGRa7CHB9r2yVfXoe8vlf
9zSffqaDgEtWdwUOFyC/TKMuCeXRQY6q2KtLVkXInQ2mDvNdoYORJOcV4eJi
5F376Tx0YTpo2RxyNW6mBLl5bISCYCsNOIXkcnmolyEXaB+7kuhGA4+uFxwt
CyxH7t4+X3ZIlAZqTCgve/IrkI/Xqhk9qKOCPe0xHxSmKpEfcdacottQQd4B
0yf+3NXIY6MvrrB9aQQzTby7T2nWIL8mFHvD2r8RTOczDRo71CI/cSWdY3Jb
IwC97O8/uNUhL916RLo1iQJKzliFu0bXI/ct+K77TIICZGanE3tiGpA/et/k
umQOQVX0UgVzCETulh1NyJ9qAGnn2M8MaFGQ7wm8xt+lXw/kaqp8BKqwp8wJ
LGyUrQMe1d/q4w42Ir/SZHGyi7MWKE0XPZbLwl6tbEoK+LcamB8vC2njpOL7
y1yQuUqrAqHk0WIDd+xazuT04tRKIKjG93hXN3bl+c+cZJ8KoPEtuaJMloac
G+hkjKuUg73+7dod97HHuqumxLCXgRsx/E+5+rELrQVwSZaXgN0eNzUrpejI
d33VEDnvXgyaZZ7/MeOCvebLBy+oXATuFpnsny3G3sH2auVL+UtgfFSkYvUb
9sVs7u1REnmg0Pfx9VBpArll8OmfzWdzQJSuUD2bLfaTPvaGwaHPgYtfPEdx
DPZATvWRpYkMcFdpf91EJXbWELWdb7jSgETEjoUXg9jtvZJk0iqegMFm0fqQ
ZewJp27puF2PB1qrXn8W8jGQn3llcJ/FIBpETWVrbJTE7nFvUqp6LAwwD8sK
/ZLG3m6i8WjcLwgYn5i58PwA9mkeruyLOr5gOlHzzonD2I/FOK1+Dr8NirVz
L1xUwa625N7utsMCZD5jgPEj2MUivyeZrZrCJcUrv+bWOZM4e7K5ugt0TPCk
Plt3HNlYw5LsFW8YofOvIosS9ja/2aOnjUiQ3HY7u/zguusJTXX9LhYGnw00
FI7IYOcTdWHn+hELJbNnNn0Rxn5aMSaCpycRioaN9dLYsfedsFoyiEqBNw2C
Spam8Dr/1UqK3O6cDlNChfwK27Db+IA6Dv0s+COotG4hE/sGHocFuy/ZsMVc
3tXNC7v+x1X3zUEvoIuO+us6fextB069+noiH45EPSvz3Iq95f3cdHhfAfRp
PpdD68fPIX+9g/K51iKYHyO8KTUOu8rx3J8zIiXQREvSWuzUuv1bniYamJXC
iWrbmhhW7OA0c+WnzDL4Z5Tz4fhCPEcF8OukfG85dFp7s+eEDfYO3ZfXbH5W
wFwToxBBduyvzZ0dU5WrIF998u70TDzXF1tFbk6ZVcMYPZlaWS3s1g95ex7c
r4F9G6Qn63pwnlipPE22TamF7EOinHw3sLe2B84cJ9fBEWU+pktrOK9uRd5h
5afUw6VNejtYg7BXbS217G1ogAKjb7grebCbDdpfT2iF0FSiqtl+K85Jk0cS
MVeuUCA7baC5kg3nKhzt8F7spcAx9zSrBlacwx/8dcUrDBuhZeqlfec+4Twv
CnmVcaCmEX6TJxZYO3D+j7kkWziKUeGlOene7jrcF/I6tW0eoVSYrS7S5hFe
hTzN2I/56xgVRosfJ4fY495RqC0/KK9Lg407yjn6JHBPKRzPFHJJpcHl0uCx
jR9x35U3JL2fnaXBRV4VxdGCUpzbN4dcmtTpMOLGCf+X53Fv7tgy561PosMB
X2dvM1Hcs3aJWW9yqHRYl8lukUwtxH3tLGjGwkLAl6fG9Qw4XyKfmPiZvKxM
QF8KPynYKxd5ri159q0TAZPHykO8csn4/p5ZaGl5TMA9RpdrRNme4x63Ofej
s4GAQ6MCh4QcM5CHde1/bTNCQNtavzdSQqnIs6f/dNq1RsDoKgvyR5iEXOaZ
9kkDfgYcrLiYNDf1CPcsWfA08z4GPGzZER5mHolzmP6NpiLHgOKPCx7cWMLv
XUcn2z6IKzJgFOmJ2XxiAJ4jlpsb1pQY0JKr6KRv0F+4lw1Sks4cYUDH5OJn
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
/W+TSOWG//x/rUUkdg==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiFPcUmghEU5FQlo5ioSpJJQtyl62VCqy
ZWcs3RjGvjdmmOUplCyp7I7t3//Fue/m83nefF8898wz1/W7rpmN9tfMLizj
4eFh/bqW/7rml/7/IoDgGkdlz/ETOmlGp77eKhwGHvlzuqK/XF6185KLjDf4
zwsVi8S15gnQK/zj3H3px8hF8o6M800TQGp0OL9w+gnyHiu9PbHfCbBFmdXC
s/s58kUth4RWFgH4NX7sMRZMRb6D8XrbaAUBQhqOvY3If4f80ZN3GU7xBNA5
STH/tpiHfJ3zqdJn1wnQqZwYQTCKkE8NVRrTtAgQfTnVo2u+FLnNj9C4f+a4
wN6i8onj8grkbfl9WWUULmAcDCtr+FSJ3Eu02NbqKheoXM7ko/ZRkfPTHwVk
yHBBX9OCRvL7GuT/bsnZFlHJAQ7sB7yyD2uRTzcn2B2x4gBKQOLnAM965Kfd
qb3JE2xgtZD3Ml+nEfnNAF3TF15swPtwULZwczNyzhaHEgleNnhd/1V0aroF
OU/SxHcFfxb4uppcHmPWhjzhKvtb2GwPSEl/Xy+0tx35vr/DU99e6wHrY2U3
863sQB7u6rJlbWc3kBAyb4n6jP2RusZRS9VuoHH8EmWc0oncwEFzbk8MEyxw
1YoO3v6AHFyvWu3whQEC2wjli4Z05Gpv/n6tt58BPAJN4jJ5upD/SZJ7uCKs
CxjfL16/LQf7pfYRhYOtdGAQ/7dQ+lUG8qFvm4/zSNFBktMOTT5xJnI308XA
R4YfADOH5TlSgf2VCbnBxqMTJEROTg1e6Eau6q3u4Z7dAYL6Niu8nsXODSr/
3tbZDnjn+5VnI3qQ+6/JXLjM2w6sQlNd7v3BQh63punqzp1tYBdnWFIgHvvh
OFXJgtAWIOqcaqC2jo2cpNt2K/NDExBReqCSH449p2huWf9oAwiQd604LMBB
fqRkJNR3Uz24mxbytukf7NftJNK1T9eCz00sin0j9p9GF3r+OF8D1F2dIkWU
uMhdb9nqKwdRwcnE4Ch+MvbQrWwhc99KcLBJ1NSzFrvPizccCx4IaK8njWVX
EciLjsWJ+WmVgh7VSYfHh7B3CFm6z8kWgZVGhnVkMva47YGOVX/lAe34vVYC
ydiLI2vEhOlZ4KTlaVebauzN6W8Vcv3fgJV1J+20PmI36JKvtHv1EpzKWqOo
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
z/8H+HVdMg==
      "]], Line3DBox[CompressedData["
1:eJxN2Gk4VdsfB3BJhtxouKVBmpBEyVwHK0pFfxkjDaYkQ1IZr5kjhMyFSBky
1hVxIsNKZjIds2M4wyZDZYjKUP7e3LV6sd98nv3sffaz1u/73Wfvs3DQu8HO
xsZGWz3Wrh47tinpvY0igKfU7mFK40WV4zqtqQ7kMdA2w/l116ovr3WqHV4m
g/+ch3esUSOCAFHWErZnl2OQC9Sp358JJYBDldHoZGsy8v5LwtclgghgVP/o
KaUtHfnnjBsaTu4EeLOmQSZ49F/knZPVixI2BPBw8QkgmRciz7pop7ZJlwD3
gxV4qwtLkIeEHU15KEcAfbHfbL8yKpCrn255+r/NBCi/fvsvt1+VyGc0KWeO
T7AAQ1byu+DjauTTznZRK5AFLutbh27/VYu8yn/k3EIYC5xJd3zfE9WAvHRs
5i+3SyzwkG9Dm8FcE/L0Ocdp970soH/LKVbjdAvyebY1eaVDTBALudl1TduQ
7z1c3/U+iQmy41oEVcntyA1dbLVUdZiAe+VeJHspFTl9U9Q5aTYmmK9g1Pz+
1IHc8oIeIZnPANLb7D+xljqRJ4eOzrcaMoBz3c/QR/u6kf+T+9zp8G86WCf3
zkbpSA9yx2CPnuAEOvjgcGvHlvO9yG0/r1yTlqYDKe7iAYGrfcj9NIOOvEoc
Bg2q9TeSDPrx+k6VdGWUDIGYpqro9VdoyNsNLqRNDQ2C6ZA1gKQxgFza/e5n
8ppBsCBgLCskMYg8Y45+oJBnAJzac7kufucQXi8vp6sPdtHA/UMqhmUz2DWD
n685sLkfHFMmYuKow8g3J3ro+nD2AR/juEBjfTry70Vz1g2cvUBCKvaEdgH2
5gaHtfsmu0GYu8bM4N8M5M+kdw2kDnSBAPXlo89vYZca3qJn1tIJ1K/q8CZU
YK8rz9MrSOsAfjS3hfHNTOSqg5IacsFUoG446i12Dbs62ebMN+12UBorVVuW
hf2yxvHv68TagIIiizt1AruUmq3xMY4W0Kl6bKlBlIV8SxbBnePdBJzVpjRW
LLBzxwtzmO9uAOLfA+9YPcb+7kFnlYl/Leh7kG3aUY899al0g9mXKuDfdNV3
eg77sf0e7hM+laBJRMOGtIPA8778xn2ooBz4j0QPqJCwG1Yr02KKiwGX7o+I
uYvYRzjDR8La3wDa9F9tFnbYB5eOuN6ffwnezXJ5aXphn51R81H9kQkOi0Kz
MjL2cyIcqVE/UkHB6L3a78HYx1sKVry2JQJqkame6kPsst9+kedJkWD48kOw
OxL7FVak8fX/uQCVry4LgVHYabKyZeGXnGBW2frNEX/4IxubpVC+cKhuxT1u
9Md1xhNkwoJ+xMO0XLLClz/uK0/9svbpUAqMO60CZx9gT+M6NEk6mQmn9HiX
wwOwB+lpepamvYbTx2vKS1ywszXb/VzLR4H3PzoQshbYb46vbNxgXAp9b6zY
eZ7DviNe7rrGvvdwu9HR6ODD2IW/BZ9Or/0Ai0kh2jWc2I9ZKelan6iB7zg9
sm4P43V3fwD96El1UGXh6FeZQuwbjWcHWRKNUI+0U3i/L3Yt9wlyTshHeLCS
PvFOE7vRynoLry2t8GcDt1kuL/bGHt9ba6vbYCorZTqmHu/zKaHcnq0j7fAx
By339n3ssdlczs07OqDuXUYWRQF7yAcej5NynXCqWXn78wk8jzc9R4RsznTB
++sOfRp+gn3kungLyaYbznKZUyoA9oFpR4cdjj3wH7+SOY9RnA/c71ak1z3s
hW/KYIacH/Y+sPXGnvA+KHSlMMpLCPvLglfiEgH9kO/RoEe7I86l8zRn0w3B
NHhU57b2pSicY73NPzOaHQcg+7O4+BsUnIeMB3dcH9kNwrZj6ZH7K3F+7vtd
+C/VcAj6n9mU5lWP8/ZSdrMOQ3wYNgPz5so+nM+kuNSlkxx0+FSUqlvXivP8
5MXFK29v0mFhO6V2pQ3nf/DQWU+LGjpkXVg7ZdOO+2KmcCdfoigDGvq8dhsp
wv1y+lqfq6AXA7p6hVuXZnYhX3p9jU+ymwHFT32YEfTCPeX+pq+9RowJx0aG
VCz0cK9J/84fs77LhFYqjl82KeAe1CoIZWmVMuG8S2s++wru0yrfR5SUJSYk
C71kLvzbilzs74i9Z+RZMGHzoVppy2bkis94to/eYcF1XV5Z7cONyM3N2Ba7
U1mw2COaweVbj5xyBpqXd7DgoRD/8aTRGuRDFi05t5dZ8NfOoG11jlXID/J5
PU/ZQ0DONbznsrnxe4g22X404CQBe/LJ/1NpKEPODzbayF8m4AKthqzU+RbP
10Gp7pg7BNTbspaeersAr9cll9c/fAnomhK9bHkiB/kv6rhTcSABC1KVnnSr
vkBONrYsOR1KQC2OtFLuc8+R+zqtgO5wAlJ6Oqedqx4htzuY6LkcSUAle6EX
bybu43lxmxKhRBFQSjnpiHPDeXx+aAS7zKpfnCmteHbXH/7nCS8Ef3hHEDDM
UZ//kWAMcqE+s8dPwgi4hkP6KlhJQl4+dlltTzABW7lqvwbR0pCfDZWXVPEn
YId7muQ2+Wzk177qrA9xXH0uU4H4f+LykR+YenN7rwkB/2KrdL6wSEE+Y/vT
6fEpAnZx8q97q1yGvK3W7sSUCAGL7kH2moj3yJ2LrUad2AiY7TQCRI9VIVdI
r4wP6GXB0TuWTlPPa5AzHSeOMzNZcNNN/cFFlXrsR+HZqnss2GjeVCHb2Ih8
eGSm3EmJBffcvpepeKAZ+bYXi7zOy0x4g7SFypfZivy3m+buudX97+gKEkWW
25Br1QT/1HNjwgNBXoe+76Qiz91okioovup5LhmXtDqQS7eIGL0YYEAZo5Nd
AVadyOMXG9MJMgPaOa3xrIrqwn5h6s3KQQbcq+4fkZffjdxib5+9UAsd3gpl
iZQX9yCX9JOZkLGmQ4dJaxNKay/yrfKl15ZW80dSjDfhZ3MfcvtNW2fnwTB8
erOdR76yHzltzJeafHUI7oudTDn4gYa87DU9hd9vEJ7K53y2PXcA+Yso3SGJ
0AGopJPtPPtsELnvBUuqVTINVmSZGop5DSH3lOjsr87rhy+nGbYDF4aR76qo
eTj2og9+6Rpa4N5KRy6+8Z6BfWYv9Jq19Lniiv2WSBpt3cMeaCHgF+QyiP24
fSOb0d1uKBpWtbBLmYF8djE5nHS9C4ovxebtj8beXnw+J0+xE8on8PydNY5d
2M9PbUywA2YrzCuPyjORi1I3V5DYqdDN11Tmmjd2k0V97d7GNui5PVJnQx32
p6mHXc6ea4U7z2fRT3Gy8D4U+6eIr/Ij5LTPmXmljn3IqkSbptwIh49sUyny
xi5IN/8dN1wHlUK2rUjkYS+Su0VpOlsD78WVBj8Ywu6vkwdZ3R+gbTxJuH0d
gdxWlmNfqcR7+Nvo3pd5cey7d9w12bm1FJaZ6W8Y18DOnKvi8xSmwMYpfccO
c+wgNeNAUtVrqHt1KkfXBbvCCvNmkGMm3JE2/sQgAPtBBVG5at9USDgxxa4/
wN6Xb3GftiMR8qvby598iD3wEumVq3EknAJnbgpEYoeZl8K6TV3gJGkxffW9
EXnxkStNPvV3QYOZWXT8Hz655OnH+hEGtsZSPt354zq1ip/65q4kgHPFi+4t
f9w3vnr/1+27U8GeNYPsZX/8zifSNTDpbib42yGzyfCP5+KvtPgWWv0SuBwS
c4/wwq5vYdo+YPgGBCr/e/a4PXYXjpyTevnF4JWvZYeAIfZKzSSBxznlgJzE
6+ZAwi4c7MM9o1oJVB98DYoVxL5ktn9v51AVGCPi43vn8bpP9lLmt2nWAr6z
g/+0fMReaMToN2XVA+fOTZ6cidjJEskmH2yaQAkQHey1xG4Sksj+o7wZ0KrV
21IksVMijXXMhdqAzN4vtq8/431ue4qn1f90O5DlPbNkkYu9I57EE+FNBVH2
4pOPTbHfOjw+1v2qA1QxlV4d3Ij9k4eoxUJVJ1B7NZCcXonn0WuI8zTb5y5g
EFPJ8/Em9o8b+HMmFruBkQM5KYIfe6GCo8m+lR4QWFGez1+E8+FnZI7F3i19
oEZqT4LvBexaEuVdZL5+YNf9gRrehXNJRjuDuiBAA7Lky979czjH5K97pZC2
DoBbJw3f9vBjH19w8U1fHAAa3vuXZqRxHq6HHcaVk4MgTO80OZeE81OCFapo
VTME/Nr0uTu0cN5KumpGx8UMA2Xf+RYtE5zPtsz4qVA5OthaJlAbqI/zXIt7
NyH4mA56iyr9bQ1w/nckOn2/tkgHVO1oDtPjuC/azBR7S/QZQFHufKHKYdwv
EfufZ6hlMkCNrUKezG7cR4c6Mw4f/8UA0rFUjrJZ3Gu55lJkdg0meLLHPEe5
B/egSB3HIfnHTEBR1Hk6n9yO56vrHtfMABMklJxYH3UT9ynJziLEYCcLJNd4
SB31b0GuzR+vTTViAa7Ja9+8l5qQJ9s5GViHsQB9vmh9dXwD7hfuJHHLUhaI
sFJm8CnVIXcvVIuWGWcBYWMtmfEX1bi/XANf8/ETICPm/fPv8h9w7s38tHsr
TQB3+WiZyt0QefYprlGgQ4AAnmfcbEMlyPfEDBbRrQiQoCam6jZbiPyCsLAw
tzsBzimMP6NL5iHPVLQI6gokADX9nUG+yAvkPdVHRt+GEsDFp1VBxPoZcllJ
8wKxCAJ0qjO6CvxjkV/xTs/csvo/+fzdeFsjcgDy/743Sp8NH6Q0Xqz4z/8P
pE7pfg==
      "]], Line3DBox[CompressedData["
1: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
/x+zXRYl
      "]], Line3DBox[CompressedData["
1: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
X09+TkY=
      "]], Line3DBox[CompressedData["
1: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
5D//H2ybU0o=
      "]], Line3DBox[CompressedData["
1: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
5z785/8HiYbbnw==
      "]], Line3DBox[CompressedData["
1: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
js92Xvv7//z/AMxmrAs=
      "]], Line3DBox[CompressedData["
1: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
z334z/8PLKZJLg==
      "]], Line3DBox[CompressedData["
1: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
85L//H8Pu8DK
      "]], Line3DBox[CompressedData["
1:eJxN2Hk01OsfB/AhFJVKiWKoKHSVJGWZPEKpSAxKv5JKaaNs2W+LLrJ17dly
JWXfkrEkj7HUJJWxL2ObGczMN9yUpXL16/zO7z5Pc873n9eZ85zvnOf5vN/P
mY3nrlMvCJNIpL6fz6KfT5a5Hc+PRgDP5++9tp+yNyD97zME52sfRuSUEUB3
dZTS1HgY+Ndj3fWDtUsJMKGyt195PBl5RI/pYGkhAeqK9NYW0TORH/6jKfNA
NgE+jSxRObk0H/nOdTI0pQcECBqqtxe0PEdOY2XvYt0igH5KWojqjRfIP+d1
rjrrQACOp9OUghUd+VTk7d1H9Qhwr/LyD7mnDch/fHTv/iBBgDspo94TFAby
lB/mvsx2ARBtj/G7WP0WOQzjPxhPEYBAbm7/7Nx75OmvM9u2HxcAVuyAbaIu
E/lzLf3bbisFIP+Qg39PeyvybHHHSOFGPjhqX5eZ5tiOXHn1KMvFmQ8eypAX
TUl2IndcOMW+t5oP1paFlOxP7EJ+Wmx4hU8+DySTDheYU3qQ36pO3ZliyANz
fgadLcxe5C6bdf7c3DkGoqPUtUP2s5BLKx81v3BqDPz+rStCh9mPnFrU2jDL
HQVFcF+Buv4g8lT5DO5Z+1EQbcMb8rYfQt5uAoZUWkeA6LU3wo7Sw8i19P1d
Px0eASlrTg80V2NnqKrFFj7jAopJu0iCCxt5nouQtp0iFyxQeF0SkhzklcaB
1hphHDBXG05lP8W+crmlPuCwgUbT7ol7plzk+olPzrw3YoOitj4/r27sO7lH
N4lGDYNUc7XeyesjyHW9nXIr+4bAlmpSYusC9gUa87S3xhBIvN45W3dzFHlO
reZk3dAAyHnuvydi0RhyeZ9l3dae/UAsRJbH8MU+sddJSnsJC9xtO1Cly8Me
Rh1Z13yjF/xHOEKs7QQP+RmpG7Te2W4gn6Pv1vsSe/TH7KAt1l2gWqHEolCJ
j9xMz27OvaEDRAaf0vIKwN5S023iptMOxAtX3Ax8h935eJt1fFArYCSsf5Ou
IEBucsytRIloAaWRFSvYjtj7jKjv06zfAwXzLJ3WLOwwptZlVU8TsA4yvLyP
g/12YSB4FfsaXCeriKqsIZBHerTnZws1gGRp09Bv+7CrMjbJUrJqgbfIiqmZ
C9iv6li6xpZWAfrm6YjOQOzHp/8WrA8sBbbxDQozydjXBQgJCW0uBg5rM4Wf
PMaucTJtjBOZA3YyHfWKc7FfUN3keQlkgMAYaOZTjD0sUnPOYjAeBLZNXaE+
x749+dg0R+ImUOZvbdSlYa8rMvfzuewPHbeEF5j84p81RllXQBwsl5jyePTL
OoHp/k6ZzHQoUUbjOJRgN3DctfHU6mz4D8urbFE+9hltjf84WxdBF/vgutpM
7BKk3bsUr9JgOas/ixyDfaNy+NY+2ktYWzUZ6OOF/frFU00GznWQ/mm/KdMa
e5yq/A2HF41Qhptq9UEdO9nicfCc2RuYOsb+0/Q73t/mKf0RelIzJF9IuGT6
CnuawdL0vS0f4FS5EhCPwB6y26RPIoMJExP4q9j7fzk/pN8sFPXaoNU5++GJ
f/D5TAHgjtZkO1TrTq6Zy8YeSI/c9jChEy5MjxyPs8A+5cezXyPfDStF+EfI
X/C8NIrfd1hU3QONlb77XQzH3mqitX9Mtw+6bTdWD1fCrnrn0OB4DguWP1K8
K1uB57TkoKIwXXMAmlQ1brPai11rgq755cEgLNBa7yrZiPMhfcHVlxs6BEu5
RaKpFOzgiTpj7Z5h+JhaIZ5SjnNG8+aT5V2sYWhyJrNaZgf2rvBPNrxwNhTu
EwoKeYBzbIkS/17FVg4U7+uXFBfB3pbebPSYyYHt0Y7FLadxTvrXnFSXc+VC
C1aMsFU5ztsf998YTy9w4ZlgP9eba7Gf2Wr+fl/cCNySxL9k5Yhze89JbXXj
9aPQgGFeXFSO8x+2+Kh5JY7CNsu4hcCl2P9+MeHqLjcGFf+mJ0okDSBXfE4e
WvhzDK69seHdsm24dw5KHRBbWMyDC4P76yqS+5DPJiYcOuDNg1OSEgUGS3Cv
1RiqnFPq4cELwtGhoWHdyP8psFV7RuFDQs69bt0o7tO43kAt+1g+VNlhUv3p
eAdyyYgdDg5sPvSfcU3KaW5DPjn5NeKkpgDu3bWpO3Y97vG1gQmxmZ4CqOlp
dFb5TgtyuWmJuGCaAApozbyGO+/weciohCfGBbDDSOI2RbsJ+R+iD7e/kifg
xqmDDus/v0KenKbuKn2IgBb+LJLp+Xrkdy/omJVeJWDoPyF1l5fXInffylDq
CCVgmfMA3amjArmdsv1OwV8EtLXY/FIprwS56cJVj9wsAjqzTnQ2PMb3roEM
15VvCwhIO3OWHjv5BHmwZkFv0jMC5g03pF+iPkRuI5ejcauMgKK3NH8zDYnE
PV5ea+1LI6BiybOG2XIq8nkftSeMn993Nos0dum5B//1v3bx1H4vJSDpwIR8
HUxCrkOjZz0oImDUekn97HuPkctk6/VH5hBQzce2XZSei/xV6kWpjEcElAsK
Tmd8L0Z+zmJbbmskAfeQaqfulpYj325w2/KrKwEZHQcY2tM1yOvTR1r2HCHg
ua78VwfF6pFfN7iw3WQzAfXe7hvWtXyFnNus8LpxSgBXfT3E9u57g/yIjV/q
TLUAqriei+YqvUPu5kvf7+r/81y5L5Wj2rYgX1Zo4TWgJYDrjMJTRJa1Itdb
4/9XqYAPP4eJSnLT25B/fqQ44RvHhx+cZnalUjuQl6p3kWP28qFSWZyUAbsT
+WXiynZPNg+qJruX5Z7vRr7o2CK1Nb48qCntpX1DqBe5S1hdSNlKHpTeWt9t
GtCHfBWjUmRT0hicjwso81jRj7zb5v5nKnkMnrdotTkdO4A83k8kUy9zFBIc
2UuvpweRKz1ymhf8zJM8UgmDSRtCvvKINUGJH4HdThXP1p0bRk6J6itRXT4C
3Z/nn58WZSO32Sw/I+zJhcSRoBPLSrFHqpNl5IY40DB8njR3lIN8QHuNgrce
BxZfjQvkf8FeLEyNnUlmQ3CPrjgRykXuKad9TfvbMHx3PdRip8wI8htT8S/k
TYchhUlm9Odin1GMci5MGYJeWmKTthqjyLPuKDgPVw1CG7eiL6MV2Nt0VQT5
lAFIG4RyDbpjyLeYSLbUtbDgV0M7K2o+dpDLbgox6IMK991F927i4fW/UbR3
1vbA5tC1hRZh2LddH6efMO6GTzoNLz8QYH8/u96d+VcnDDv8m2SwOR+/j7Xx
3nqpDli3/HJ98SPsgKJoWX+6DdpZPmZtmMWu7Wf3waeACeWeRrjNGAuQf99E
O7NSugUuVQ6wNw7CrpbZmvo2rxlOhfLLpBqxGxueiWOdfQOvCUQSF75in474
VtTU1AjNJuShuDqBPMj2JNvHoA6SJ2XCq22xb+Q8m9jQ8RIu9fDXm76BvbmO
IyqVQIO+NlKu0dHYM9tcTt5LLIIaPJKceyZ21WXzQu3j2ZDZtGKfUR52aZ3F
zPx9GbBaaMc7r2LsaVcZOSsXJ8CbfSLhh59jF9sqdkV2800Y9uSY9c97I/Id
TyPeRE17AyfvND+rXzzRe1a99G4sYBr0b6j/ZZ0fqSQXM+lH4K2st9/uEuza
GtKnwy9mg743GTOVv7znSmsp88/xRcBJ7HfJG7/8riB5zaXks6WA0Rq6yjoF
+y7ZTndTySqgINlxyTIIe96PZZV2GbXgkGuB5xYn7Isbq03XzNeDd0epYhQj
7Aujj5oOGL4GvuP+LTmy2Kk1q7W9G5sAyzJE3o+L93fHn9913i5+D2avSO3T
KMDet25H/MqGFsCq0aCSr2Cf1VDccdu7FVwb729X2Ijd/I9IzU3i7eDiHWZV
VSc+n9ucwJxneQdojJ0/r38Le4zGA+GXxl0g833NckMV7KzFg5G9gm7wN9G0
eCMdz0uTD9nX624vaJwdviZ3DPv5uxctNL/1gddNZstsPuI5vRlaarE4tB/Y
WHq7m3pgH37tQFkyMwCCAs4pO83jHDA0XbJgsXUInBoKkvEJxM79EvZQnzsE
yOctnh2ewznjduJzeFzkMOgKWGY16Ya9edqUesmQDUYNFFSjenGOqUwF3FpE
sIHHBmh72BB7+LC57P0gDnBh+5X55+E83LJgOf5NhQvuBXSQeSK/5Kdr2c3E
Ki5oJwlKC8/jvP24Z6nhrf0j4FO5i7dNPc7tdTUeB/I6R8CqmFWZD1dgr/92
sqrRbhTEWuj01Dni/O9X89PoHhwFUZ7mh7Ydxn0Rpyz3mmI3BpiLrdMpA7h3
ZMpFPRiMMdAQ9CLrkjsLeTStoTaJwgPtvzWyDw7hXuNM6MuXZfAAWfZspe25
Hjx3T9uTKiT44DYwupD0sgt5rs0JYtEVPqiejA5fsR736bQR53RlNR9wHrgJ
W0W243uIEVUrZoUAvNQvWFrQg3t836HYkKvHBEAiyZhiZMDE+3Jd9EFFvACE
SB2VaD7yAfnUB91h1zYBSL913KSY+Rb374BSsZsYAeQVKujnwxh43+2evQ3Y
TQDVj0NV5JkGfI/68PDHgdMEyE91mBtxpiM3Eydl1AcQoFjejNSpU43nMaxb
KCaBAHeqDNS+kcqQ10VkpDGzCNCWFqTV83s+8vtjO/Y6FRJgMsHtmZ7qE+QK
ZnqTS0oJ4KE+YwAyUpBXgWCntDICXNTeMy//OBz31///b2wxLPPcfsq+5l//
L/KPu8Y=
      "]], Line3DBox[CompressedData["
1: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
/x9WfYOl
      "]], Line3DBox[CompressedData["
1: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
R25XDQ==
      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiFPcUmghEU5FQlo5ioSpJJQtyl62VCqy
ZWcs3RjGvjdmmOUplCyp7I7t3//Fue/m83nefF8898wz1/W7rpmN9tfMLizj
4eFh/bqW/7rml/7/IoDgGkdlz/ETOmlGp77eKhyGHvlzuqK/XF6185KLjDf4
zwsVi8S15gnQK/zj3H3px8hF8o6M800TQGp0OL9w+gnyHiu9PbHfCbBFmdXC
s/s58kUth4RWFgH4NX7sMRZMRb6D8XrbaAUBQhqOvY3If4f80ZN3GU7xBNA5
STH/tpiHfJ3zqdJn1wnQqZwYQTCKkE8NVRrTtAgQfTnVo2u+FLnNj9C4f+a4
wN6i8onj8grkbfl9WWUULmAcDCtr+FSJ3Eu02NbqKheoXM7ko/ZRkfPTHwVk
yHBBX9OCRvL7GuT/bsnZFlHJAQ7sB7yyD2uRTzcn2B2x4gBKQOLnAM965Kfd
qb3JE2xgtZD3Ml+nEfnNAF3TF15swPtwULZwczNyzhaHEgleNnhd/1V0aroF
OU/SxHcFfxb4uppcHmPWhjzhKvtb2GwPSEl/Xy+0tx35vr/DU99e6wHrY2U3
863sQB7u6rJlbWc3kBAyb4n6jP2RusZRS9VuoHH8EmWc0oncwEFzbk8MEyxw
1YoO3v6AHFyvWu3whQEC2wjli4Z05Gpv/n6tt58BPAJN4jJ5upD/SZJ7uCKs
CxjfL16/LQf7pfYRhYOtdGAQ/7dQ+lUG8qFvm4/zSNFBktMOTT5xJnI308XA
R4YfADOH5TlSgf2VCbnBxqMTJEROTg1e6Eau6q3u4Z7dAYL6Niu8nsXODSr/
3tbZDnjn+5VnI3qQ+6/JXLjM2w6sQlNd7v3BQh63punqzp1tYBdnWFIgHvvh
OFXJgtAWIOqcaqC2jo2cpNt2K/NDExBReqCSH449p2huWf9oAwiQd604LMBB
fqRkJNR3Uz24mxbytukf7NftJNK1T9eCz00sin0j9p9GF3r+OF8D1F2dIkWU
uMhdb9nqKwdRwcnE4Ch+MvbQrWwhc99KcLBJ1NSzFrvPizccCx4IaK8njWVX
EciLjsWJ+WmVgh7VSYfHh7B3CFm6z8kWgZVGhnVkMva47YGOVX/lAe34vVYC
ydiLI2vEhOlZ4KTlaVebauzN6W8Vcv3fgJV1J+20PmI36JKvtHv1EpzKWqOo
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
z/8Hm5XKsg==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Hk8FesfB3BLKFuqG2UtdMsSRSHhUbaiSLJrkUIlibiWCAdZQ1mSZM0R
su/bc5xz5thK2SVdIrLfFq4l6dcfv/s8/ph/3q95zcx5Zr6fz5zZffnW2ass
TExM739vrL+3EDcuP0FVBlAx8x02iVTWEBAOiIwg/QMdJRmPXI8wQPcnbVbt
pKvgP7drUR3yVmYAQsHjYupjd+TSNX0JHxQZwD5Y6Vbnc3/krbnbOCvkGGCG
JfzBfr8Q5OT5MdLiLgYI4ont3VQSg3z6XVeFAS8DKHq+PV/BloBcydArQWOe
AA89kyIlmpKRu7D165F6CVC3YlpZFp2G/OmmzvHrRQRo9c4ZyXLJRP7t3dFK
4WACiMhdHRjQyEbeLyvV7mNOgBitlQ/2fTnIz1JMGRa7CHB9r2yVfXoe8vlf
9zSffqaDgEtWdwUOFyC/TKMuCeXRQY6q2KtLVkXInQ2mDvNdoYORJOcV4eJi
5F376Tx0YTpo2RxyNW6mBLl5bISCYCsNOIXkcnmolyEXaB+7kuhGA4+uFxwt
CyxH7t4+X3ZIlAZqTCgve/IrkI/Xqhk9qKOCPe0xHxSmKpEfcdacottQQd4B
0yf+3NXIY6MvrrB9aQQzTby7T2nWIL8mFHvD2r8RTOczDRo71CI/cSWdY3Jb
IwC97O8/uNUhL916RLo1iQJKzliFu0bXI/ct+K77TIICZGanE3tiGpA/et/k
umQOQVX0UgVzCETulh1NyJ9qAGnn2M8MaFGQ7wm8xt+lXw/kaqp8BKqwp8wJ
LGyUrQMe1d/q4w42Ir/SZHGyi7MWKE0XPZbLwl6tbEoK+LcamB8vC2njpOL7
y1yQuUqrAqHk0WIDd+xazuT04tRKIKjG93hXN3bl+c+cZJ8KoPEtuaJMloac
G+hkjKuUg73+7dod97HHuqumxLCXgRsx/E+5+rELrQVwSZaXgN0eNzUrpejI
d33VEDnvXgyaZZ7/MeOCvebLBy+oXATuFpnsny3G3sH2auVL+UtgfFSkYvUb
9sVs7u1REnmg0Pfx9VBpArll8OmfzWdzQJSuUD2bLfaTPvaGwaHPgYtfPEdx
DPZATvWRpYkMcFdpf91EJXbWELWdb7jSgETEjoUXg9jtvZJk0iqegMFm0fqQ
ZewJp27puF2PB1qrXn8W8jGQn3llcJ/FIBpETWVrbJTE7nFvUqp6LAwwD8sK
/ZLG3m6i8WjcLwgYn5i58PwA9mkeruyLOr5gOlHzzonD2I/FOK1+Dr8NirVz
L1xUwa625N7utsMCZD5jgPEj2MUivyeZrZrCJcUrv+bWOZM4e7K5ugt0TPCk
Plt3HNlYw5LsFW8YofOvIosS9ja/2aOnjUiQ3HY7u/zguusJTXX9LhYGnw00
FI7IYOcTdWHn+hELJbNnNn0Rxn5aMSaCpycRioaN9dLYsfedsFoyiEqBNw2C
Spam8Dr/1UqK3O6cDlNChfwK27Db+IA6Dv0s+COotG4hE/sGHocFuy/ZsMVc
3tXNC7v+x1X3zUEvoIuO+us6fextB069+noiH45EPSvz3Iq95f3cdHhfAfRp
PpdD68fPIX+9g/K51iKYHyO8KTUOu8rx3J8zIiXQREvSWuzUuv1bniYamJXC
iWrbmhhW7OA0c+WnzDL4Z5Tz4fhCPEcF8OukfG85dFp7s+eEDfYO3ZfXbH5W
wFwToxBBduyvzZ0dU5WrIF998u70TDzXF1tFbk6ZVcMYPZlaWS3s1g95ex7c
r4F9G6Qn63pwnlipPE22TamF7EOinHw3sLe2B84cJ9fBEWU+pktrOK9uRd5h
5afUw6VNejtYg7BXbS217G1ogAKjb7grebCbDdpfT2iF0FSiqtl+K85Jk0cS
MVeuUCA7baC5kg3nKhzt8F7spcAx9zSrBlacwx/8dcUrDBuhZeqlfec+4Twv
CnmVcaCmEX6TJxZYO3D+j7kkWziKUeGlOene7jrcF/I6tW0eoVSYrS7S5hFe
hTzN2I/56xgVRosfJ4fY495RqC0/KK9Lg407yjn6JHBPKRzPFHJJpcHl0uCx
jR9x35U3JL2fnaXBRV4VxdGCUpzbN4dcmtTpMOLGCf+X53Fv7tgy561PosMB
X2dvM1Hcs3aJWW9yqHRYl8lukUwtxH3tLGjGwkLAl6fG9Qw4XyKfmPiZvKxM
QF8KPynYKxd5ri159q0TAZPHykO8csn4/p5ZaGl5TMA9RpdrRNme4x63Ofej
s4GAQ6MCh4QcM5CHde1/bTNCQNtavzdSQqnIs6f/dNq1RsDoKgvyR5iEXOaZ
9kkDfgYcrLiYNDf1CPcsWfA08z4GPGzZER5mHolzmP6NpiLHgOKPCx7cWMLv
XUcn2z6IKzJgFOmJ2XxiAJ4jlpsb1pQY0JKr6KRv0F+4lw1Sks4cYUDH5OJn
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
/W+TSOWG//x/UGWR9g==
      "]]}, {
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, -1., 0}, {0, 1., 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
       FontColor->GrayLevel[0.4]]}}, 
    {RGBColor[0, 0, 1], PointSize[0.02], Thickness[0.003], 
     Point3DBox[
      NCache[{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}]], 
     Line3DBox[CompressedData["
1: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
      "]], 
     Line3DBox[CompressedData["
1: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
      "]]}}},
  VQM`VisualizeVector`QNeedleStyle -> True,
  VQM`VisualizeVector`QHeadColor -> Hue[0.375, 1., 0.6666666666666667],
  VQM`VisualizeVector`QShaftColor -> Hue[0.5, 1., 0.8718115663020503],
  Axes->False,
  Boxed->False]], "Output",
 CellLabel->
  "Out[1341]=",ExpressionUUID->"94bd4366-2483-4302-9579-021acd7817dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVisualizeSpinor[QNormalize[(-1+I) {1 , 1+I}], QNeedleStyle->False]\
\>", "Input",
 CellChangeTimes->{{3.39029386237111*^9, 3.390293897491084*^9}},
 CellLabel->
  "In[1342]:=",ExpressionUUID->"1afbc497-861c-4990-88a2-6c8f5c3fc349"],

Cell[BoxData[
 Graphics3DBox[{{
    {Thickness[0.001], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Rational[2, 3], Rational[2, 3], Rational[-1, 3]}}, {{0, 0, 0}, {
        0.6666666666666666, 0.6666666666666666, -0.3333333333333333}}]]}, 
    {Hue[0.375, 1., 0.6666666666666667], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.5546270030561026, 0.44537299694389737`, -0.25}, {0.5115440440683197, 
       0.45691704101221703`, -0.31307782983892674`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.5115440440683197, 0.45691704101221703`, -0.31307782983892674`}, {
       0.45691704101221703`, 0.5115440440683197, -0.31307782983892674`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.45691704101221703`, 
       0.5115440440683197, -0.31307782983892674`}, {0.44537299694389737`, 
       0.5546270030561026, -0.25}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{0.6666666666666666,
        0.6666666666666666, -0.3333333333333333}, {0.44537299694389737`, 
       0.5546270030561026, -0.25}, {0.4884559559316804, 
       0.543082958987783, -0.18692217016107326`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{0.6666666666666666,
        0.6666666666666666, -0.3333333333333333}, {0.4884559559316804, 
       0.543082958987783, -0.18692217016107326`}, {0.543082958987783, 
       0.4884559559316804, -0.18692217016107326`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.543082958987783, 
       0.4884559559316804, -0.18692217016107326`}, {0.5546270030561026, 
       0.44537299694389737`, -0.25}}]]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1:eJxN2Hk8FesfB3BLKFuqG2UtdMsSRSHhUbaiSLJrkUIlibiWCAdZQ1mSZM0R
su/bc5xz5thK2SVdIrLfFq4l6dcfv/s8/ph/3q95zcx5Zr6fz5zZffnW2ass
TExM739vrL+3EDcuP0FVBlAx8x02iVTWEBAOiIwg/QMcJRmPXI8wQPcnbVbt
pKvgP7drUR3yVmYAQsHjYupjd+TSNX0JHxQZwD5Y6Vbnc3/krbnbOCvkGGCG
JfzBfr8Q5OT5MdLiLgYI4ont3VQSg3z6XVeFAS8DKHq+PV/BloBcydArQWOe
AA89kyIlmpKRu7D165F6CVC3YlpZFp2G/OmmzvHrRQRo9c4ZyXLJRP7t3dFK
4WACiMhdHRjQyEbeLyvV7mNOgBitlQ/2fTnIz1JMGRa7CHB9r2yVfXoe8vlf
9zSffqaDgEtWdwUOFyC/TKMuCeXRQY6q2KtLVkXInQ2mDvNdoYORJOcV4eJi
5F376Tx0YTpo2RxyNW6mBLl5bISCYCsNOIXkcnmolyEXaB+7kuhGA4+uFxwt
CyxH7t4+X3ZIlAZqTCgve/IrkI/Xqhk9qKOCPe0xHxSmKpEfcdacottQQd4B
0yf+3NXIY6MvrrB9aQQzTby7T2nWIL8mFHvD2r8RTOczDRo71CI/cSWdY3Jb
IwC97O8/uNUhL916RLo1iQJKzliFu0bXI/ct+K77TIICZGanE3tiGpA/et/k
umQOQVX0UgVzCETulh1NyJ9qAGnn2M8MaFGQ7wm8xt+lXw/kaqp8BKqwp8wJ
LGyUrQMe1d/q4w42Ir/SZHGyi7MWKE0XPZbLwl6tbEoK+LcamB8vC2njpOL7
y1yQuUqrAqHk0WIDd+xazuT04tRKIKjG93hXN3bl+c+cZJ8KoPEtuaJMloac
G+hkjKuUg73+7dod97HHuqumxLCXgRsx/E+5+rELrQVwSZaXgN0eNzUrpejI
d33VEDnvXgyaZZ7/MeOCvebLBy+oXATuFpnsny3G3sH2auVL+UtgfFSkYvUb
9sVs7u1REnmg0Pfx9VBpArll8OmfzWdzQJSuUD2bLfaTPvaGwaHPgYtfPEdx
DPZATvWRpYkMcFdpf91EJXbWELWdb7jSgETEjoUXg9jtvZJk0iqegMFm0fqQ
ZewJp27puF2PB1qrXn8W8jGQn3llcJ/FIBpETWVrbJTE7nFvUqp6LAwwD8sK
/ZLG3m6i8WjcLwgYn5i58PwA9mkeruyLOr5gOlHzzonD2I/FOK1+Dr8NirVz
L1xUwa625N7utsMCZD5jgPEj2MUivyeZrZrCJcUrv+bWOZM4e7K5ugt0TPCk
Plt3HNlYw5LsFW8YofOvIosS9ja/2aOnjUiQ3HY7u/zguusJTXX9LhYGnw00
FI7IYOcTdWHn+hELJbNnNn0Rxn5aMSaCpycRioaN9dLYsfedsFoyiEqBNw2C
Spam8Dr/1UqK3O6cDlNChfwK27Db+IA6Dv0s+COotG4hE/sGHocFuy/ZsMVc
3tXNC7v+x1X3zUEvoIuO+us6fextB069+noiH45EPSvz3Iq95f3cdHhfAfRp
PpdD68fPIX+9g/K51iKYHyO8KTUOu8rx3J8zIiXQREvSWuzUuv1bniYamJXC
iWrbmhhW7OA0c+WnzDL4Z5Tz4fhCPEcF8OukfG85dFp7s+eEDfYO3ZfXbH5W
wFwToxBBduyvzZ0dU5WrIF998u70TDzXF1tFbk6ZVcMYPZlaWS3s1g95ex7c
r4F9G6Qn63pwnlipPE22TamF7EOinHw3sLe2B84cJ9fBEWU+pktrOK9uRd5h
5afUw6VNejtYg7BXbS217G1ogAKjb7grebCbDdpfT2iF0FSiqtl+K85Jk0cS
MVeuUCA7baC5kg3nKhzt8F7spcAx9zSrBlacwx/8dcUrDBuhZeqlfec+4Twv
CnmVcaCmEX6TJxZYO3D+j7kkWziKUeGlOene7jrcF/I6tW0eoVSYrS7S5hFe
hTzN2I/56xgVRosfJ4fY495RqC0/KK9Lg407yjn6JHBPKRzPFHJJpcHl0uCx
jR9x35U3JL2fnaXBRV4VxdGCUpzbN4dcmtTpMOLGCf+X53Fv7tgy561PosMB
X2dvM1Hcs3aJWW9yqHRYl8lukUwtxH3tLGjGwkLAl6fG9Qw4XyKfmPiZvKxM
QF8KPynYKxd5ri159q0TAZPHykO8csn4/p5ZaGl5TMA9RpdrRNme4x63Ofej
s4GAQ6MCh4QcM5CHde1/bTNCQNtavzdSQqnIs6f/dNq1RsDoKgvyR5iEXOaZ
9kkDfgYcrLiYNDf1CPcsWfA08z4GPGzZER5mHolzmP6NpiLHgOKPCx7cWMLv
XUcn2z6IKzJgFOmJ2XxiAJ4jlpsb1pQY0JKr6KRv0F+4lw1Sks4cYUDH5OJn
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
/W+TSOWG//x/rUUkdg==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiFPcUmghEU5FQlo5ioSpJJQtyl62VCqy
ZWcs3RjGvjdmmOUplCyp7I7t3//Fue/m83nefF8898wz1/W7rpmN9tfMLizj
4eFh/bqW/7rml/7/IoDgGkdlz/ETOmlGp77eKhwGHvlzuqK/XF6185KLjDf4
zwsVi8S15gnQK/zj3H3px8hF8o6M800TQGp0OL9w+gnyHiu9PbHfCbBFmdXC
s/s58kUth4RWFgH4NX7sMRZMRb6D8XrbaAUBQhqOvY3If4f80ZN3GU7xBNA5
STH/tpiHfJ3zqdJn1wnQqZwYQTCKkE8NVRrTtAgQfTnVo2u+FLnNj9C4f+a4
wN6i8onj8grkbfl9WWUULmAcDCtr+FSJ3Eu02NbqKheoXM7ko/ZRkfPTHwVk
yHBBX9OCRvL7GuT/bsnZFlHJAQ7sB7yyD2uRTzcn2B2x4gBKQOLnAM965Kfd
qb3JE2xgtZD3Ml+nEfnNAF3TF15swPtwULZwczNyzhaHEgleNnhd/1V0aroF
OU/SxHcFfxb4uppcHmPWhjzhKvtb2GwPSEl/Xy+0tx35vr/DU99e6wHrY2U3
863sQB7u6rJlbWc3kBAyb4n6jP2RusZRS9VuoHH8EmWc0oncwEFzbk8MEyxw
1YoO3v6AHFyvWu3whQEC2wjli4Z05Gpv/n6tt58BPAJN4jJ5upD/SZJ7uCKs
CxjfL16/LQf7pfYRhYOtdGAQ/7dQ+lUG8qFvm4/zSNFBktMOTT5xJnI308XA
R4YfADOH5TlSgf2VCbnBxqMTJEROTg1e6Eau6q3u4Z7dAYL6Niu8nsXODSr/
3tbZDnjn+5VnI3qQ+6/JXLjM2w6sQlNd7v3BQh63punqzp1tYBdnWFIgHvvh
OFXJgtAWIOqcaqC2jo2cpNt2K/NDExBReqCSH449p2huWf9oAwiQd604LMBB
fqRkJNR3Uz24mxbytukf7NftJNK1T9eCz00sin0j9p9GF3r+OF8D1F2dIkWU
uMhdb9nqKwdRwcnE4Ch+MvbQrWwhc99KcLBJ1NSzFrvPizccCx4IaK8njWVX
EciLjsWJ+WmVgh7VSYfHh7B3CFm6z8kWgZVGhnVkMva47YGOVX/lAe34vVYC
ydiLI2vEhOlZ4KTlaVebauzN6W8Vcv3fgJV1J+20PmI36JKvtHv1EpzKWqOo
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
z/8H+HVdMg==
      "]], Line3DBox[CompressedData["
1:eJxN2Gk4VdsfB3BJhtxouKVBmpBEyVwHK0pFfxkjDaYkQ1IZr5kjhMyFSBky
1hVxIsNKZjIds2M4wyZDZYjKUP7e3LV6sd98nv3sffaz1u/73Wfvs3DQu8HO
xsZGWz3Wrh47tinpvY0igKfU7mFK40WV4zqtqQ7kMdA2w/l116ovr3WqHV4m
g/+ch3esUSOCAFHWErZnl2OQC9Sp358JJYBDldHoZGsy8v5LwtclgghgVP/o
KaUtHfnnjBsaTu4EeLOmQSZ49F/knZPVixI2BPBw8QkgmRciz7pop7ZJlwD3
gxV4qwtLkIeEHU15KEcAfbHfbL8yKpCrn255+r/NBCi/fvsvt1+VyGc0KWeO
T7AAQ1byu+DjauTTznZRK5AFLutbh27/VYu8yn/k3EIYC5xJd3zfE9WAvHRs
5i+3SyzwkG9Dm8FcE/L0Ocdp970soH/LKVbjdAvyebY1eaVDTBALudl1TduQ
7z1c3/U+iQmy41oEVcntyA1dbLVUdZiAe+VeJHspFTl9U9Q5aTYmmK9g1Pz+
1IHc8oIeIZnPANLb7D+xljqRJ4eOzrcaMoBz3c/QR/u6kf+T+9zp8G86WCf3
zkbpSA9yx2CPnuAEOvjgcGvHlvO9yG0/r1yTlqYDKe7iAYGrfcj9NIOOvEoc
Bg2q9TeSDPrx+k6VdGWUDIGYpqro9VdoyNsNLqRNDQ2C6ZA1gKQxgFza/e5n
8ppBsCBgLCskMYg8Y45+oJBnAJzac7kufucQXi8vp6sPdtHA/UMqhmUz2DWD
n685sLkfHFMmYuKow8g3J3ro+nD2AR/juEBjfTry70Vz1g2cvUBCKvaEdgH2
5gaHtfsmu0GYu8bM4N8M5M+kdw2kDnSBAPXlo89vYZca3qJn1tIJ1K/q8CZU
YK8rz9MrSOsAfjS3hfHNTOSqg5IacsFUoG446i12Dbs62ebMN+12UBorVVuW
hf2yxvHv68TagIIiizt1AruUmq3xMY4W0Kl6bKlBlIV8SxbBnePdBJzVpjRW
LLBzxwtzmO9uAOLfA+9YPcb+7kFnlYl/Leh7kG3aUY899al0g9mXKuDfdNV3
eg77sf0e7hM+laBJRMOGtIPA8778xn2ooBz4j0QPqJCwG1Yr02KKiwGX7o+I
uYvYRzjDR8La3wDa9F9tFnbYB5eOuN6ffwnezXJ5aXphn51R81H9kQkOi0Kz
MjL2cyIcqVE/UkHB6L3a78HYx1sKVry2JQJqkame6kPsst9+kedJkWD48kOw
OxL7FVak8fX/uQCVry4LgVHYabKyZeGXnGBW2frNEX/4IxubpVC+cKhuxT1u
9Md1xhNkwoJ+xMO0XLLClz/uK0/9svbpUAqMO60CZx9gT+M6NEk6mQmn9HiX
wwOwB+lpepamvYbTx2vKS1ywszXb/VzLR4H3PzoQshbYb46vbNxgXAp9b6zY
eZ7DviNe7rrGvvdwu9HR6ODD2IW/BZ9Or/0Ai0kh2jWc2I9ZKelan6iB7zg9
sm4P43V3fwD96El1UGXh6FeZQuwbjWcHWRKNUI+0U3i/L3Yt9wlyTshHeLCS
PvFOE7vRynoLry2t8GcDt1kuL/bGHt9ba6vbYCorZTqmHu/zKaHcnq0j7fAx
By339n3ssdlczs07OqDuXUYWRQF7yAcej5NynXCqWXn78wk8jzc9R4RsznTB
++sOfRp+gn3kungLyaYbznKZUyoA9oFpR4cdjj3wH7+SOY9RnA/c71ak1z3s
hW/KYIacH/Y+sPXGnvA+KHSlMMpLCPvLglfiEgH9kO/RoEe7I86l8zRn0w3B
NHhU57b2pSicY73NPzOaHQcg+7O4+BsUnIeMB3dcH9kNwrZj6ZH7K3F+7vtd
+C/VcAj6n9mU5lWP8/ZSdrMOQ3wYNgPz5so+nM+kuNSlkxx0+FSUqlvXivP8
5MXFK29v0mFhO6V2pQ3nf/DQWU+LGjpkXVg7ZdOO+2KmcCdfoigDGvq8dhsp
wv1y+lqfq6AXA7p6hVuXZnYhX3p9jU+ymwHFT32YEfTCPeX+pq+9RowJx0aG
VCz0cK9J/84fs77LhFYqjl82KeAe1CoIZWmVMuG8S2s++wru0yrfR5SUJSYk
C71kLvzbilzs74i9Z+RZMGHzoVppy2bkis94to/eYcF1XV5Z7cONyM3N2Ba7
U1mw2COaweVbj5xyBpqXd7DgoRD/8aTRGuRDFi05t5dZ8NfOoG11jlXID/J5
PU/ZQ0DONbznsrnxe4g22X404CQBe/LJ/1NpKEPODzbayF8m4AKthqzU+RbP
10Gp7pg7BNTbspaeersAr9cll9c/fAnomhK9bHkiB/kv6rhTcSABC1KVnnSr
vkBONrYsOR1KQC2OtFLuc8+R+zqtgO5wAlJ6Oqedqx4htzuY6LkcSUAle6EX
bybu43lxmxKhRBFQSjnpiHPDeXx+aAS7zKpfnCmteHbXH/7nCS8Ef3hHEDDM
UZ//kWAMcqE+s8dPwgi4hkP6KlhJQl4+dlltTzABW7lqvwbR0pCfDZWXVPEn
YId7muQ2+Wzk177qrA9xXH0uU4H4f+LykR+YenN7rwkB/2KrdL6wSEE+Y/vT
6fEpAnZx8q97q1yGvK3W7sSUCAGL7kH2moj3yJ2LrUad2AiY7TQCRI9VIVdI
r4wP6GXB0TuWTlPPa5AzHSeOMzNZcNNN/cFFlXrsR+HZqnss2GjeVCHb2Ih8
eGSm3EmJBffcvpepeKAZ+bYXi7zOy0x4g7SFypfZivy3m+buudX97+gKEkWW
25Br1QT/1HNjwgNBXoe+76Qiz91okioovup5LhmXtDqQS7eIGL0YYEAZo5Nd
AVadyOMXG9MJMgPaOa3xrIrqwn5h6s3KQQbcq+4fkZffjdxib5+9UAsd3gpl
iZQX9yCX9JOZkLGmQ4dJaxNKay/yrfKl15ZW80dSjDfhZ3MfcvtNW2fnwTB8
erOdR76yHzltzJeafHUI7oudTDn4gYa87DU9hd9vEJ7K53y2PXcA+Yso3SGJ
0AGopJPtPPtsELnvBUuqVTINVmSZGop5DSH3lOjsr87rhy+nGbYDF4aR76qo
eTj2og9+6Rpa4N5KRy6+8Z6BfWYv9Jq19Lniiv2WSBpt3cMeaCHgF+QyiP24
fSOb0d1uKBpWtbBLmYF8djE5nHS9C4ovxebtj8beXnw+J0+xE8on8PydNY5d
2M9PbUywA2YrzCuPyjORi1I3V5DYqdDN11Tmmjd2k0V97d7GNui5PVJnQx32
p6mHXc6ea4U7z2fRT3Gy8D4U+6eIr/Ij5LTPmXmljn3IqkSbptwIh49sUyny
xi5IN/8dN1wHlUK2rUjkYS+Su0VpOlsD78WVBj8Ywu6vkwdZ3R+gbTxJuH0d
gdxWlmNfqcR7+Nvo3pd5cey7d9w12bm1FJaZ6W8Y18DOnKvi8xSmwMYpfccO
c+wgNeNAUtVrqHt1KkfXBbvCCvNmkGMm3JE2/sQgAPtBBVG5at9USDgxxa4/
wN6Xb3GftiMR8qvby598iD3wEumVq3EknAJnbgpEYoeZl8K6TV3gJGkxffW9
EXnxkStNPvV3QYOZWXT8Hz655OnH+hEGtsZSPt354zq1ip/65q4kgHPFi+4t
f9w3vnr/1+27U8GeNYPsZX/8zifSNTDpbib42yGzyfCP5+KvtPgWWv0SuBwS
c4/wwq5vYdo+YPgGBCr/e/a4PXYXjpyTevnF4JWvZYeAIfZKzSSBxznlgJzE
6+ZAwi4c7MM9o1oJVB98DYoVxL5ktn9v51AVGCPi43vn8bpP9lLmt2nWAr6z
g/+0fMReaMToN2XVA+fOTZ6cidjJEskmH2yaQAkQHey1xG4Sksj+o7wZ0KrV
21IksVMijXXMhdqAzN4vtq8/431ue4qn1f90O5DlPbNkkYu9I57EE+FNBVH2
4pOPTbHfOjw+1v2qA1QxlV4d3Ij9k4eoxUJVJ1B7NZCcXonn0WuI8zTb5y5g
EFPJ8/Em9o8b+HMmFruBkQM5KYIfe6GCo8m+lR4QWFGez1+E8+FnZI7F3i19
oEZqT4LvBexaEuVdZL5+YNf9gRrehXNJRjuDuiBAA7Lky979czjH5K97pZC2
DoBbJw3f9vBjH19w8U1fHAAa3vuXZqRxHq6HHcaVk4MgTO80OZeE81OCFapo
VTME/Nr0uTu0cN5KumpGx8UMA2Xf+RYtE5zPtsz4qVA5OthaJlAbqI/zXIt7
NyH4mA56iyr9bQ1w/nckOn2/tkgHVO1oDtPjuC/azBR7S/QZQFHufKHKYdwv
EfufZ6hlMkCNrUKezG7cR4c6Mw4f/8UA0rFUjrJZ3Gu55lJkdg0meLLHPEe5
B/egSB3HIfnHTEBR1Hk6n9yO56vrHtfMABMklJxYH3UT9ynJziLEYCcLJNd4
SB31b0GuzR+vTTViAa7Ja9+8l5qQJ9s5GViHsQB9vmh9dXwD7hfuJHHLUhaI
sFJm8CnVIXcvVIuWGWcBYWMtmfEX1bi/XANf8/ETICPm/fPv8h9w7s38tHsr
TQB3+WiZyt0QefYprlGgQ4AAnmfcbEMlyPfEDBbRrQiQoCam6jZbiPyCsLAw
tzsBzimMP6NL5iHPVLQI6gokADX9nUG+yAvkPdVHRt+GEsDFp1VBxPoZcllJ
8wKxCAJ0qjO6CvxjkV/xTs/csvo/+fzdeFsjcgDy/743Sp8NH6Q0Xqz4z/8P
pE7pfg==
      "]], Line3DBox[CompressedData["
1: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
/x+zXRYl
      "]], Line3DBox[CompressedData["
1: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
X09+TkY=
      "]], Line3DBox[CompressedData["
1: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
5D//H2ybU0o=
      "]], Line3DBox[CompressedData["
1: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
5z785/8HiYbbnw==
      "]], Line3DBox[CompressedData["
1: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
js92Xvv7//z/AMxmrAs=
      "]], Line3DBox[CompressedData["
1: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
z334z/8PLKZJLg==
      "]], Line3DBox[CompressedData["
1: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
85L//H8Pu8DK
      "]], Line3DBox[CompressedData["
1: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
L/KPu8Y=
      "]], Line3DBox[CompressedData["
1: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
/x9WfYOl
      "]], Line3DBox[CompressedData["
1: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
R25XDQ==
      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiFPcUmghEU5FQlo5ioSpJJQtyl62VCqy
ZWcs3RjGvjdmmOUplCyp7I7t3//Fue/m83nefF8898wz1/W7rpmN9tfMLizj
4eFh/bqW/7rml/7/IoDgGkdlz/ETOmlGp77eKhyGHvlzuqK/XF6185KLjDf4
zwsVi8S15gnQK/zj3H3px8hF8o6M800TQGp0OL9w+gnyHiu9PbHfCbBFmdXC
s/s58kUth4RWFgH4NX7sMRZMRb6D8XrbaAUBQhqOvY3If4f80ZN3GU7xBNA5
STH/tpiHfJ3zqdJn1wnQqZwYQTCKkE8NVRrTtAgQfTnVo2u+FLnNj9C4f+a4
wN6i8onj8grkbfl9WWUULmAcDCtr+FSJ3Eu02NbqKheoXM7ko/ZRkfPTHwVk
yHBBX9OCRvL7GuT/bsnZFlHJAQ7sB7yyD2uRTzcn2B2x4gBKQOLnAM965Kfd
qb3JE2xgtZD3Ml+nEfnNAF3TF15swPtwULZwczNyzhaHEgleNnhd/1V0aroF
OU/SxHcFfxb4uppcHmPWhjzhKvtb2GwPSEl/Xy+0tx35vr/DU99e6wHrY2U3
863sQB7u6rJlbWc3kBAyb4n6jP2RusZRS9VuoHH8EmWc0oncwEFzbk8MEyxw
1YoO3v6AHFyvWu3whQEC2wjli4Z05Gpv/n6tt58BPAJN4jJ5upD/SZJ7uCKs
CxjfL16/LQf7pfYRhYOtdGAQ/7dQ+lUG8qFvm4/zSNFBktMOTT5xJnI308XA
R4YfADOH5TlSgf2VCbnBxqMTJEROTg1e6Eau6q3u4Z7dAYL6Niu8nsXODSr/
3tbZDnjn+5VnI3qQ+6/JXLjM2w6sQlNd7v3BQh63punqzp1tYBdnWFIgHvvh
OFXJgtAWIOqcaqC2jo2cpNt2K/NDExBReqCSH449p2huWf9oAwiQd604LMBB
fqRkJNR3Uz24mxbytukf7NftJNK1T9eCz00sin0j9p9GF3r+OF8D1F2dIkWU
uMhdb9nqKwdRwcnE4Ch+MvbQrWwhc99KcLBJ1NSzFrvPizccCx4IaK8njWVX
EciLjsWJ+WmVgh7VSYfHh7B3CFm6z8kWgZVGhnVkMva47YGOVX/lAe34vVYC
ydiLI2vEhOlZ4KTlaVebauzN6W8Vcv3fgJV1J+20PmI36JKvtHv1EpzKWqOo
O4RdsXTH0xGfRKCZrWduP4b9ZGdZM0k8GqQH6JwVm8WeJ2Ns4H8gCDgGKQn5
LmCXGJZztTzlApxGlerzl7AHBZeUkVKuwbnIB3aVv3kKO+HuMbsAuGFaw5jz
233e5NLVShwjod+8VP3af7Gz132ooDfFQ/GpgZND49ifin/ZzCf1Ek602zUF
DP92/2P6MdO9b6GuFiluWRf2s9IBAh2KOfCcYsIzqcLfnkPAVWa3fgFcVu/D
Q3qE3TaM/kRAhgKloJ/6Sjvs5PtEdIt6OXyrINvXpYgddOZP7fWrgOXMF6XJ
Q7geIHnSRsKmCkqe5p2yT8FuPlfJY2NdDXOXXfeys8Tupj5Ki1SjwXSBewyj
5dizHWKq9FXqoChBHdv9AtdtwbMtizslG+Aqymhhuyb27VkRpgNdjbCDkTtp
1Yb7xf7c4Xc7ipphu2C63o2/sX+aCS9QuN4Kb1O1Sh4QuB9B0o4dj0LaoFSZ
b82N89hD/zIKpDm3wwaay2ImHfd7VbKgZLR2B+RMiQe0HcWe9T0RfpTphOpb
4630MnFufA4128v92Anr4zT+zSRhn7M6V6f3/APcl9w+qOaBc2kyxsv0ylU6
TLmbmClYi/NNkNIk2rixC+acsZmiyGGnSovrBvZ2QaNEb7Oxszgn/cfOCt2P
ZUALN/1NQQk4b6Uk7jz00GFCvd1b3ei9OJ9/eC92sIeY0GF06OYPEna1ke8g
9kE3PK7RH1JpjHPecKl1i5l0D/RLnNw25o/nwiTlRl94Vg9c1rv7yeU0PF84
/fyCCuosuOKEqageE88j+Xw+twLIgk+1i/3HiFbkTf+85OzRZcMXBv3L1cXw
XDsn55StnsOGwa/D51wtm3Bfv5c8oizPgQKODb4z1xuQCz2WztAJ5EAh9eRt
mq/rkEe4JDPIfRxIobiH1rNpyDUblqSzdLjwZ59FdMhANfJVmRsY50K48ETG
XjmaKJ772m4h/DeYXBje2ZetLIj3BOUa+vVKaQJOymxP2XrwPc7bDRd57x8n
4KONzWLz3iV4X7KmrsnyISDk9E7oOhTiuXaQYL15S0Cl+6775YNy8RxfcVvI
tYmAs4sh4p8zMpBfzJ5//vMzAQ+/U9hGXHyFvBdu7O4f/XWuV0PmUiDeuwbc
yRtmJgkoLTZ4xsQ8FrmJ4VqzB3MEzPbhlnZ+C8N9kXjckrNIwAsWkQOnV/ng
56DZrrK4RMC3eVHZRxL1kd+KF1BS/eV9nNKl4Jw78D831Q1pfDhPwO7h8XKf
0lDkOaBsRniGgOVV0z/1HsUgHwLFwqSfBIwxnlgI73+G/IdLaOi3AQKu2p92
7nxCMvLxdxlPRdoJaE7LblWySUee2EguKX9HQEXRZYZJRA7ytIra7W7+BNSX
2nm0eLoA+bHqZjOzUwTULr4nO0ilIM9/0aLKt46AJ0+YjtxjlSOv58bw9hK/
6udNYcJMRwXycIHV6ZpRXOgT8NlahV2F/OFStXvUAS7MCCwtL+uqRt5D2j0h
/Y0DGy1JPjppNOSpvcOuAUEcuC6ceV4sqQ75F/pk7/YtHHg0XkvgvlMDcr+2
V1enS9lQnPvRqnhbE/LPq6i7juqxoY9Ke5WNQAtyYY1oFVo9C3658FG4qawV
n0vcE84DLOh+w8lRubYNuXNsb2lZdg+05Yyt35TSjnyBFp76Vb4HxunmRlXc
6EC+VkNmhZV/N/R78KdppVEn8gyT8brFYSbsm/niHyj+Abnh4SJbznEmtFgT
G1reip1+ZbX3imcMGBGseT3+CR25/uT51drjXRAKGKY3G3Uhzxu5qzKr1gVv
1bNuHxRmID81VdvWeJsONf66XWBRhN1/iHpApeoDnCqP93U7w0Re+ySz3Ga8
E64anFWb4etG7lh5StVxeyeUjD8WPZqIXfuMmzE07YC9UVG5tft7kPP/HIES
N9uh0kq1o1Ht2KMv1UbPvmyDqzdHGLIsWMgLeo7cunuzFd7c3P9pORe79c6n
25eXNcO5Mnn+nZZs5IEpjrOArwka+lqMWNdgj/CoprWtb4B14i7LXDU4yEVy
CKaFRR0c3Z8TX/8Uu/Gnux97z9LgdhEBC5c57ORJq7iwK9VQdJlAq5I5F3k1
77We2fAqWEhmMcOSsCsV8PK+DK2AX4g7hmAQ+8RNRoykSTnMoCyssFIgkM+q
7nSnK1Fgvc1dcXlb7DabNVSWVhfALrrooaNh2J+LDVoZaeVAk69fV3gXYI9I
um3yWCIN1jnsyLGlY7e2f580pP0Smvj2zqoMYydyD+TL1ifAdToiY0Lj2KWc
f4zlSETDBMN7ySKz2DNsAt2drwXBgwI2Y54L2OfiSZEel1ygbApF/9feiHMv
dsLNOc0RmPOHKbX95tnXVocHBfqDopONO/kWsXuKR3gxKZFALrRjeui3c3e5
p/4rtCMBWB7yU4n+7X12m81OOu1/CRRO69jv+u1z3fGSy421fQPazygVvPqI
vcGNQVWRygIteQpn/6rFrq8wdfNP9TzgZX5xr04y9qVKQZlgUhE4otl7sYaM
/fB2o1aZ7hJwSHKJXn0Eu3pWqlne4HvA3aVh5yvy2/eY5lIVYlkJyGZKVW+b
cT2kioVlrLKmAvJ0wvO997BfgJuWmGY1AMZ+PzmqjH20mcaTuKkW6Dn0S6/s
wvV52VWO35dUDyT1n4UvXcc+o+e5QYbTACo3DPRcEsYufUrILa2mCQj/nPa6
E4375V1QUsqdxBYwS630/CqL3fqxCL+MYhu4Zbipn5qE+9HbQCvZWqQdTEob
WC6QsAuqnK+T+dgOlHJL54qCcb8biQl3+qR1AIdbx9Z+W8C5wfbITd/t0wk8
BUOdztlgf2LdZ1Z+6ANodncR20fFuXTeZO2BfSQ6iAndT3KRwJ6kKsm7j0kH
VXJ5Qcb2ON++6ddPZAZ3geEcqRRyIc5J+DP47D4DBvhC6hbfOIVzlR3ocyHg
OwOUG1zTWaeN/WLwfrnhx0ywO2vdYLMvzuehQ5LOIXu7QTDfQPORPJzzXHr2
5drmbvCz9J9F5gieC+SL8irwSg9IdI31y1yN/dJj2RLqRA8I+VMx7JEOni/q
BbZRxe4sEF8zr3LPCc+jH1l+r93mWWDN1KYN6Svx/GqYp9GsXNlAqiKC/MKk
GTlN/1Oo+xAbSMxuSGi50oj8rsc1hvcpDjDyzXx59kE98oB+0y6eYg447F6S
p1Nai3PvzZ53adJcUDxTPqxeXYN82nYfl3yFC67xeyduGaQi7920lR2eywUH
/7CLrBbH+8AF2Sj3rlkuuCJQfqNADO8PW+yztpXuIUAqTdLvsGUZ8r96x8f3
OBHg6oAQ48CeYtxHX+9NK8QRYC8x4cyzPh/5JMtt7kw5AaYHTFv1jmUj3+dV
e1aRRYDLItRLTbqpOPeuPiaJfydAMpibWXvjOd6vPNKOp08RQE7K322981Nc
b8XN0fzzBFg7RRFK/voYz8FkazveX7+TLwY8lUwe9Eb+3/+NtOo92zzHT7z/
z/8Hm5XKsg==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Hk8FesfB3BLKFuqG2UtdMsSRSHhUbaiSLJrkUIlibiWCAdZQ1mSZM0R
su/bc5xz5thK2SVdIrLfFq4l6dcfv/s8/ph/3q95zcx5Zr6fz5zZffnW2ass
TExM739vrL+3EDcuP0FVBlAx8x02iVTWEBAOiIwg/QMdJRmPXI8wQPcnbVbt
pKvgP7drUR3yVmYAQsHjYupjd+TSNX0JHxQZwD5Y6Vbnc3/krbnbOCvkGGCG
JfzBfr8Q5OT5MdLiLgYI4ont3VQSg3z6XVeFAS8DKHq+PV/BloBcydArQWOe
AA89kyIlmpKRu7D165F6CVC3YlpZFp2G/OmmzvHrRQRo9c4ZyXLJRP7t3dFK
4WACiMhdHRjQyEbeLyvV7mNOgBitlQ/2fTnIz1JMGRa7CHB9r2yVfXoe8vlf
9zSffqaDgEtWdwUOFyC/TKMuCeXRQY6q2KtLVkXInQ2mDvNdoYORJOcV4eJi
5F376Tx0YTpo2RxyNW6mBLl5bISCYCsNOIXkcnmolyEXaB+7kuhGA4+uFxwt
CyxH7t4+X3ZIlAZqTCgve/IrkI/Xqhk9qKOCPe0xHxSmKpEfcdacottQQd4B
0yf+3NXIY6MvrrB9aQQzTby7T2nWIL8mFHvD2r8RTOczDRo71CI/cSWdY3Jb
IwC97O8/uNUhL916RLo1iQJKzliFu0bXI/ct+K77TIICZGanE3tiGpA/et/k
umQOQVX0UgVzCETulh1NyJ9qAGnn2M8MaFGQ7wm8xt+lXw/kaqp8BKqwp8wJ
LGyUrQMe1d/q4w42Ir/SZHGyi7MWKE0XPZbLwl6tbEoK+LcamB8vC2njpOL7
y1yQuUqrAqHk0WIDd+xazuT04tRKIKjG93hXN3bl+c+cZJ8KoPEtuaJMloac
G+hkjKuUg73+7dod97HHuqumxLCXgRsx/E+5+rELrQVwSZaXgN0eNzUrpejI
d33VEDnvXgyaZZ7/MeOCvebLBy+oXATuFpnsny3G3sH2auVL+UtgfFSkYvUb
9sVs7u1REnmg0Pfx9VBpArll8OmfzWdzQJSuUD2bLfaTPvaGwaHPgYtfPEdx
DPZATvWRpYkMcFdpf91EJXbWELWdb7jSgETEjoUXg9jtvZJk0iqegMFm0fqQ
ZewJp27puF2PB1qrXn8W8jGQn3llcJ/FIBpETWVrbJTE7nFvUqp6LAwwD8sK
/ZLG3m6i8WjcLwgYn5i58PwA9mkeruyLOr5gOlHzzonD2I/FOK1+Dr8NirVz
L1xUwa625N7utsMCZD5jgPEj2MUivyeZrZrCJcUrv+bWOZM4e7K5ugt0TPCk
Plt3HNlYw5LsFW8YofOvIosS9ja/2aOnjUiQ3HY7u/zguusJTXX9LhYGnw00
FI7IYOcTdWHn+hELJbNnNn0Rxn5aMSaCpycRioaN9dLYsfedsFoyiEqBNw2C
Spam8Dr/1UqK3O6cDlNChfwK27Db+IA6Dv0s+COotG4hE/sGHocFuy/ZsMVc
3tXNC7v+x1X3zUEvoIuO+us6fextB069+noiH45EPSvz3Iq95f3cdHhfAfRp
PpdD68fPIX+9g/K51iKYHyO8KTUOu8rx3J8zIiXQREvSWuzUuv1bniYamJXC
iWrbmhhW7OA0c+WnzDL4Z5Tz4fhCPEcF8OukfG85dFp7s+eEDfYO3ZfXbH5W
wFwToxBBduyvzZ0dU5WrIF998u70TDzXF1tFbk6ZVcMYPZlaWS3s1g95ex7c
r4F9G6Qn63pwnlipPE22TamF7EOinHw3sLe2B84cJ9fBEWU+pktrOK9uRd5h
5afUw6VNejtYg7BXbS217G1ogAKjb7grebCbDdpfT2iF0FSiqtl+K85Jk0cS
MVeuUCA7baC5kg3nKhzt8F7spcAx9zSrBlacwx/8dcUrDBuhZeqlfec+4Twv
CnmVcaCmEX6TJxZYO3D+j7kkWziKUeGlOene7jrcF/I6tW0eoVSYrS7S5hFe
hTzN2I/56xgVRosfJ4fY495RqC0/KK9Lg407yjn6JHBPKRzPFHJJpcHl0uCx
jR9x35U3JL2fnaXBRV4VxdGCUpzbN4dcmtTpMOLGCf+X53Fv7tgy561PosMB
X2dvM1Hcs3aJWW9yqHRYl8lukUwtxH3tLGjGwkLAl6fG9Qw4XyKfmPiZvKxM
QF8KPynYKxd5ri159q0TAZPHykO8csn4/p5ZaGl5TMA9RpdrRNme4x63Ofej
s4GAQ6MCh4QcM5CHde1/bTNCQNtavzdSQqnIs6f/dNq1RsDoKgvyR5iEXOaZ
9kkDfgYcrLiYNDf1CPcsWfA08z4GPGzZER5mHolzmP6NpiLHgOKPCx7cWMLv
XUcn2z6IKzJgFOmJ2XxiAJ4jlpsb1pQY0JKr6KRv0F+4lw1Sks4cYUDH5OJn
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
/W+TSOWG//x/UGWR9g==
      "]]}, {
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, -1., 0}, {0, 1., 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
       FontColor->GrayLevel[0.4]]}}, 
    {RGBColor[0, 0, 1], PointSize[0.02], Thickness[0.003], 
     Point3DBox[
      NCache[{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}]], 
     Line3DBox[CompressedData["
1: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
      "]], 
     Line3DBox[CompressedData["
1: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
      "]]}}},
  VQM`VisualizeVector`QNeedleStyle -> False,
  VQM`VisualizeVector`QNeedleStyle -> True,
  VQM`VisualizeVector`QHeadColor -> Hue[0.375, 1., 0.6666666666666667],
  VQM`VisualizeVector`QShaftColor -> Hue[0.5, 1., 0.8718115663020503],
  Axes->False,
  Boxed->False]], "Output",
 CellLabel->
  "Out[1342]=",ExpressionUUID->"6d92821c-7d23-4246-8fd4-615b3defa763"]
}, Open  ]],

Cell["Additional graphics elements may sometimes be helpful", "Text",ExpressionUUID->"0e5ce316-ea46-4aa8-a635-a9e396c6c5e6"],

Cell[CellGroupData[{

Cell["\<\
QVisualizeVector[{1,1,1}/Sqrt[3],QCoordinateCube->True, \
QCoordinateCircles->False, QDrawUnitSphere->10, QDrawAxes->{True,False,True}]\
\
\>", "Input",
 CellChangeTimes->{{3.39029469726896*^9, 3.390294706877055*^9}},
 CellLabel->
  "In[1343]:=",ExpressionUUID->"e5af808f-7d3f-4a56-a57c-675e875056b0"],

Cell[BoxData[
 Graphics3DBox[{{
    {Thickness[0.001], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}}, {{0, 0, 
        0}, {0.5773502691896258, 0.5773502691896258, 
        0.5773502691896258}}]]}, 
    {GrayLevel[1], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{
       0.5773502691896258, 0.5773502691896258, 0.5773502691896258}, {
       0.48763970494832193`, 0.37838569883611667`, 0.4330127018922193}, {
       0.48763970494832193`, 0.4330127018922193, 0.37838569883611667`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{
       0.5773502691896258, 0.5773502691896258, 0.5773502691896258}, {
       0.48763970494832193`, 0.4330127018922193, 0.37838569883611667`}, {
       0.4330127018922193, 0.48763970494832193`, 0.37838569883611667`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}}, {{0.5773502691896258, 0.5773502691896258, 
       0.5773502691896258}, {0.4330127018922193, 0.48763970494832193`, 
       0.37838569883611667`}, {0.37838569883611667`, 0.48763970494832193`, 
       0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{0.5773502691896258,
        0.5773502691896258, 0.5773502691896258}, {0.37838569883611667`, 
       0.48763970494832193`, 0.4330127018922193}, {0.37838569883611667`, 
       0.4330127018922193, 0.48763970494832193`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{0.5773502691896258,
        0.5773502691896258, 0.5773502691896258}, {0.37838569883611667`, 
       0.4330127018922193, 0.48763970494832193`}, {0.4330127018922193, 
       0.37838569883611667`, 0.48763970494832193`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}}, {{0.5773502691896258, 0.5773502691896258, 
       0.5773502691896258}, {0.4330127018922193, 0.37838569883611667`, 
       0.48763970494832193`}, {0.48763970494832193`, 0.37838569883611667`, 
       0.4330127018922193}}]]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1: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
KJQ2hw==
      "]], Line3DBox[CompressedData["
1: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
1K/93/8DJBHwNQ==
      "]], Line3DBox[CompressedData["
1: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
CHjMqHB7oNdp5G1R7gLtS7/3YI/UyVZ4AP+6l7+VZg5laV9T8S+7eZ8hZzcR
cuYeJGDgnpQGD5CMPFJ3nZ1dDwG/blKdllzMRP7hm+mGxc8EXBYjkyRRkYf8
436yv1clAW1nNn/ZsrMYOa+ytGFQMgF3mBcK+4+/Qz73eb/1Dl8CdkVom+XV
VyPf9jVweZsFAe1j9cQPkuuQT7+wD0iVIiBhnOhUJv4B+eU0CTGr3yzoZ1Nt
1Xm4Bfktmj+7ZCULisbdZd8d8Al5bt+Utv4dFrx7cSGZ3t+G3FyGcfO7PAte
cHpwSMi4A3liYm77pVEmPMlvb6M93ok8VKYl8HA0E141PlIQZ0VCXqK2c8MW
wIRH3l60eNbUjVzD/WTXqwEGvLaxK0xBj4z8x8ZNnJKeDOgVJnZaMLcX+dAq
t2e3VjHgoLrZfPmufuSKfslfW2NG4R/9Jq9tEQPInT566+fuHoUr1k4K7O8f
RF6afDD2UjodLsb+0jNQGkbe4CuhF7iHDpsP2kvsUaUgj552VruURYO32Rcf
KndjN5vsMTHeSoN8EpviJt2pyHNebPsh+XgEzim39wXwjCAvfBZpcvUHFRpq
OlbHpmJf7Ksqcramwk3cwzvaZGjIGeom0WotFKilYljSWIj9IJfe4rQYBYqQ
nHPLVenIVa3alOO4hqHjwrfbd8qw5zhopu1NHYRbfEtVFxRHkYf5dbKJgAH4
VCqnxbIA+8HsyVDJ8T54e/HlAxshBvItHMlDjjd7YczHHULBIdi5uMfOAj4y
dOMjs9dMYFf88ZZ8O6sbPndNk357nIn84qrkG+E7SPAcv5SnbDJ2KdN1lil5
nTBjqYHgFPYRg/w+480dUNZZQStCjYW8qkt2e6R/G6xUqeczCcJupGF9dPPq
T1CoViHEpAH7T9ELuskfmiF/pFPkt+UEnnPasyvCxY3wN6d2ku0B7CPSPtFh
FnUwqOKyq5gNdlN5gyzOVdXwpMmq8E1B2C8Vx87bDVXAB7zxYH8G9vrGWZ2b
gkXQ1DFear4KO++4osOGgFzoFcRV+rIDe7r1rFK5TgZ8z0fwzpOxV2s9SVjB
lwRff9s2Qh7EfvuNend/VDT0lHUTdaJibzrKR928x2spP+tMlu6NyJ87qBR+
snYDzvdWsE794wodvupkpUiwvP5Q48A/71lIKXHsGEsAZzOOT4UMYbe1/nZf
uzUdmCVLjFzpxU7Snh3I9s0F7qc/eCT9s6/hW+6/Hm4pABFXTtsJNmO/bKhf
IWtSCvbPyaQHFWGv0dwuu0YAgjvg/qDTM+wFTABPZNeAyumo18Nu2P1M22tv
ltaDNLlvHDynsDc2crmeZmsCzTm8NTrC2EN0JT3KeFtBr4XP6+RxPCe6MoZ3
+Aw/g7oKueVzOdh771/+cuJoO9D7rh3b7ID9nVx49t2SDhDnICB6Qgx75aOW
fG+dLnBNkl/3UTue52Ifo7S8ChIQabaKs/TBzi/byJg+3gMe8l0OmBXGnupZ
uZBZRwZd165cX6zA5+tZuv9E6Y4+cCb+eKK0GfY/L4KaT8b0AyVNvy+bWfhc
3/+tXqY1MQDc/It/83hgf7tR/1bTgSGgFCuRK8aF/Q9PkIXEo2HA82pFF18g
zpPmwWmdxosUUL/mRnwIN/aMGRlv0moqmE1QMxfzxHklWFueJJ9DBSZalFMc
4zj3Vls+GotSWbpHiz6wZLPCrhETEm3QNQLW1F5mXqzDuWqbyrA/fp4GNsoN
Py7dh90g08eBe5gG+K1+OC3E4Hw+FHaOPd2eDvQF+lUVKDjnOZJ452QodPBU
rfKjSMIQzgFR3cOWlqPghgd/44gS7ovgcKGfpE+jwN6uTZbJwL3zcs6A+9eh
pft6rMclzqg+5OH3smIkUxmgnW3PvgtbcX9NkMbVwtiZQPrGxpiI4h7kfadN
J0rsmEvf+1YugdK4H51qfptXVjJB5H/n4mLTupAvaxNjW76KBQ64Et9/yeH+
7Tq2rPiiKQvwzkuas79oRz5pobzlSSwLRMu/fZO7Ffe7vxKbUwmJBVQlgwM1
jnxE/jUtL/7CGgKMvjrkOjLfhNw5eWRiBSCA9OobKd0TDcgNz15yZFwhgC2F
P44SXYvcemOBAP9jAuiVU92AVhXy1lNm30NzCSCwju2H6vly5Ot17Vwy6wlw
PH5mOWdCIZ63zE7behIBZsbq9hbHZyFP6rURGu8nQPg7D/43tSk4D+ut3gAK
Aep4lIiItufIz+tUxL8aIYDP6hpeq/Yg5H//b1wTdbXAwdni/V//H674N9g=

      "]], Line3DBox[CompressedData["
1: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
/wdVRyG7
      "]], Line3DBox[CompressedData["
1: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
js92Xvv7//z/AMxmrAs=
      "]], Line3DBox[CompressedData["
1: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
H/hYjzs=
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1: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
1K/93/8DxyJdxA==
      "]], Line3DBox[CompressedData["
1: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
paQH
      "]]}, 
    {GrayLevel[0.4], Thickness[0.005], 
     StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
      FontColor->GrayLevel[0.4]]}, 
    {GrayLevel[0.4], Thickness[0.005], 
     StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
      FontColor->GrayLevel[0.4]]}, 
    {RGBColor[0, 0.6, 0.4], 
     Line3DBox[
      NCache[{{0, 0, 0}, {3^Rational[-1, 2], 0, 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        3^Rational[-1, 2], 0, 3^Rational[-1, 2]}, {
        0, 0, 3^Rational[-1, 2]}}, {{0, 0, 0}, {0.5773502691896258, 0, 0}, {
        0.5773502691896258, 0.5773502691896258, 0}, {0.5773502691896258, 
        0.5773502691896258, 0.5773502691896258}, {
        0.5773502691896258, 0, 0.5773502691896258}, {
        0, 0, 0.5773502691896258}}]], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 3^Rational[-1, 2], 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        0, 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        0, 0, 3^Rational[-1, 2]}}, {{0, 0, 0}, {0, 0.5773502691896258, 0}, {
        0.5773502691896258, 0.5773502691896258, 0}, {0.5773502691896258, 
        0.5773502691896258, 0.5773502691896258}, {
        0, 0.5773502691896258, 0.5773502691896258}, {
        0, 0, 0.5773502691896258}}]], 
     Line3DBox[
      NCache[{{3^Rational[-1, 2], 0, 0}, {
        3^Rational[-1, 2], 0, 3^Rational[-1, 2]}}, {{
        0.5773502691896258, 0, 0}, {
        0.5773502691896258, 0, 0.5773502691896258}}]], 
     Line3DBox[
      NCache[{{0, 3^Rational[-1, 2], 0}, {
        0, 3^Rational[-1, 2], 3^Rational[-1, 2]}}, {{
        0, 0.5773502691896258, 0}, {
        0, 0.5773502691896258, 0.5773502691896258}}]]}}},
  VQM`VisualizeVector`QCoordinateCube -> True,
  VQM`VisualizeVector`QCoordinateCircles -> False,
  VQM`VisualizeVector`QDrawUnitSphere -> 10,
  VQM`VisualizeVector`QDrawAxes -> {True, False, True},
  Axes->False,
  Boxed->False]], "Output",
 CellLabel->
  "Out[1343]=",ExpressionUUID->"6fa4dd03-bf06-4408-9390-38c996400e5b"]
}, Open  ]],

Cell["A Density matrix can also be visualized as a vector.", "Text",ExpressionUUID->"7fcaa290-98c1-4c38-906b-a7e74dcefc5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dm", " ", "=", " ", 
  RowBox[{"QVectorToDensityMatrix", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", 
      RowBox[{"-", ".5"}], ",", "2"}], "}"}], "//", "QNormalize"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[1344]:=",ExpressionUUID->"aa983cdb-c3ef-45bc-a930-2da3561ec018"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9364357804719847`", ",", 
     RowBox[{"0.2182178902359924`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.1091089451179962`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.2182178902359924`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.1091089451179962`", " ", "\[ImaginaryI]"}]}], ",", 
     "0.06356421952801522`"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[1344]=",ExpressionUUID->"b91c678f-bd8d-47ea-9eae-4e096ff1b6f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVisualizeDensityMatrix[dm, QArrowShape->{6,1/3}, QLinePointSize->.01]\
\>", "Input",
 CellChangeTimes->{{3.3902337888867903`*^9, 3.3902338148488903`*^9}},
 CellLabel->
  "In[1345]:=",ExpressionUUID->"643cefb3-fa3a-4176-8714-8428add6253a"],

Cell[BoxData[
 Graphics3DBox[{{
    {Thickness[0.01], 
     Line3DBox[{{0, 0, 0}, {0.4364357804719848, -0.2182178902359924, 
       0.8728715609439694}}]}, 
    {GrayLevel[1], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.2448916532729864, -0.2376096609073352, 
      0.5819143739626463}, {0.3375689608149961, -0.22636639754291904`, 
      0.5383865360327456}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.3375689608149961, -0.22636639754291904`, 
      0.5383865360327456}, {0.38363449452333287`, -0.1342353301262454, 
      0.5383865360327456}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.38363449452333287`, -0.1342353301262454, 
      0.5383865360327456}, {0.33702272068966005`, -0.05334752607398793, 
      0.5819143739626463}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.33702272068966005`, -0.05334752607398793, 
      0.5819143739626463}, {0.24434541314765038`, -0.06459078943840413, 
      0.6254422118925471}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.24434541314765038`, -0.06459078943840413, 
      0.6254422118925471}, {0.19827987943931355`, -0.15672185685507778`, 
      0.6254422118925471}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.19827987943931355`, -0.15672185685507778`, 
      0.6254422118925471}, {0.2448916532729864, -0.2376096609073352, 
      0.5819143739626463}}]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1:eJxN2Hk8FesfB3BLKFuqG2UtdMsSRSHhUbaiSLJrkUIlibiWCAdZQ1mSZM0R
su/bc5xz5thK2SVdIrLfFq4l6dcfv/s8/ph/3q95zcx5Zr6fz5zZffnW2ass
TExM739vrL+3EDcuP0FVBlAx8x02iVTWEBAOiIwg/QMcJRmPXI8wQPcnbVbt
pKvgP7drUR3yVmYAQsHjYupjd+TSNX0JHxQZwD5Y6Vbnc3/krbnbOCvkGGCG
JfzBfr8Q5OT5MdLiLgYI4ont3VQSg3z6XVeFAS8DKHq+PV/BloBcydArQWOe
AA89kyIlmpKRu7D165F6CVC3YlpZFp2G/OmmzvHrRQRo9c4ZyXLJRP7t3dFK
4WACiMhdHRjQyEbeLyvV7mNOgBitlQ/2fTnIz1JMGRa7CHB9r2yVfXoe8vlf
9zSffqaDgEtWdwUOFyC/TKMuCeXRQY6q2KtLVkXInQ2mDvNdoYORJOcV4eJi
5F376Tx0YTpo2RxyNW6mBLl5bISCYCsNOIXkcnmolyEXaB+7kuhGA4+uFxwt
CyxH7t4+X3ZIlAZqTCgve/IrkI/Xqhk9qKOCPe0xHxSmKpEfcdacottQQd4B
0yf+3NXIY6MvrrB9aQQzTby7T2nWIL8mFHvD2r8RTOczDRo71CI/cSWdY3Jb
IwC97O8/uNUhL916RLo1iQJKzliFu0bXI/ct+K77TIICZGanE3tiGpA/et/k
umQOQVX0UgVzCETulh1NyJ9qAGnn2M8MaFGQ7wm8xt+lXw/kaqp8BKqwp8wJ
LGyUrQMe1d/q4w42Ir/SZHGyi7MWKE0XPZbLwl6tbEoK+LcamB8vC2njpOL7
y1yQuUqrAqHk0WIDd+xazuT04tRKIKjG93hXN3bl+c+cZJ8KoPEtuaJMloac
G+hkjKuUg73+7dod97HHuqumxLCXgRsx/E+5+rELrQVwSZaXgN0eNzUrpejI
d33VEDnvXgyaZZ7/MeOCvebLBy+oXATuFpnsny3G3sH2auVL+UtgfFSkYvUb
9sVs7u1REnmg0Pfx9VBpArll8OmfzWdzQJSuUD2bLfaTPvaGwaHPgYtfPEdx
DPZATvWRpYkMcFdpf91EJXbWELWdb7jSgETEjoUXg9jtvZJk0iqegMFm0fqQ
ZewJp27puF2PB1qrXn8W8jGQn3llcJ/FIBpETWVrbJTE7nFvUqp6LAwwD8sK
/ZLG3m6i8WjcLwgYn5i58PwA9mkeruyLOr5gOlHzzonD2I/FOK1+Dr8NirVz
L1xUwa625N7utsMCZD5jgPEj2MUivyeZrZrCJcUrv+bWOZM4e7K5ugt0TPCk
Plt3HNlYw5LsFW8YofOvIosS9ja/2aOnjUiQ3HY7u/zguusJTXX9LhYGnw00
FI7IYOcTdWHn+hELJbNnNn0Rxn5aMSaCpycRioaN9dLYsfedsFoyiEqBNw2C
Spam8Dr/1UqK3O6cDlNChfwK27Db+IA6Dv0s+COotG4hE/sGHocFuy/ZsMVc
3tXNC7v+x1X3zUEvoIuO+us6fextB069+noiH45EPSvz3Iq95f3cdHhfAfRp
PpdD68fPIX+9g/K51iKYHyO8KTUOu8rx3J8zIiXQREvSWuzUuv1bniYamJXC
iWrbmhhW7OA0c+WnzDL4Z5Tz4fhCPEcF8OukfG85dFp7s+eEDfYO3ZfXbH5W
wFwToxBBduyvzZ0dU5WrIF998u70TDzXF1tFbk6ZVcMYPZlaWS3s1g95ex7c
r4F9G6Qn63pwnlipPE22TamF7EOinHw3sLe2B84cJ9fBEWU+pktrOK9uRd5h
5afUw6VNejtYg7BXbS217G1ogAKjb7grebCbDdpfT2iF0FSiqtl+K85Jk0cS
MVeuUCA7baC5kg3nKhzt8F7spcAx9zSrBlacwx/8dcUrDBuhZeqlfec+4Twv
CnmVcaCmEX6TJxZYO3D+j7kkWziKUeGlOene7jrcF/I6tW0eoVSYrS7S5hFe
hTzN2I/56xgVRosfJ4fY495RqC0/KK9Lg407yjn6JHBPKRzPFHJJpcHl0uCx
jR9x35U3JL2fnaXBRV4VxdGCUpzbN4dcmtTpMOLGCf+X53Fv7tgy561PosMB
X2dvM1Hcs3aJWW9yqHRYl8lukUwtxH3tLGjGwkLAl6fG9Qw4XyKfmPiZvKxM
QF8KPynYKxd5ri159q0TAZPHykO8csn4/p5ZaGl5TMA9RpdrRNme4x63Ofej
s4GAQ6MCh4QcM5CHde1/bTNCQNtavzdSQqnIs6f/dNq1RsDoKgvyR5iEXOaZ
9kkDfgYcrLiYNDf1CPcsWfA08z4GPGzZER5mHolzmP6NpiLHgOKPCx7cWMLv
XUcn2z6IKzJgFOmJ2XxiAJ4jlpsb1pQY0JKr6KRv0F+4lw1Sks4cYUDH5OJn
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
/W+TSOWG//x/rUUkdg==
      "]], Line3DBox[CompressedData["
1:eJxN2Gk4VVsABmBJ4lLGEkrclBIhJJIlZO64N5KhiERJSuYpGUoRkTnDUUgy
E5mX+RyzM2zzEBW3riRJJer2567Vj/3nfc6znr3XXuv71j4S9ldPXmBlYWEZ
/XWt/3UtckV4PH1FAMGKjksN8noa22VPai3zzYPCZFOh9b9cX102RPu4J/jf
xae7OQWmCHDwaonNI51byGvDOPtDxwmg0ZdoKHAhBvnCG32Ta0MEKJq+0lK2
JxH5bXuno7OdBLB413VA1C0Tefs21s1hVQRIXLe0lbckB3lJ+EkwlkGAoJWK
bhHrfORLR54/iA8mQO1pq0QjkxLkZVuoVrxnCNAYq5bDubscufKG5iRnBQLM
eyqam/9TgTw2QEvSn40A5x6+pHZ4VeHfn2PcO9DLBBrhZvULyrXIW5xWi0mJ
TDDXOcZIhfXI3e/erKi2YoLg6vP8FJFG5Ol72rWaBZlg2VdTn+TShDyXVeFC
ZC8D5PkkUFceNyN3Wf7OsSuQAb7oOKg1zLcgFwrYULogxQC9nQO+XHJtyK1l
D28dYdBBgbPdlRyzduTrZ3J8it3p4IGN7N/yURTkBcXZaVZb6IBUocOyJZ+K
3Py7XZrWMxrYGnXkuuJIB/IUpRELQ3UaSPewbqtf7UTeSGPUBNL6ATkv00x5
QzdyWRFXmqplP1DWoov6b+9Bzr1yi7u8ow/kac6KfxbuRf6Anf0m30QvWGxo
r3Li6kOu+OOdodVAD3ANcVBIZutHruIcEDkz1A0iT3Ab8HljV2gR6PFu6AJi
4h1clfPYP4e0vn/yqBPEWxgrPLClIfdclaWHx/56zn2dnJmt2M0cx3nzz1PB
AZUmlhBZOnLeO7LD/doU4Dc4KDgTgT3isRr/Icl2sBwlWC4xjd2jufztmZlW
kFLHMzt6hIF89mubcVFVC3C9+9fhiQjsufGFXPYuzeBnzik141HsYvzfurwU
moBeSKWYiwQTecZs1ITFRwgiuxIdr9lhF/iqNnBeqx7USV2eCXmE3dLgzn2W
mhrwz66LcYeGsKteSSiSW3oBrqmzrExuIpCvXj3yvk2pAux+qTlJU8d+5QPn
iSvkMjD/9/FNbuex/zu+/nXPw2KgzFJumhWOvSg/WL+W9Ay0Z+8b5cnGXjAb
P7hXKAd0hz5RnKjBPvA8e/UELQO4fZHhnuvB/neaXANLcAp4fL6VTmFiP/aw
HcjLxYMGmaIdFiPY+8L1SHcY98DIv3LSbyewf6rMnC7UDQYd7Pd5l6awp1WK
2NTXOAHeTI91nq+wv+UwojKfXIDxY1zkwN88iGVP+tnVIHjlHSPw4DT2Q8m2
GtWxEXBHq59Q5iT29/X++YpscbCmBGg5jP42b87NSuoNyZDso7aYS2AXrero
3l7xCAra8l790I7dWKJB/axPLrQ++tNbuBT7eLTo7BmRQpha8OFyTQL2c+7c
kUbSpXBcn/vNOy/ssv7FHDu/l0NvL9bsLhPs32ZGvsgkVULbVt7C+d3YHce0
J+ni1TA5cqzi/Re8fixe0JQWRmrh7r2TbmGNv/nOJY8k2waYEb+bKA7HbsXD
LrTxbiPM4aQdidfBbsf0EPYebIJutlfDDqzh9U/xEmRu5WqBr4ocBWsqsN9R
Ew/LMG2FRvcr5Dacx05V5PTVCm6Dw7cHhVd5sQ+K7F9ZzGqH0Vb12Tvq8D41
flNcf3WYArPdu9R3WWNXMZd3PrtEhdzszl93r+J8uDfsymIn3gkNxpfbbGOw
t5koaX9X6IKexT+pf0tht1/vFkpX6YayVzI89OtwLi0KejvbGfdAyQGJ6xRt
7B9qzL9q6fVCmm/+l+gMnId2cpfLPpL6IM/leKfoFJyftytsXmVJ9sNLjx/a
LsXgvPW826Pom9APxRoqtWYe4Hwu+lQh6chFg67zs1PD3l14fj5fytLwpMGK
1aWrVRdxzj8SXlc6N0SDiww2j1oL3Av1Oowoe006lHqkv8C2H/cIOXlY2S2N
DityziiHceHeibEd3qr6nQ6DpLLia3twf31acX0pZsqAopELs8z7rchNfP2s
L2cyYKtr39Qpe9yDGZ0c5zd/YMDKmW3PwFbcm5rRVoKhikxYUxhLbh7F/Tsj
Nb/0zo0JD2xfy9uiB/G+7vgoTCphwtqczZWWKXXIV0jage5vmFBXJO94NH8N
8kKh48aBwgScnbzY70p6gXPg1mHJLh0Cas9PO9iUP0f+LifKSdOZgMVGY71h
4mXIw7aws2pGEdBmX4OV3OMi5OsY73OSnhJQJ971Yp11HvKNQiy3HBoJmKFo
0OSdnoXHvyOQS9AI+HFc9aDJ21Tc+49sF5YGCci/7G2+hYzPXSStg++7xgi4
19IzMNw0FrmMWYJg8ksCPl78w4R9XzjypBaTR1PTBPwZYFpNPemNPC/vi1Lu
KwKSV+R7v8ceRV4dvDlX9JdL3rpemZPpDv/3aMtUstEUAR0KnnfEmYch37bA
qFGZIGAch1Nh7mg0cpHaltbrwwQsFO0coUgkII+4MSKkwCCgl9jpp0bMh8hr
+v+wj2wh4AW1Ob+gqsd4/AfGK00FBDzAKj1Jc3+Kx5GZWgmNIaAJ8Udp+aYi
5Cqs0jGfrxHQzv+JxQS5FPlHEc4bAgYE/EuoZdrL5TnyrQnCbHFiv96LWlqi
PtsL5H1V7am0d0zoyhZ206ynGvnPgKS3BmVMqOPwV4VlSB3yvJaZXUE+TMjR
PMCysA4iD982+u28EhM+ZnXlujfYiNy2nqoHf63/hZhj4YoCzciFF2LYKLkM
SEr8RHLRaUHul65aGmnGgOasO+75RLQi/2cmNl+UlQFbNrNplVS0ITckk/qe
ZtGhCU+Q1a6lduQDB5SEJo7RIfVs9PDdPVTkrDc2/nl4mgYvCykd99XoQL53
D7t8y688aT3/5JWlUyfyWcpagAw3DdbsHfB679mFnOP01ZKSzH7Y2LumQvHp
Rs5c3p5QLdUPud+8OH4oogf51wvs1d0X+mDYSpKtSEgv8rXYHzJ/nuuFfe0i
P57d7kO+5Ptzk7RDDzTZ+Y3MqdqPnL1e1UfFsRuWWHSYZjzFflujU9nIqAtK
VK8bOraDhvzLttDvfuqd8PKxscZXt7BLs0TCTzwdUODodbN7i9h9tLrEeKcp
0IiacPCUBR25jufqx4zmdti+QhnqL8N+LnFc8F1YG/S/Oyy9xMNA7t5HM50z
b4Xm2xMdpOyxU0SH0kWlW2DUeiV/pSLs3lxk1bqJJnjMK4Ee/R37q2PzlB05
jfBareYiQ4OJ/KyLnK5vSgN0S10/ZRKCvcFTy+nHXC3sJjeKs0Dsu2pv+NOd
quG/p/nk4hexb1L1NnXJqYSv98wNrUgSyNle83ld4n4Or13a2UMhYbc8zG/i
e6gUMs9sHCR5YedLPTiyiV4AJR5/dtdIwt71lMdfNyYXfvT+0lZagn3iXIkc
5+Aj+AfVsuhmO/b9gvZu9KVkaJPyiXaJwL48d/Rzc0kcVOGje3SNYGc+sRLb
MXgPdtqwrc5OYNeb3zgq6BgMS/s0h95PYY9RKRC71ucER4cicz1eYQ84wtiZ
P2cPtsb614b/5h2ur/+lM26ADt19Qiemf5uHFdPQ5NUIALM/2wVNYndtq5Eu
040Do68TWKVHsYcEsxlTF5PBLpGiPS6/PZdOHHlQLj0D9NEavZR7fxt/gIc3
JT4bKL5mjNHrsP/ZddGLVe8ZiNjwyU45G7tzMovLWmwxII20bBoMx54aHZvj
e7YM6B/6JrvOCbshO0PVcHcFME8oGaMexT761lDFqOoFuLgt2n87/2/jUJmX
dANqgFCbWtqf43j9DLhWVUrK1IPXBkcn/LKwC3C6V6U9gWDK1Tmv6iL2cBeX
F4pSTeCE8hf9tF3YA3U5s5TPNYN+R47lHRN4/fsFEqGXilrAd8HiRI8o7HEy
cZJ7P7YCLsdy3bnD2H8G3DsiKdwOFGKLSbZv8D5NeLixVNqMAqKNDVKab2Gv
IzGFfTyogE9WJ2hMCnsD/741u7sdYLPXt8ooCs4HycKnAULFnWBZ5Cf5khX2
/bdVxNNruoBSujqH4QLOJe20qODtRDcIprd8q/bBnjPJr0Se7gHqxieyGtZw
7tWFp+5rGugF9RkFz/L5sZOYK7anB/vAZIhB4m0unJ+nrlPW+9n2gytN3ped
N+O8zWS3CZXv6QccbPt/3OLB+SygM/1pBNBAnvLZD+RPOOdNxx64ZTyhAfkU
/VOSr3EvbF/yzCbx0UGipFTUfCXukXiuxhzHa3RgXa990CeJgvz4LOe0UQcd
GCm63Nzmg/tops+htl2SAULJEft81XB/3WnyVr7iyQAcsZv2dHDjvrM9d1oj
gcIAd0oue3s14t5U+Qr3j/Azwc0f28a2eDYhry0mdA6YMUFslqJF5RHcv71i
6SYZCUzg7SJdeIRSj/wBZcgwvocJrh273kY6WovPJwme3PE/mSDMbfP9zuoq
5IfiyUJm8gQYHpYT3/OtAjlPqrJ0ugUB4qeTmIfty5E/vKDZfP8GAbR3FpwM
jC5BbsOh7r6WToDnwSNg9XY+vn93CQ7+SgJwJLxmIRs+QW5daiPl0UmAwso0
P76kTOSi0gEvBYYIwD04lSMRnIg8/9SxG7rjBLhhUuXKXxmDfF30bdqHlwSQ
5dl/tJBxC5+7xNf0V359D89snbA7w/RE/v//jZMKEhcb5PUa/vf/AAPD7Us=

      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiFPcUmghEU5FQlo5ioSpJJQtyl62VCqy
ZWcs3RjGvjdmmOUplCyp7I7t3//Fue/m83nefF8898wz1/W7rpmN9tfMLizj
4eFh/bqW/7rml/7/IoDgGkdlz/ETOmlGp77eKhwGHvlzuqK/XF6185KLjDf4
zwsVi8S15gnQK/zj3H3px8hF8o6M800TQGp0OL9w+gnyHiu9PbHfCbBFmdXC
s/s58kUth4RWFgH4NX7sMRZMRb6D8XrbaAUBQhqOvY3If4f80ZN3GU7xBNA5
STH/tpiHfJ3zqdJn1wnQqZwYQTCKkE8NVRrTtAgQfTnVo2u+FLnNj9C4f+a4
wN6i8onj8grkbfl9WWUULmAcDCtr+FSJ3Eu02NbqKheoXM7ko/ZRkfPTHwVk
yHBBX9OCRvL7GuT/bsnZFlHJAQ7sB7yyD2uRTzcn2B2x4gBKQOLnAM965Kfd
qb3JE2xgtZD3Ml+nEfnNAF3TF15swPtwULZwczNyzhaHEgleNnhd/1V0aroF
OU/SxHcFfxb4uppcHmPWhjzhKvtb2GwPSEl/Xy+0tx35vr/DU99e6wHrY2U3
863sQB7u6rJlbWc3kBAyb4n6jP2RusZRS9VuoHH8EmWc0oncwEFzbk8MEyxw
1YoO3v6AHFyvWu3whQEC2wjli4Z05Gpv/n6tt58BPAJN4jJ5upD/SZJ7uCKs
CxjfL16/LQf7pfYRhYOtdGAQ/7dQ+lUG8qFvm4/zSNFBktMOTT5xJnI308XA
R4YfADOH5TlSgf2VCbnBxqMTJEROTg1e6Eau6q3u4Z7dAYL6Niu8nsXODSr/
3tbZDnjn+5VnI3qQ+6/JXLjM2w6sQlNd7v3BQh63punqzp1tYBdnWFIgHvvh
OFXJgtAWIOqcaqC2jo2cpNt2K/NDExBReqCSH449p2huWf9oAwiQd604LMBB
fqRkJNR3Uz24mxbytukf7NftJNK1T9eCz00sin0j9p9GF3r+OF8D1F2dIkWU
uMhdb9nqKwdRwcnE4Ch+MvbQrWwhc99KcLBJ1NSzFrvPizccCx4IaK8njWVX
EciLjsWJ+WmVgh7VSYfHh7B3CFm6z8kWgZVGhnVkMva47YGOVX/lAe34vVYC
ydiLI2vEhOlZ4KTlaVebauzN6W8Vcv3fgJV1J+20PmI36JKvtHv1EpzKWqOo
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
z/8H+HVdMg==
      "]], Line3DBox[CompressedData["
1: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
pE7pfg==
      "]], Line3DBox[CompressedData["
1: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
/x+zXRYl
      "]], Line3DBox[CompressedData["
1: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
X09+TkY=
      "]], Line3DBox[CompressedData["
1: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
5D//H2ybU0o=
      "]], Line3DBox[CompressedData["
1:eJxN2Gk0VW0bB3CpKGUoEeohUylkbKLchgzhRMmUqCSSUIjXkFlCUWigQqhk
yJB4UN2mZJ5n4uBwjuOcsxuQIt6+PPfdh/3lt/baaw/X9f+vtcXt3U9eZGdj
Yxv6c6z+c/BvD7kdE0aAsLWruGIKz2lEeW4IFFGrA7s+FPg+DSWAeHp0ZEhq
LPjPRQJaTbqCCCCbFi78KCUF+fUoQ9c3fgSwPObzKCj5JfLOpvpoB08CvC4z
XuGl5CNXsBKmUc8SgMPbsLAjpxT5wYWPq9x1CaDv8zNO5xBEHpK0xT5oBwEm
tBv+lSmsQR6RHUW3nGcBTs1cIyn/T8jFTJSbTlWywNPcDaNLcU3Ib5MexrNC
WWCA0BM3iG5Dfqj4tuQRbRbQNWWUajzpQD6ibBLHN8sE37/H8l560IX86fYv
DqkZTMBe/vvMpss9yO0OqTb1kZhgZvMVs1sKfch1tji0b59mgLglmZ3/ExhA
7pl77hZHOAMsmwmHfOgexPd5jdbRycMA4eLP884XDSNntPE/25M4A2ylWkLD
g0aQb7roRohsmwG1kzwm2/jJyNMCDxW9vEsHZyv0BwVnsZuu/l7dv44OevVZ
XhNVY/i93cyVznabBru26ToLPhlHXsrhGm3ZTgOaY0Vn1V0nkIvH5nnd308D
xkYbbz2WpSDnXptodjWKCiy9LfgyZ7EzsuoTKWNTION+OVUkZxL5Bw01C72D
U6Bc3W7dtNUUcvKhnMyrfpNgwPRswCNeKvKb1sInlmso4Jb68zbHYuzfVAW8
8hcmQNbr3rYX52jI9Vh7HV7JToCGiCOpEqunkQsNrn1V5zQOyo/6gtRE7AEa
hK5/7BiQFMz+miJLR35q0SpTF5KBttIlNf4i7N6KSjb+5FGgmTFIeaUwg5w9
NeoTWXAEtJaxMfsKsL8duOt+22EYLCXzPH4owUCeRNI0lro5CCqcbCbsH2B3
7tx3pqqyH9j4aghZLWJne2xFcVvuBckvA/aGWjKR82xe9YvJ2wPMeqXeV77B
bmM3+1zxSBcQW6deHsLOQi6XFkdS1+gAm7NenakxwZ5m3g5rIlvBffXf7tYJ
2GnCbOLP2hpBTesM8b3xL587XSJR+Wc/Ll65ybeCfSsJwgWiGlyWvH1jaReB
vMLP6oS47QdQrUye7jDALpVTqSaoUAI83UTDNB2wc5+TJ8g2ReC3pbjhDjfs
zh7Uqt28eWDT72M9Et5/+TEXfvHKTABzfKhvA7C/Pn78uvHoI3B0pFt/awh2
czGTNWNbQoCehpKfVhh20zLrHT9lg+C37LtjpL98RnXZwZbjIQyw+bbr2l/X
YX9TKKC8IwMWcWvpvL+BXb4wZ6DkXA6c3W5HzvTBfkf0I3teWyEEcTJz9u7Y
7+/NHz8WWAb9nUnXlU5j73K7aCQ8WQlVXNzTqtSwu/TrVf/zvRa2qv94Zs2P
vbGjQsa9pB5G+r9dszyFv0tFAblepbYZznrHiOe8xt7HSHRc0W6H9EurVy56
/OUVBQuZgp1wAxBt2KOI/Wyy/JI8dze82Lbe1oGM5+33UWUx9c890DvGsyc+
Frt15K3D2q19sOn41xtz8tgXtdR/fsgfgDYJA8qyn/Ccm51+q/Xs8hBcd4an
xOgc9v66raVPdD7DHwffaR6axvvldia2dGxuBJ65t1ta1BM7Pfw3ScmYDFuK
IstYC3h/dWVDen/uGYMfq+pOmbpiX+LW25w5PwaDwllfYik4Hy4lPB5Ibh2H
VrIVURePYR95YxkWmzABB5RVvXcW4fxREFEp4TKlQNFVGgsbhbCPF1lxiW2d
hHv468lxl3GOZQnE3yttmoTzefuje6txHjbwmclERk3BXJUD47Mc2LsH1h+r
OEKFw0bu0/4GOFedkkja8mQqdDOx80m+h3N4873f3LNRNEjnuSA++BHnuaxp
fp6FxDRcl2W1kseO3dqlvru/cBq6DYd2T2jgXjC1XGPerEeHc06XF95cxD2S
sLtus3kTHe6+lFL14QHundpzjUkNZjOQ3sv/7teFUeSzipu0zTtnoLdsX5Fx
8mfkg2ruD1K0GLB+7vTIYdoQ7t+tfAI9RQxoSh+6KcGFe5PyqVrzggATik2J
atnp9iPfJsPxWN2dCa3aE1pGwnrxPoazS3M3MOHXhGot8KAbf0fO9H/vCrCg
a7hK6MvaTrynnWOcAedYkOfGkAy9rh15ynP64e4UFhSLXzDwbmlBvn1Mp7uq
mwVHdvrmzwg14vcfe5UqxUlAnQtfl/Zw1yG/K8N5OHQvAXkSlm24taqRJyoX
CNWZElAi72Wl3ZF3uEe2s4WPOxPwYH2f4c2txciDM4SZRR4EHDn+Lr3AoAB5
jt/v/GxfAo4X2Po1f81C/kDU0FAiiIDhMvK3l3LSkB9Yr0NyDf1zHQEK28bG
u8jLSS6VUWEE1LQdjD50zBy5QbNgb+Wf86kqc0nftG7D//z8SXqdVDABYYP8
7Ij+U+R7Oho9S/wJuLPWIylq/wvkRnXvMvu9CPhCQHbY5cpr5LcbJct6XQjI
GUFlEzV9g7zcwqLCxJyAwQF3zMu+lyNXPDjoEqJKwHi2nKJtyVXI969y9ujf
8Od+Dja6GaR/RM74FMx+eYQFHQs2KxSfbUDO0nV5vpzJgifZ9AvPO7Ugr3Zr
FWl1YsFt+gOjUffakRu2t3Aa/cOCmcWNsZ3xncjtWdGHaU1M+KOhrLkgoht5
sf6kSfH/mDCeyjITOtmL/LQSbd1LQSZck1rpRgL9yF/37a3qesOAM4BsB9cO
4vOPdPjtN2ZAw5M/TOXeDyF3Hv3lZ989A48rRjAS4z8jf1HFkntjOwPv22nP
n9EaRa5h6LGxrIcO1wemJdIjyMjXOEZBlgEdspdLafjZjyG/MDocqAan4b0m
DcqS7DhyrcT9oQKS0/AVj2hW4aoJ5OtE1J5siqFBXVH1bJ9a7Oqq2ifMvlBh
0C5aZ3MgBXk/0aoip02Fp2ou2D/TmUQ+/FVp5VfSFNSxdKZunsd+0vXSr5TP
k7DT2uZXRuEU8vdrixhHZCYhp4PcopANFXlwxP+Mrl6jwNeZ5mffL2LPdzPf
8un5BAwsGp18lUFDbtYq7NwzPg5V+LvOktSmkVedLP4cxDUOGfvKC9/1Ylfn
FLqloDQGja/yJOg505E3JbeG6dqTYezCwraYGezs4eXFUosjcNbWe3f6tRnk
I5cuX7Ez+Ay7dTW//KRi5yIv3z72cAiC0J9XfcwZyEWCJa/sLx+AT7sGy7pr
sWt+25haNN8Hu7LqB/Kkmcgj3Q1yJzl6IVSTG++5iX3UNE9LXqQb1gV6H983
gr0vhS+l8lgnVN6fKugjw0IuOs3/RZPUDinZSnMc17CHa//rJ/S5GUqQmrj2
5WF/aHqn/seneujMMW/1zxR2M5WPz/lgLWxROq5/S4BAnkmRfmEyXwlrckws
5NSwv+4MrNiRXwYtNLezx1tjf7nG0HRhvhA2uE+ErXfHniH/MV/aOhcG3zCa
qPfGns5uwPW2OhNe93JXLQ7Anm0CRUI3JsH6l45mPCHYa873kT5JhkBrmcoF
zTDsPs1HbXo0/IH5btGrZ/7yrKRS/ynFB8DvgJHnw7+u8zO5/s4O1wyQFT0n
G3sDu+mu4NUelTngzvdda074/PW8ZRMewXOFYGfA8sjGv57LWjeJuLe+BNjF
39qX7YA9mORkvfvZe5CmIFSSboR9zT7ivTO9GnistgtXlsHub9Tq2Fj2pzei
mMunV/B38TAxGMq72ggcpWZEBdqx76BsOOJ7rRUkKnzleJ+InbnztYEofwfQ
NsssHTbHvmpkMrKKrwusOqDQ+HA99h9Kv8/QV7pBDuWo8YMSPG9ekZfz0+t7
gfHSL6nl89h/1fHKLRb2g8HyS3GBy3jOX03dSXvqNQieaBjOX0vGftdyZ1ON
+TDgXQjZf2In9pIq5cXLO0dAw/0H7U9z8X45lTOCYtpHwdB1Vb1Tqtgp5rqt
XE1k8OSQo0VeNt7f+8kBNgnJY4AcIT18QxJ7NDls7/T5cXDHV+1O7yOcDx89
g/gs9k0AzQ+izm8Xcc4U+jCUp+cmQHtZkCvDHntObMn6o1UUMLSH93BjCc6r
COeap7phk0DPMzDchhM7xS49ml1lCnQ7HqZJ2uE8TEqkhZfMTIHlKFWn0jSc
n1XZfwY2ngqe9HOKhdNxDlM1urkcFGlAPGSt0zoV7F5rop19e2jguuyEXY4j
znMf76ntV5ynwcFVbyw0MnAvjN/PN1i7mg54v8ZLuzTiHnnsKCTLjKGD71El
jjcWce8oCz5/SNswA/ZVl/xIlcO+/bB11JO4GTA78TBpIW4Eubs245+y1Qwg
RnM6kv55GLm5j2I9mx8DLPJxDCiu4N4s7jj5j90UAwwc1F/YJjGAXFinJdfl
KBM8Kras/WbXh+ckxdHnWToTpN/96RDr3oP8UhvZV/k7E5BiSkvePu7CvdzV
q7hXnQVemdhv8WvuwHMSuDnFNoQFNuld1AlIb0Mur/tM17aCBb6Eb9zAT2tC
XiAlTFr5ygKje8R0xHo/IR/Qf56qIUYARWm9LbC9BvlvY1bZtBYB4vRayBMb
KpEvBXQd0D5LgMV5bW7f8VLkb0lpPqMeBJCr7+EXVylAnutuIm3jRwB/qk7X
Nt4s5Pu8pB6nBRHApcXbK+pKKt4XHsnmu6EEgAGRjyNc45D/979x09W2dTGF
5z785/8HiYbbnw==
      "]], Line3DBox[CompressedData["
1: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
js92Xvv7//z/AMxmrAs=
      "]], Line3DBox[CompressedData["
1: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
z334z/8PLKZJLg==
      "]], Line3DBox[CompressedData["
1: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
85L//H8Pu8DK
      "]], Line3DBox[CompressedData["
1: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
L/KPu8Y=
      "]], Line3DBox[CompressedData["
1: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
/x9WfYOl
      "]], Line3DBox[CompressedData["
1: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
R25XDQ==
      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiFPcUmghEU5FQlo5ioSpJJQtyl62VCqy
ZWcs3RjGvjdmmOUplCyp7I7t3//Fue/m83nefF8898wz1/W7rpmN9tfMLizj
4eFh/bqW/7rml/7/IoDgGkdlz/ETOmlGp77eKhyGHvlzuqK/XF6185KLjDf4
zwsVi8S15gnQK/zj3H3px8hF8o6M800TQGp0OL9w+gnyHiu9PbHfCbBFmdXC
s/s58kUth4RWFgH4NX7sMRZMRb6D8XrbaAUBQhqOvY3If4f80ZN3GU7xBNA5
STH/tpiHfJ3zqdJn1wnQqZwYQTCKkE8NVRrTtAgQfTnVo2u+FLnNj9C4f+a4
wN6i8onj8grkbfl9WWUULmAcDCtr+FSJ3Eu02NbqKheoXM7ko/ZRkfPTHwVk
yHBBX9OCRvL7GuT/bsnZFlHJAQ7sB7yyD2uRTzcn2B2x4gBKQOLnAM965Kfd
qb3JE2xgtZD3Ml+nEfnNAF3TF15swPtwULZwczNyzhaHEgleNnhd/1V0aroF
OU/SxHcFfxb4uppcHmPWhjzhKvtb2GwPSEl/Xy+0tx35vr/DU99e6wHrY2U3
863sQB7u6rJlbWc3kBAyb4n6jP2RusZRS9VuoHH8EmWc0oncwEFzbk8MEyxw
1YoO3v6AHFyvWu3whQEC2wjli4Z05Gpv/n6tt58BPAJN4jJ5upD/SZJ7uCKs
CxjfL16/LQf7pfYRhYOtdGAQ/7dQ+lUG8qFvm4/zSNFBktMOTT5xJnI308XA
R4YfADOH5TlSgf2VCbnBxqMTJEROTg1e6Eau6q3u4Z7dAYL6Niu8nsXODSr/
3tbZDnjn+5VnI3qQ+6/JXLjM2w6sQlNd7v3BQh63punqzp1tYBdnWFIgHvvh
OFXJgtAWIOqcaqC2jo2cpNt2K/NDExBReqCSH449p2huWf9oAwiQd604LMBB
fqRkJNR3Uz24mxbytukf7NftJNK1T9eCz00sin0j9p9GF3r+OF8D1F2dIkWU
uMhdb9nqKwdRwcnE4Ch+MvbQrWwhc99KcLBJ1NSzFrvPizccCx4IaK8njWVX
EciLjsWJ+WmVgh7VSYfHh7B3CFm6z8kWgZVGhnVkMva47YGOVX/lAe34vVYC
ydiLI2vEhOlZ4KTlaVebauzN6W8Vcv3fgJV1J+20PmI36JKvtHv1EpzKWqOo
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
z/8Hm5XKsg==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Hk8FesfB3BLKFuqG2UtdMsSRSHhUbaiSLJrkUIlibiWCAdZQ1mSZM0R
su/bc5xz5thK2SVdIrLfFq4l6dcfv/s8/ph/3q95zcx5Zr6fz5zZffnW2ass
TExM739vrL+3EDcuP0FVBlAx8x02iVTWEBAOiIwg/QMdJRmPXI8wQPcnbVbt
pKvgP7drUR3yVmYAQsHjYupjd+TSNX0JHxQZwD5Y6Vbnc3/krbnbOCvkGGCG
JfzBfr8Q5OT5MdLiLgYI4ont3VQSg3z6XVeFAS8DKHq+PV/BloBcydArQWOe
AA89kyIlmpKRu7D165F6CVC3YlpZFp2G/OmmzvHrRQRo9c4ZyXLJRP7t3dFK
4WACiMhdHRjQyEbeLyvV7mNOgBitlQ/2fTnIz1JMGRa7CHB9r2yVfXoe8vlf
9zSffqaDgEtWdwUOFyC/TKMuCeXRQY6q2KtLVkXInQ2mDvNdoYORJOcV4eJi
5F376Tx0YTpo2RxyNW6mBLl5bISCYCsNOIXkcnmolyEXaB+7kuhGA4+uFxwt
CyxH7t4+X3ZIlAZqTCgve/IrkI/Xqhk9qKOCPe0xHxSmKpEfcdacottQQd4B
0yf+3NXIY6MvrrB9aQQzTby7T2nWIL8mFHvD2r8RTOczDRo71CI/cSWdY3Jb
IwC97O8/uNUhL916RLo1iQJKzliFu0bXI/ct+K77TIICZGanE3tiGpA/et/k
umQOQVX0UgVzCETulh1NyJ9qAGnn2M8MaFGQ7wm8xt+lXw/kaqp8BKqwp8wJ
LGyUrQMe1d/q4w42Ir/SZHGyi7MWKE0XPZbLwl6tbEoK+LcamB8vC2njpOL7
y1yQuUqrAqHk0WIDd+xazuT04tRKIKjG93hXN3bl+c+cZJ8KoPEtuaJMloac
G+hkjKuUg73+7dod97HHuqumxLCXgRsx/E+5+rELrQVwSZaXgN0eNzUrpejI
d33VEDnvXgyaZZ7/MeOCvebLBy+oXATuFpnsny3G3sH2auVL+UtgfFSkYvUb
9sVs7u1REnmg0Pfx9VBpArll8OmfzWdzQJSuUD2bLfaTPvaGwaHPgYtfPEdx
DPZATvWRpYkMcFdpf91EJXbWELWdb7jSgETEjoUXg9jtvZJk0iqegMFm0fqQ
ZewJp27puF2PB1qrXn8W8jGQn3llcJ/FIBpETWVrbJTE7nFvUqp6LAwwD8sK
/ZLG3m6i8WjcLwgYn5i58PwA9mkeruyLOr5gOlHzzonD2I/FOK1+Dr8NirVz
L1xUwa625N7utsMCZD5jgPEj2MUivyeZrZrCJcUrv+bWOZM4e7K5ugt0TPCk
Plt3HNlYw5LsFW8YofOvIosS9ja/2aOnjUiQ3HY7u/zguusJTXX9LhYGnw00
FI7IYOcTdWHn+hELJbNnNn0Rxn5aMSaCpycRioaN9dLYsfedsFoyiEqBNw2C
Spam8Dr/1UqK3O6cDlNChfwK27Db+IA6Dv0s+COotG4hE/sGHocFuy/ZsMVc
3tXNC7v+x1X3zUEvoIuO+us6fextB069+noiH45EPSvz3Iq95f3cdHhfAfRp
PpdD68fPIX+9g/K51iKYHyO8KTUOu8rx3J8zIiXQREvSWuzUuv1bniYamJXC
iWrbmhhW7OA0c+WnzDL4Z5Tz4fhCPEcF8OukfG85dFp7s+eEDfYO3ZfXbH5W
wFwToxBBduyvzZ0dU5WrIF998u70TDzXF1tFbk6ZVcMYPZlaWS3s1g95ex7c
r4F9G6Qn63pwnlipPE22TamF7EOinHw3sLe2B84cJ9fBEWU+pktrOK9uRd5h
5afUw6VNejtYg7BXbS217G1ogAKjb7grebCbDdpfT2iF0FSiqtl+K85Jk0cS
MVeuUCA7baC5kg3nKhzt8F7spcAx9zSrBlacwx/8dcUrDBuhZeqlfec+4Twv
CnmVcaCmEX6TJxZYO3D+j7kkWziKUeGlOene7jrcF/I6tW0eoVSYrS7S5hFe
hTzN2I/56xgVRosfJ4fY495RqC0/KK9Lg407yjn6JHBPKRzPFHJJpcHl0uCx
jR9x35U3JL2fnaXBRV4VxdGCUpzbN4dcmtTpMOLGCf+X53Fv7tgy561PosMB
X2dvM1Hcs3aJWW9yqHRYl8lukUwtxH3tLGjGwkLAl6fG9Qw4XyKfmPiZvKxM
QF8KPynYKxd5ri159q0TAZPHykO8csn4/p5ZaGl5TMA9RpdrRNme4x63Ofej
s4GAQ6MCh4QcM5CHde1/bTNCQNtavzdSQqnIs6f/dNq1RsDoKgvyR5iEXOaZ
9kkDfgYcrLiYNDf1CPcsWfA08z4GPGzZER5mHolzmP6NpiLHgOKPCx7cWMLv
XUcn2z6IKzJgFOmJ2XxiAJ4jlpsb1pQY0JKr6KRv0F+4lw1Sks4cYUDH5OJn
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
/W+TSOWG//x/UGWR9g==
      "]]}, {
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, -1., 0}, {0, 1., 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
       FontColor->GrayLevel[0.4]]}}, 
    {RGBColor[0, 0, 1], PointSize[0.02], Thickness[0.003], 
     Point3DBox[{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}], Line3DBox[CompressedData["
1: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
      "]], 
     Line3DBox[CompressedData["
1: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

      "]]}}},
  VQM`VisualizeVector`QArrowShape -> NCache[{6, 
     Rational[1, 3]}, {6, 0.3333333333333333}],
  VQM`VisualizeVector`QLinePointSize -> 0.01,
  Axes->False,
  Boxed->False,
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellLabel->
  "Out[1345]=",ExpressionUUID->"21053b22-6add-4f3a-a62e-071fe8f18582"]
}, Open  ]],

Cell[TextData[{
 "Options for ",
 StyleBox["QVisualize", "InlineInput"],
 StyleBox["Vector", "InlineInput"],
 ", etc."
}], "Text",ExpressionUUID->"3fce4af2-d374-4f27-81da-43d41f4ad5fd"],

Cell[TextData[{
 StyleBox["QDrawUnitSphere->", "InlineInput"],
 "n \t\tdraws the outline of the unit sphere by plotting n (default: 20) \
circles.\n",
 StyleBox["QDrawAxes->True", "InlineInput"],
 " \t\t\tor, for example, ",
 StyleBox["QDrawAxes->{True, False, True}", "InlineInput"],
 " adds gray coordinate axes.\n",
 StyleBox["QCoordinateCube->->True", "InlineInput"],
 " \t\tadds a green cube indicating the components of the vector (default: \
False).\n",
 StyleBox["QCoordinateCircles->True", "InlineInput"],
 " \t\tadds blue coordinate lines indicating the polar coordinates of the \
vector.\n",
 StyleBox["QHeadColor->QExtractPhase", "InlineInput"],
 "\tworks only with ",
 StyleBox["QVisualizeSpinor", "InlineInput"],
 ", see ",
 StyleBox["QSpinorToArrow", "InlineInput"],
 "\n",
 StyleBox["QHeadColor->color", "InlineInput"],
 "\t\t\tdraws the vector with the given color"
}], "Text",ExpressionUUID->"bbd25819-6d38-42ac-9419-c0692ac9c14a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{936, 1065},
WindowMargins->{{Automatic, -1495}, {Automatic, 27}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification->1.,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info13243733657622-5963568"->{
  Cell[57950, 1947, 677, 14, 92, "Print",ExpressionUUID->"31c41b18-fe8f-483d-b565-0830524e1ba3",
   CellTags->"Info13243733657622-5963568"],
  Cell[58630, 1963, 522, 16, 22, "Print",ExpressionUUID->"8d2c79e3-8b26-4567-929e-b2df7917a4ef",
   CellTags->"Info13243733657622-5963568"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info13243733657622-5963568", 505205, 10004}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 253, 6, 28, "Input",ExpressionUUID->"0d7e1d1a-a8d1-4c50-b39c-436a0ba7c00f"],
Cell[823, 30, 352, 9, 32, "Output",ExpressionUUID->"a9952622-967f-4e80-83ef-ad489139b58b"]
}, Open  ]],
Cell[1190, 42, 252, 5, 63, "Program",ExpressionUUID->"4be8870a-a3bd-4214-b15b-6d11f6d61210"],
Cell[CellGroupData[{
Cell[1467, 51, 93, 0, 96, "Title",ExpressionUUID->"0a0c03bd-2c71-4ee1-9394-751627ff19f2"],
Cell[1563, 53, 162, 6, 114, "Subsubtitle",ExpressionUUID->"7634f8b2-07ec-4d1a-a225-3a91e82be12b"],
Cell[CellGroupData[{
Cell[1750, 63, 85, 0, 53, "Subsection",ExpressionUUID->"b5447cef-737a-4732-b30e-0cef49736323"],
Cell[1838, 65, 954, 19, 122, "Text",ExpressionUUID->"52a0d80e-3420-41cd-9ac4-235276f12f93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2829, 89, 86, 0, 67, "Section",ExpressionUUID->"bb5f607e-811c-4cd3-b99c-a7c083894bfc"],
Cell[2918, 91, 329, 5, 28, "Input",ExpressionUUID->"e6041aa1-7e88-4597-b55c-1969c0cdf946"],
Cell[3250, 98, 267, 5, 28, "Input",ExpressionUUID->"df2e9b1b-40f7-4601-85f8-913a54be41b0"],
Cell[3520, 105, 217, 6, 34, "Text",ExpressionUUID->"7a480ff4-c96f-42d0-bf76-5d8fefe7ed09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3774, 116, 79, 0, 67, "Section",ExpressionUUID->"50e88c4d-e232-419e-b26c-3358ec50a762"],
Cell[3856, 118, 938, 24, 56, "Text",ExpressionUUID->"913c2be6-219a-41da-af0c-beab2e10ed0c"],
Cell[CellGroupData[{
Cell[4819, 146, 112, 2, 28, "Input",ExpressionUUID->"da7706ec-6643-4bcd-ac4e-9c1b800719bf"],
Cell[4934, 150, 255, 8, 32, "Output",ExpressionUUID->"1511b735-6dbd-4ecf-a980-8e66b6132c6b"]
}, Open  ]],
Cell[5204, 161, 367, 8, 34, "Text",ExpressionUUID->"376bc828-166e-475b-aad9-a4ab16f507ab"],
Cell[5574, 171, 490, 14, 56, "Text",ExpressionUUID->"5cc3e2af-cc94-4584-9f30-4b822b7737a4"],
Cell[CellGroupData[{
Cell[6089, 189, 108, 2, 28, "Input",ExpressionUUID->"3e77ec9f-e02b-4c5c-bd5e-8e68ed16ca85"],
Cell[6200, 193, 438, 17, 63, "Output",ExpressionUUID->"5a900e27-1cd8-4d3c-bbee-a579a57c8868"]
}, Open  ]],
Cell[6653, 213, 317, 6, 56, "Text",ExpressionUUID->"608ae862-7587-4e2f-b40d-a11cce90fac3"],
Cell[6973, 221, 530, 13, 78, "Text",ExpressionUUID->"dc17c9a7-0c8f-47bf-b07a-99f7e8f29f62"],
Cell[CellGroupData[{
Cell[7528, 238, 143, 5, 44, "Input",ExpressionUUID->"8a00ad3f-c3e7-4d2e-b095-49ac19045bfd"],
Cell[7674, 245, 438, 17, 63, "Output",ExpressionUUID->"660b104a-256e-4730-b3e9-228fb526b87e"]
}, Open  ]],
Cell[8127, 265, 751, 17, 100, "Text",ExpressionUUID->"440c7b96-f668-4606-9b1d-f56c5bf1cf6b"],
Cell[CellGroupData[{
Cell[8903, 286, 140, 2, 28, "Input",ExpressionUUID->"dd101017-c663-4de7-8ec0-c9a8d5b17ef4"],
Cell[9046, 290, 250, 9, 63, "Output",ExpressionUUID->"4391e438-ce08-49d9-b87f-f1121d7a383d"]
}, Open  ]],
Cell[9311, 302, 446, 8, 78, "Text",ExpressionUUID->"fdfa3b74-0ea3-4aaf-85bd-c70b28d51271"],
Cell[CellGroupData[{
Cell[9782, 314, 132, 2, 28, "Input",ExpressionUUID->"261b5ebc-801c-4791-b974-742d871f757f"],
Cell[9917, 318, 157, 4, 32, "Output",ExpressionUUID->"42fd05d9-59d5-4dc8-8227-6a2554bf7321"]
}, Open  ]],
Cell[10089, 325, 284, 7, 34, "Text",ExpressionUUID->"9cc80d4c-5f68-4372-9250-4c9863721db4"],
Cell[CellGroupData[{
Cell[10398, 336, 194, 5, 28, "Input",ExpressionUUID->"30e709a0-5d6d-4b4a-9fd7-a65bd7d347b9"],
Cell[10595, 343, 201, 6, 55, "Output",ExpressionUUID->"6d2451ea-c03d-4575-a30c-a70789265ba5"]
}, Open  ]],
Cell[10811, 352, 283, 6, 34, "Text",ExpressionUUID->"584749ff-1ddb-49bb-bc1b-11993eb60b70"],
Cell[CellGroupData[{
Cell[11119, 362, 387, 11, 48, "Input",ExpressionUUID->"16c057e7-aa6a-43bd-a1fd-eaa78a713b50"],
Cell[11509, 375, 115, 2, 32, "Output",ExpressionUUID->"4741a7fa-f67b-479f-a7f9-9968de24bed2"]
}, Open  ]],
Cell[11639, 380, 416, 11, 56, "Text",ExpressionUUID->"12e8f613-e334-48f6-84ef-50196b6e3479"],
Cell[12058, 393, 303, 4, 56, "Text",ExpressionUUID->"ae608c06-31ab-476c-bf30-34bec13b87ae"],
Cell[CellGroupData[{
Cell[12386, 401, 125, 2, 28, "Input",ExpressionUUID->"18be9348-4611-4aee-8d46-043a4fa4580f"],
Cell[12514, 405, 715, 21, 220, "Output",ExpressionUUID->"4a28527c-cede-4092-b704-58984f1b7b25"]
}, Open  ]],
Cell[13244, 429, 629, 15, 78, "Text",ExpressionUUID->"527a5b88-0e59-40da-8a49-57ed3995764f"],
Cell[CellGroupData[{
Cell[13898, 448, 161, 5, 44, "Input",ExpressionUUID->"11c35d57-cb27-4ae3-b815-c31809142711"],
Cell[14062, 455, 550, 15, 220, "Output",ExpressionUUID->"ebbe0756-9b57-4b2e-90f9-c031f3e9f783"]
}, Open  ]],
Cell[14627, 473, 387, 7, 56, "Text",ExpressionUUID->"52a603e7-1785-469c-a903-37d925ec5b94"],
Cell[CellGroupData[{
Cell[15039, 484, 138, 2, 28, "Input",ExpressionUUID->"6759cda5-d0b7-4dcb-bbd9-3ecbe6d9d6b8"],
Cell[15180, 488, 342, 11, 56, "Output",ExpressionUUID->"6cf2a5aa-6103-413a-b025-72ad7bab49ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15559, 504, 148, 2, 28, "Input",ExpressionUUID->"10953743-19af-4fb8-b4ca-4ac80b122ef6"],
Cell[15710, 508, 190, 6, 43, "Output",ExpressionUUID->"2c452e9c-69c2-4322-9884-985f8daa798a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15937, 519, 146, 2, 28, "Input",ExpressionUUID->"aa6d4d3b-a22f-49d0-867d-59a827fc1035"],
Cell[16086, 523, 632, 19, 220, "Output",ExpressionUUID->"9f05e378-2ce0-4ac3-9057-b12c19b72b52"]
}, Open  ]],
Cell[16733, 545, 112, 0, 34, "Text",ExpressionUUID->"80e07804-9801-4582-8b41-7cb5a5c71f0a"],
Cell[CellGroupData[{
Cell[16870, 549, 113, 2, 28, "Input",ExpressionUUID->"753d670d-0193-4081-ae97-43806f6c32eb"],
Cell[16986, 553, 123, 3, 36, "Output",ExpressionUUID->"55a8add9-7e06-4918-bbd3-ae842af1f66a"]
}, Open  ]],
Cell[17124, 559, 164, 4, 34, "Text",ExpressionUUID->"7fbee2ce-bdae-4a22-88af-3fb85474fbae"],
Cell[CellGroupData[{
Cell[17313, 567, 119, 2, 28, "Input",ExpressionUUID->"734507fb-a90a-4a0c-9aca-ec79ae3507c1"],
Cell[17435, 571, 262, 9, 64, "Output",ExpressionUUID->"3b52a7e9-e24c-472e-8002-e740b2e26467"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17734, 585, 108, 2, 28, "Input",ExpressionUUID->"fe46c062-4548-48c5-aacd-12a98207cc2d"],
Cell[17845, 589, 112, 2, 32, "Output",ExpressionUUID->"c7499baf-e1c8-48dc-b1bc-952010dafffc"]
}, Open  ]],
Cell[17972, 594, 193, 4, 34, "Text",ExpressionUUID->"bd9afc9b-4d4c-4062-b9be-2eb63e5d928c"],
Cell[CellGroupData[{
Cell[18190, 602, 120, 2, 28, "Input",ExpressionUUID->"70e5d564-3fbd-4815-9961-5f16c9aaaf97"],
Cell[18313, 606, 277, 10, 75, "Output",ExpressionUUID->"e4e37c48-f93f-49f2-833f-b0ce5458aa2d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18639, 622, 87, 0, 67, "Section",ExpressionUUID->"38709526-1acf-4d1a-8f9f-1874ba3b74ab"],
Cell[18729, 624, 504, 13, 56, "Text",ExpressionUUID->"edc63e7b-af01-40d9-8bb2-4d566ae58fcc"],
Cell[CellGroupData[{
Cell[19258, 641, 125, 2, 28, "Input",ExpressionUUID->"23eec854-a328-46f9-bc6c-83584e94377b"],
Cell[19386, 645, 729, 21, 62, "Output",ExpressionUUID->"5342e770-2123-4da7-b9ce-6ce70936cb4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20152, 671, 113, 2, 28, "Input",ExpressionUUID->"7541402f-655b-4644-9498-3ef95c0bfebc"],
Cell[20268, 675, 702, 24, 32, "Output",ExpressionUUID->"3edc3a26-2526-4d45-b4b1-51e2d41d3370"]
}, Open  ]],
Cell[20985, 702, 800, 18, 100, "Text",ExpressionUUID->"7dc99561-3ff3-41e0-ab46-255112c14422"],
Cell[21788, 722, 130, 0, 34, "Text",ExpressionUUID->"3fd1f7f0-393f-483e-8713-af9d02632815"],
Cell[21921, 724, 152, 5, 44, "Input",ExpressionUUID->"c25e2d4a-5fae-4e62-9432-356c51bdd27a"],
Cell[CellGroupData[{
Cell[22098, 733, 207, 5, 28, "Input",ExpressionUUID->"a636d616-39a7-47f9-b39e-38e588f258d4"],
Cell[22308, 740, 412, 13, 32, "Output",ExpressionUUID->"f4c32465-d3ea-49ea-80b0-394a7c7c674e"]
}, Open  ]],
Cell[22735, 756, 339, 8, 34, "Text",ExpressionUUID->"d53af9d1-7c3a-43bb-9375-9618b8086423"],
Cell[23077, 766, 181, 3, 34, "Text",ExpressionUUID->"76cb17ab-a6e8-47d2-ac38-11f098a98e5c"],
Cell[CellGroupData[{
Cell[23283, 773, 132, 2, 28, "Input",ExpressionUUID->"cb4fe5ad-bd7a-4d5f-8b8b-efea8de054a5"],
Cell[23418, 777, 657, 22, 56, "Output",ExpressionUUID->"97380436-5aea-4793-8ddd-39aa1c1a2b10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24112, 804, 144, 3, 28, "Input",ExpressionUUID->"01d1bf75-f022-4de9-a9d5-c7d8db6d4b45"],
Cell[24259, 809, 1099, 34, 88, "Output",ExpressionUUID->"8c7e52eb-0bdd-4682-b7ff-593ab6504ca1"]
}, Open  ]],
Cell[25373, 846, 151, 2, 34, "Text",ExpressionUUID->"15528963-9b78-4902-9ae4-a8efb3d23316"],
Cell[CellGroupData[{
Cell[25549, 852, 140, 2, 28, "Input",ExpressionUUID->"ef5bdb92-1a88-49ba-bbc2-d2082dc58a29"],
Cell[25692, 856, 445, 14, 32, "Output",ExpressionUUID->"94b1178b-6ce3-488b-a7ec-b78f502795ba"]
}, Open  ]],
Cell[26152, 873, 103, 0, 34, "Text",ExpressionUUID->"1e939c33-10eb-41fb-bf17-ddcc2539c013"],
Cell[CellGroupData[{
Cell[26280, 877, 137, 2, 28, "Input",ExpressionUUID->"75709916-0021-48af-ace5-047d9596c632"],
Cell[26420, 881, 412, 13, 32, "Output",ExpressionUUID->"972c4ce2-9834-4d04-a19f-e84106bb462c"]
}, Open  ]],
Cell[26847, 897, 120, 0, 34, "Text",ExpressionUUID->"65dfcefc-f6e8-4d2b-8929-dc8c9541b2c6"],
Cell[26970, 899, 168, 3, 34, "Text",ExpressionUUID->"233e9664-50d6-43cc-9372-fe30f465ff69"],
Cell[27141, 904, 215, 5, 34, "Text",ExpressionUUID->"e3fe1228-7ec5-465b-8562-1967363810bf"],
Cell[27359, 911, 211, 5, 34, "Text",ExpressionUUID->"fc24d4a3-a9f6-4e7f-b58d-5484655be719"],
Cell[CellGroupData[{
Cell[27595, 920, 256, 6, 28, "Input",ExpressionUUID->"012cdf7e-40ee-40f6-8b02-64627e59890f"],
Cell[27854, 928, 181, 4, 32, "Output",ExpressionUUID->"a86a4fd6-939b-44da-b142-dea368857106"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28072, 937, 179, 4, 28, "Input",ExpressionUUID->"beac97bd-afbc-4117-a0ae-2c228a146d53"],
Cell[28254, 943, 170, 4, 32, "Output",ExpressionUUID->"6fc3b8ea-28db-4735-9f00-4671d5fa5e42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28461, 952, 176, 4, 28, "Input",ExpressionUUID->"210997a3-61e6-4816-871d-a02e9fa1cf61"],
Cell[28640, 958, 115, 2, 32, "Output",ExpressionUUID->"07b45474-05db-48d1-99c9-081eb57af006"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28804, 966, 111, 0, 67, "Section",ExpressionUUID->"0beaaef5-7f64-4d84-9be5-bf24cd4122ad"],
Cell[28918, 968, 688, 20, 56, "Text",ExpressionUUID->"b5a9f735-0a90-4a6b-a686-c71d74b25538"],
Cell[29609, 990, 140, 2, 28, "Input",ExpressionUUID->"9f106155-776e-449a-a2d2-4eb165eef6a5"],
Cell[CellGroupData[{
Cell[29774, 996, 190, 5, 28, "Input",ExpressionUUID->"9dedaacd-e42e-4542-821f-4dacf5905ac1"],
Cell[29967, 1003, 2028, 66, 104, "Output",ExpressionUUID->"99107fca-3f5b-40c2-9b3c-b155aea916c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32032, 1074, 197, 5, 28, "Input",ExpressionUUID->"8a0e8a4e-a806-4410-a8e9-48dda8129208"],
Cell[32232, 1081, 115, 2, 32, "Output",ExpressionUUID->"69e4caf2-f91b-4563-b82b-e0ebdff86f00"]
}, Open  ]],
Cell[32362, 1086, 471, 12, 56, "Text",ExpressionUUID->"2995de42-8498-4750-b8f6-7f03bc15b773"],
Cell[CellGroupData[{
Cell[32858, 1102, 142, 2, 28, "Input",ExpressionUUID->"e4379f27-3bef-426b-95c2-185217d13e6d"],
Cell[33003, 1106, 112, 2, 32, "Output",ExpressionUUID->"768880a8-6c4c-495c-98cf-081c833032c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33152, 1113, 144, 2, 28, "Input",ExpressionUUID->"8ebdfde9-1a87-401e-97bf-6480cc0210a7"],
Cell[33299, 1117, 112, 2, 32, "Output",ExpressionUUID->"11196dd3-75e3-4ce6-80e4-a79480c197d4"]
}, Open  ]],
Cell[33426, 1122, 262, 6, 34, "Text",ExpressionUUID->"103ffec4-177f-4071-94a8-a4e42e3eaced"],
Cell[33691, 1130, 337, 7, 56, "Text",ExpressionUUID->"1f8f639a-ffb2-412e-93c0-8afc44fcf068"],
Cell[CellGroupData[{
Cell[34053, 1141, 120, 2, 28, "Input",ExpressionUUID->"4ffa3585-5928-4486-920c-52401e089aa5"],
Cell[34176, 1145, 157, 4, 32, "Output",ExpressionUUID->"5aef3598-3a1e-41c7-b1dd-9245671b43a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34370, 1154, 136, 2, 28, "Input",ExpressionUUID->"2afc50ab-e09b-4138-a08c-b7529ff9d129"],
Cell[34509, 1158, 169, 4, 32, "Output",ExpressionUUID->"61d2d896-dcae-4290-81e8-c4671655ce93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34715, 1167, 137, 2, 28, "Input",ExpressionUUID->"a045d813-be63-49fb-8aec-38889896fa5a"],
Cell[34855, 1171, 169, 4, 32, "Output",ExpressionUUID->"9e59adf0-10f1-43c9-b758-37fcc18dbe13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35061, 1180, 136, 2, 28, "Input",ExpressionUUID->"05af6871-b5fd-44e9-94e4-f544ff3c62ff"],
Cell[35200, 1184, 169, 4, 32, "Output",ExpressionUUID->"5d735310-e78e-4630-aac7-ee290a9c0fae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35418, 1194, 93, 0, 67, "Section",ExpressionUUID->"5c67dbe7-385e-4862-913e-2ff34491b5ef"],
Cell[35514, 1196, 122, 0, 34, "Text",ExpressionUUID->"d7b68932-0fed-4c53-b61b-0edea1d83277"],
Cell[CellGroupData[{
Cell[35661, 1200, 122, 2, 28, "Input",ExpressionUUID->"6c56fe90-0c0c-440f-9b1d-aa57f6c34a25"],
Cell[35786, 1204, 273, 9, 55, "Output",ExpressionUUID->"357ca902-f57a-4e46-867a-67b3a349c9ef"]
}, Open  ]],
Cell[36074, 1216, 178, 3, 34, "Text",ExpressionUUID->"9311b78a-62d4-4998-834c-21dc7f73bbdd"],
Cell[CellGroupData[{
Cell[36277, 1223, 120, 2, 28, "Input",ExpressionUUID->"2edd5f5d-f885-4596-89b8-1b32cfda87d4"],
Cell[36400, 1227, 308, 10, 56, "Output",ExpressionUUID->"6f6ade6f-a646-4401-9298-5676e0240f4c"]
}, Open  ]],
Cell[36723, 1240, 116, 0, 34, "Text",ExpressionUUID->"74f1e7e6-fb14-4a3d-a135-c000cc653db3"],
Cell[CellGroupData[{
Cell[36864, 1244, 120, 2, 28, "Input",ExpressionUUID->"f79fbe61-7605-48a2-9d01-e0982b55c525"],
Cell[36987, 1248, 273, 9, 55, "Output",ExpressionUUID->"82f30f86-821b-45cd-b2c7-09ec26b7e3c3"]
}, Open  ]],
Cell[37275, 1260, 341, 10, 34, "Text",ExpressionUUID->"4055c9f0-6260-4bd5-afd6-79704e26cd03"],
Cell[CellGroupData[{
Cell[37641, 1274, 146, 2, 28, "Input",ExpressionUUID->"b8ffc471-d631-4570-966d-cf5d689b2556"],
Cell[37790, 1278, 115, 2, 32, "Output",ExpressionUUID->"f12ccfd6-a02b-4f0c-bdcd-1181f4fc3d7c"]
}, Open  ]],
Cell[37920, 1283, 211, 5, 34, "Text",ExpressionUUID->"96124e82-ec76-403b-a984-969d3f0ca7f2"],
Cell[38134, 1290, 369, 8, 100, "Text",ExpressionUUID->"2b0bca09-3870-4224-9ab6-02948712852c"],
Cell[38506, 1300, 157, 2, 34, "Text",ExpressionUUID->"a6d821a8-97b8-418f-880c-4d08987049aa"],
Cell[38666, 1304, 382, 8, 100, "Text",ExpressionUUID->"367012a9-018a-4f83-b219-c97047f04e1f"],
Cell[39051, 1314, 256, 8, 34, "Text",ExpressionUUID->"7ee46b0b-9fd9-45d2-9d5f-aafff2f6d439"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39344, 1327, 87, 0, 67, "Section",ExpressionUUID->"571a1e98-ddab-4711-b60f-3f7492e60acf"],
Cell[39434, 1329, 237, 3, 56, "Text",ExpressionUUID->"381e29d3-1309-4575-b30b-022d375008d8"],
Cell[CellGroupData[{
Cell[39696, 1336, 123, 2, 28, "Input",ExpressionUUID->"d7e45a57-b666-4977-9c4e-00067c3efbfc"],
Cell[39822, 1340, 308, 10, 56, "Output",ExpressionUUID->"fb814c0c-0ada-4324-98f0-2a966f4c3593"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40167, 1355, 121, 2, 28, "Input",ExpressionUUID->"87451acd-a511-41a0-b61f-5e8a2ecaf868"],
Cell[40291, 1359, 273, 9, 55, "Output",ExpressionUUID->"5be278ec-1cc1-454d-9545-4189b06cf550"]
}, Open  ]],
Cell[40579, 1371, 171, 3, 34, "Text",ExpressionUUID->"24541710-78c2-4069-9b61-287e3476ba8d"],
Cell[40753, 1376, 479, 11, 56, "Text",ExpressionUUID->"46ee60f2-8f7c-4f50-b2ee-4f60b46cfb59"],
Cell[CellGroupData[{
Cell[41257, 1391, 127, 2, 28, "Input",ExpressionUUID->"07b4f893-dcfc-4870-a377-2c31d20dc9cc"],
Cell[41387, 1395, 288, 10, 64, "Output",ExpressionUUID->"c36ab1ce-8755-4836-bc3e-25031dd37d9a"]
}, Open  ]],
Cell[41690, 1408, 122, 0, 34, "Text",ExpressionUUID->"b0128b5c-246a-4824-adbb-ace16034ac30"],
Cell[CellGroupData[{
Cell[41837, 1412, 127, 2, 28, "Input",ExpressionUUID->"8e158ea3-2cf8-4d73-88f9-d83d3bd06eef"],
Cell[41967, 1416, 211, 6, 55, "Output",ExpressionUUID->"f059c38b-aabd-4613-8d5c-dceb35c1e33c"]
}, Open  ]],
Cell[42193, 1425, 242, 7, 34, "Text",ExpressionUUID->"bbd05c1a-bfff-4ac1-a602-4f7c96c277d2"],
Cell[CellGroupData[{
Cell[42460, 1436, 115, 2, 28, "Input",ExpressionUUID->"75d3de41-8e58-4b24-bf95-3514bed4c466"],
Cell[42578, 1440, 241, 8, 64, "Output",ExpressionUUID->"283d4207-d210-4873-a77c-24ae4eeb0530"]
}, Open  ]],
Cell[42834, 1451, 211, 5, 34, "Text",ExpressionUUID->"ceb19f78-7780-44c6-b24b-f41ca2c29250"],
Cell[CellGroupData[{
Cell[43070, 1460, 124, 2, 28, "Input",ExpressionUUID->"02a9ea08-e04d-408c-8dd7-2c3e4ab452ed"],
Cell[43197, 1464, 154, 4, 53, "Output",ExpressionUUID->"3f00d98d-a55c-4035-8221-b656f42b0a3e"]
}, Open  ]],
Cell[43366, 1471, 244, 6, 34, "Text",ExpressionUUID->"7ad1d988-109e-4a5c-b923-42213a14d8a9"],
Cell[CellGroupData[{
Cell[43635, 1481, 125, 2, 28, "Input",ExpressionUUID->"213de24c-4929-4b16-a088-d701394caf3b"],
Cell[43763, 1485, 288, 10, 64, "Output",ExpressionUUID->"d671664f-3fda-4384-a38b-853764f3446d"]
}, Open  ]],
Cell[44066, 1498, 181, 3, 34, "Text",ExpressionUUID->"324aa201-3a11-4d36-b023-d9d9b0514f83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44284, 1506, 83, 0, 67, "Section",ExpressionUUID->"f6ed9647-6a97-444a-bb95-48019501ead6"],
Cell[44370, 1508, 736, 23, 78, "Text",ExpressionUUID->"a8827867-0522-43d5-ba92-7b18d9ff870e"],
Cell[45109, 1533, 83, 0, 34, "Text",ExpressionUUID->"e230af2d-4a0c-456e-aaec-19b046621af3"],
Cell[CellGroupData[{
Cell[45217, 1537, 137, 2, 28, "Input",ExpressionUUID->"5e1357f3-71cd-44a3-8e6f-b6f85c67c580"],
Cell[45357, 1541, 727, 22, 62, "Output",ExpressionUUID->"a8caf464-558d-45d1-a70c-4b83cb6ee73e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46121, 1568, 134, 2, 28, "Input",ExpressionUUID->"53d5c9e3-2467-4e0b-9657-a0b6727a1979"],
Cell[46258, 1572, 1723, 57, 130, "Output",ExpressionUUID->"4f8fe834-1c8c-42df-a963-f2fdde7be08c"]
}, Open  ]],
Cell[47996, 1632, 215, 3, 56, "Text",ExpressionUUID->"983305e5-dd13-4b08-88af-92c3246dde66"],
Cell[48214, 1637, 175, 5, 44, "Input",ExpressionUUID->"8eead72f-0506-4730-9d84-292c310f96fb"],
Cell[CellGroupData[{
Cell[48414, 1646, 154, 2, 28, "Input",ExpressionUUID->"d1b2dffc-fc4a-4a7d-bce6-7a1faa4baf65"],
Cell[48571, 1650, 1100, 34, 56, "Output",ExpressionUUID->"e77d8d56-8115-4563-b0dc-73aa3edd7f0d"]
}, Open  ]],
Cell[49686, 1687, 112, 0, 34, "Text",ExpressionUUID->"57482c70-22c8-4b4d-8cb5-ded6de39258b"],
Cell[CellGroupData[{
Cell[49823, 1691, 205, 5, 28, "Input",ExpressionUUID->"316aba18-c74c-408a-a414-7265e6ac9954"],
Cell[50031, 1698, 1081, 34, 56, "Output",ExpressionUUID->"46b375e1-64ff-4f85-8608-d481e96feecc"]
}, Open  ]],
Cell[51127, 1735, 210, 3, 56, "Text",ExpressionUUID->"f887189f-27cc-460a-8ea5-35026e83b0db"],
Cell[CellGroupData[{
Cell[51362, 1742, 267, 7, 76, "Input",ExpressionUUID->"7b732964-c3be-4704-ae33-aff1dc211803"],
Cell[51632, 1751, 115, 2, 32, "Output",ExpressionUUID->"3f682370-c22b-4ea8-9ce7-420700a6a522"]
}, Open  ]],
Cell[51762, 1756, 163, 3, 34, "Text",ExpressionUUID->"bad6c460-d16b-4e4b-8e44-b34446ad03b0"],
Cell[51928, 1761, 177, 6, 60, "Input",ExpressionUUID->"e4d2b0e0-363c-4bf8-839c-1f584d3626e1"],
Cell[CellGroupData[{
Cell[52130, 1771, 171, 4, 28, "Input",ExpressionUUID->"891b40b9-547b-4788-a342-8a9dac41c11e"],
Cell[52304, 1777, 115, 2, 32, "Output",ExpressionUUID->"fc09be97-ddb0-49e2-b9c7-7875fe090960"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52456, 1784, 210, 5, 28, "Input",ExpressionUUID->"b1000622-aeea-424f-b7d9-35d11ffb5630"],
Cell[52669, 1791, 115, 2, 32, "Output",ExpressionUUID->"21a266f3-4c6d-4499-9265-86c0b2555cd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52821, 1798, 124, 2, 28, "Input",ExpressionUUID->"f0982a92-9224-45ed-8184-1e01dc82d97f"],
Cell[52948, 1802, 125, 2, 32, "Output",ExpressionUUID->"5cf582ba-2a7e-4a62-806b-9b4c85ff33f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53110, 1809, 218, 4, 28, "Input",ExpressionUUID->"2f1f9658-4b37-44f3-9ed4-ea454b8034e0"],
Cell[53331, 1815, 3741, 97, 52, "Output",ExpressionUUID->"58177208-2aee-42ba-8c1c-9611f0959ba9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57121, 1918, 87, 0, 67, "Section",ExpressionUUID->"8a7e1a71-9a11-4739-8500-938267be4570"],
Cell[CellGroupData[{
Cell[57233, 1922, 161, 3, 28, "Input",ExpressionUUID->"fe03c456-f264-48cd-88a5-b3d680b527ce"],
Cell[57397, 1927, 120, 2, 32, "Output",ExpressionUUID->"582c75c5-02bf-4c07-9ae4-8e7b54506809"]
}, Open  ]],
Cell[57532, 1932, 170, 3, 34, "Text",ExpressionUUID->"b8ab646d-5967-40ef-a2ba-649928d754b6"],
Cell[CellGroupData[{
Cell[57727, 1939, 198, 4, 28, "Input",ExpressionUUID->"a50fc522-2a6b-4958-b463-9dac44e7caf1"],
Cell[CellGroupData[{
Cell[57950, 1947, 677, 14, 92, "Print",ExpressionUUID->"31c41b18-fe8f-483d-b565-0830524e1ba3",
 CellTags->"Info13243733657622-5963568"],
Cell[58630, 1963, 522, 16, 22, "Print",ExpressionUUID->"8d2c79e3-8b26-4567-929e-b2df7917a4ef",
 CellTags->"Info13243733657622-5963568"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59201, 1985, 498, 11, 28, "Input",ExpressionUUID->"1193572c-242e-4704-ad97-7d596b7d54b2"],
Cell[59702, 1998, 5391, 97, 327, "Output",ExpressionUUID->"f95b8acb-fbe3-42ee-8d1c-e6153bffee94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65130, 2100, 752, 18, 28, "Input",ExpressionUUID->"7c23333a-592d-48a7-afb7-ab3eca88a2aa"],
Cell[65885, 2120, 2341, 50, 407, "Output",ExpressionUUID->"8ce2261f-531c-46e0-9059-7f164a801ed7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68263, 2175, 272, 5, 28, "Input",ExpressionUUID->"36539d0b-0661-4b60-883a-079752f6281b"],
Cell[68538, 2182, 3417, 70, 242, "Output",ExpressionUUID->"2e10b184-b5ac-4fee-ac27-994c6d40d508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71992, 2257, 698, 13, 28, "Input",ExpressionUUID->"0759c71e-61bf-429c-9ad5-e652de21ffac"],
Cell[72693, 2272, 2258, 47, 193, "Output",ExpressionUUID->"d76c3e31-eedd-41bb-9aea-90903e7763e9"]
}, Open  ]],
Cell[74966, 2322, 431, 9, 56, "Text",ExpressionUUID->"cc5463da-2ef7-4ad1-9f46-5c2dd99d0932"],
Cell[75400, 2333, 313, 7, 56, "Text",ExpressionUUID->"a4332a94-0860-495e-b81c-a65d65dc2878"],
Cell[CellGroupData[{
Cell[75738, 2344, 157, 3, 28, "Input",ExpressionUUID->"a149c0c7-7e9c-4dc7-958e-db0b7c691596"],
Cell[75898, 2349, 3741, 97, 52, "Output",ExpressionUUID->"965fdfbd-df36-4757-b588-ec71e8b577ba"]
}, Open  ]],
Cell[79654, 2449, 461, 9, 56, "Text",ExpressionUUID->"08a80458-bdff-4eef-acd5-efe961cc60fc"],
Cell[80118, 2460, 270, 5, 34, "Text",ExpressionUUID->"afafcf86-5226-4b09-8864-80f0d5912e07"],
Cell[80391, 2467, 867, 38, 56, "Text",ExpressionUUID->"7281e2b6-c30d-4ea7-8278-6f86df55b050"],
Cell[81261, 2507, 290, 9, 34, "Text",ExpressionUUID->"51a56148-fc43-4008-917c-4358f10d10a3"],
Cell[81554, 2518, 310, 7, 34, "Text",ExpressionUUID->"1be72a74-3ae4-4bb6-a32e-15bbcb029eee"],
Cell[81867, 2527, 383, 12, 34, "Text",ExpressionUUID->"dab1984c-c8ea-417a-970c-5f63d05aec2b"],
Cell[82253, 2541, 595, 14, 78, "Text",ExpressionUUID->"39356d40-789b-42de-a855-ca464583343c"],
Cell[82851, 2557, 94, 0, 34, "Text",ExpressionUUID->"837e6dfb-e964-49fe-91ef-92e1687c2639"],
Cell[CellGroupData[{
Cell[82970, 2561, 411, 10, 76, "Input",ExpressionUUID->"a739e3bd-79c5-4ef0-8443-409d5c7d32bd"],
Cell[83384, 2573, 7388, 131, 408, "Output",ExpressionUUID->"55ec90ff-8b32-4f7c-8c13-ece417501631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90809, 2709, 208, 4, 28, "Input",ExpressionUUID->"042e786d-2f2e-47ee-900f-b05e94588e50"],
Cell[91020, 2715, 2832, 55, 462, "Output",ExpressionUUID->"b94baefe-de18-474e-a5fb-4e96dfad297d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93889, 2775, 2955, 58, 476, "Input",ExpressionUUID->"e5013eb2-4f95-4fa0-92c8-a3e45a5b9baa"],
Cell[96847, 2835, 7411, 132, 408, "Output",ExpressionUUID->"9c9a6e4e-41b6-4daf-9278-618867b824fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104295, 2972, 268, 5, 28, "Input",ExpressionUUID->"cc1cd452-b2ae-4efb-8ee8-4b62bc018401"],
Cell[104566, 2979, 3741, 97, 52, "Output",ExpressionUUID->"d865e5bc-9dbb-4ad9-b734-ed455b610068"]
}, Open  ]],
Cell[108322, 3079, 176, 3, 28, "Input",ExpressionUUID->"1a954d50-3f96-4f18-b32f-f94ad88c814e"],
Cell[CellGroupData[{
Cell[108523, 3086, 961, 20, 51, "Input",ExpressionUUID->"20c758b7-23e0-440b-9c5c-1143a3c08a37"],
Cell[109487, 3108, 7387, 131, 408, "Output",ExpressionUUID->"7b23fc28-5a53-4599-89ea-fd5f194270b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116911, 3244, 223, 4, 28, "Input",ExpressionUUID->"f17bb107-a18b-40a7-820c-69c4b2eaaba8"],
Cell[117137, 3250, 3741, 97, 52, "Output",ExpressionUUID->"3b06b2fb-42f0-4aed-9542-83e93ee37ecb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120915, 3352, 788, 18, 51, "Input",ExpressionUUID->"2faf96fa-365d-489e-b3ef-09497f7c8dd5"],
Cell[121706, 3372, 7392, 131, 408, "Output",ExpressionUUID->"93b72ca1-7301-4660-8fa7-a0f9180fd875"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129135, 3508, 628, 16, 46, "Input",ExpressionUUID->"ea7f43f0-7870-47a1-95f8-78f1ffaac832"],
Cell[129766, 3526, 2279, 48, 193, "Output",ExpressionUUID->"38ef6e7e-fa96-4dd2-b0f8-de897227904e"]
}, Open  ]],
Cell[132060, 3577, 482, 10, 78, "Text",ExpressionUUID->"27848b9a-88a7-40e4-b1b9-4336ffacd314"],
Cell[CellGroupData[{
Cell[132567, 3591, 159, 3, 28, "Input",ExpressionUUID->"b4a6e141-63aa-4220-97c2-e30f9b81de69"],
Cell[132729, 3596, 5654, 145, 71, "Output",ExpressionUUID->"39f26186-cfd7-4b00-820c-b7b782cc0263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138420, 3746, 227, 4, 28, "Input",ExpressionUUID->"c14f8d10-c667-4da7-9ab0-62c24a8c62b0"],
Cell[138650, 3752, 5653, 145, 71, "Output",ExpressionUUID->"8a636fda-4082-4d01-b486-5b0e3ee82f24"]
}, Open  ]],
Cell[144318, 3900, 283, 5, 56, "Text",ExpressionUUID->"799aaf3c-ec3a-413a-86f5-35209cb0635f"],
Cell[CellGroupData[{
Cell[144626, 3909, 703, 10, 28, "Input",ExpressionUUID->"8ac3f506-de07-47b5-b283-24688b7713c0"],
Cell[145332, 3921, 103658, 1735, 408, "Output",ExpressionUUID->"94bd4366-2483-4302-9579-021acd7817dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249027, 5661, 241, 5, 28, "Input",ExpressionUUID->"1afbc497-861c-4990-88a2-6c8f5c3fc349"],
Cell[249271, 5668, 100306, 1671, 408, "Output",ExpressionUUID->"6d92821c-7d23-4246-8fd4-615b3defa763"]
}, Open  ]],
Cell[349592, 7342, 124, 0, 34, "Text",ExpressionUUID->"0e5ce316-ea46-4aa8-a635-a9e396c6c5e6"],
Cell[CellGroupData[{
Cell[349741, 7346, 311, 7, 28, "Input",ExpressionUUID->"e5af808f-7d3f-4a56-a57c-675e875056b0"],
Cell[350055, 7355, 55558, 940, 408, "Output",ExpressionUUID->"6fa4dd03-bf06-4408-9390-38c996400e5b"]
}, Open  ]],
Cell[405628, 8298, 123, 0, 34, "Text",ExpressionUUID->"7fcaa290-98c1-4c38-906b-a7e74dcefc5b"],
Cell[CellGroupData[{
Cell[405776, 8302, 316, 9, 28, "Input",ExpressionUUID->"aa983cdb-c3ef-45bc-a930-2da3561ec018"],
Cell[406095, 8313, 540, 13, 32, "Output",ExpressionUUID->"b91c678f-bd8d-47ea-9eae-4e096ff1b6f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406672, 8331, 249, 5, 28, "Input",ExpressionUUID->"643cefb3-fa3a-4176-8714-8428add6253a"],
Cell[406924, 8338, 96669, 1617, 408, "Output",ExpressionUUID->"21053b22-6add-4f3a-a62e-071fe8f18582"]
}, Open  ]],
Cell[503608, 9958, 185, 5, 34, "Text",ExpressionUUID->"3fce4af2-d374-4f27-81da-43d41f4ad5fd"],
Cell[503796, 9965, 949, 22, 144, "Text",ExpressionUUID->"bbd25819-6d38-42ac-9419-c0692ac9c14a"]
}, Open  ]]
}, Open  ]]
}
]
*)

