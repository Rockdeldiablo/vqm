(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    532385,      10447]
NotebookOptionsPosition[    505184,       9999]
NotebookOutlinePosition[    506001,      10025]
CellTagsIndexPosition[    505910,      10020]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$Version", ",", 
   RowBox[{"Date", "[", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.3918507375625*^9, 3.39185074071875*^9}},
 CellLabel->
  "In[546]:=",ExpressionUUID->"0d7e1d1a-a8d1-4c50-b39c-436a0ba7c00f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"11.3.0 for Linux x86 (64-bit) (January 23, 2018)\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
    "2018", ",", "5", ",", "5", ",", "14", ",", "35", ",", 
     "28.229552`8.203278967517054"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[546]=",ExpressionUUID->"b3027253-115a-4d44-80a7-226bf8c5b764"]
}, Open  ]],

Cell["\<\
RM: todo (?) :Lighting is different to 5.2 (completely different ...) .
     I added Glow as an option.\
\>", "Program",
 CellChangeTimes->{{3.391850760140625*^9, 
  3.3918508313125*^9}},ExpressionUUID->"4be8870a-a3bd-4214-b15b-6d11f6d61210"],

Cell[CellGroupData[{

Cell["The package Spinors.m", "Title",ExpressionUUID->"0a0c03bd-2c71-4ee1-9394-751627ff19f2"],

Cell["\<\
Bernd Thaller
Institute of Mathematics
University of Graz
Austria
2006-08-08\
\>", "Subsubtitle",ExpressionUUID->"7634f8b2-07ec-4d1a-a225-3a91e82be12b"],

Cell[CellGroupData[{

Cell["Abstract", "Subsection",ExpressionUUID->"b5447cef-737a-4732-b30e-0cef49736323"],

Cell[TextData[{
 "The package VQM`Spinors defines basic operations in the two-dimensional \
complex Hilbert space of a qubit. It defines the Pauli matrices and provides \
tools to visualize pure and mixed states of a qubit. This package is part of \
the VQM packages which can be obtained here:  ",
 ButtonBox["http://www.uni-graz.at/imawww/vqm/software.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.uni-graz.at/imawww/vqm/software.html"], None}],
 " (free download). The VQM packages are part of the Visual Quantum Mechanics \
project, see ",
 ButtonBox["http://www.uni-graz.at/imawww/vqm/",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.uni-graz.at/imawww/vqm/"], None}],
 ". In particular, these packages are distributed with the book ",
 StyleBox["Advanced Visual Quantum Mechanics",
  FontSlant->"Italic"],
 ", Springer-Verlag New York, 2004."
}], "Text",ExpressionUUID->"52a0d80e-3420-41cd-9ac4-235276f12f93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load package", "Section",ExpressionUUID->"bb5f607e-811c-4cd3-b99c-a7c083894bfc"],

Cell["Needs[\"VQM`\"];", "Input",
 CellChangeTimes->{{3.3917813578541613`*^9, 3.3917813671141*^9}, {
   3.392472651138022*^9, 3.392472656068408*^9}, 3.3938509107756233`*^9, {
   3.393851005263566*^9, 3.393851006148788*^9}, 3.393854570679183*^9},
 CellLabel->
  "In[547]:=",ExpressionUUID->"e6041aa1-7e88-4597-b55c-1969c0cdf946"],

Cell["", "Input",
 CellChangeTimes->{{3.3917813578541613`*^9, 3.3917813671141*^9}, {
   3.392472651138022*^9, 3.392472656068408*^9}, 3.3938509107756233`*^9, 
   3.393851003787365*^9},
 CellLabel->
  "In[548]:=",ExpressionUUID->"df2e9b1b-40f7-4601-85f8-913a54be41b0"],

Cell[TextData[{
 "This also loads the package \"",
 StyleBox["VQM`VisualizeVector", "InlineInput"],
 "\"."
}], "Text",
 CellChangeTimes->{
  3.39178137583251*^9},ExpressionUUID->"7a480ff4-c96f-42d0-bf76-5d8fefe7ed09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bases", "Section",ExpressionUUID->"50e88c4d-e232-419e-b26c-3358ec50a762"],

Cell[TextData[{
 "A spinor is a complex two-dimensional vector {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "1"], ",", 
   SubscriptBox["c", "2"]}]],ExpressionUUID->
  "3efb008c-9a8a-4e10-ab43-178d38745f63"],
 "}, ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "i"], "\[Epsilon]", " "}]],ExpressionUUID->
  "a3322499-798e-4578-ad0a-b128e6d5a3c9"],
 "\[DoubleStruckCapitalC],",
 " that is, an element of the linear space ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", "2"], TraditionalForm]],
  ExpressionUUID->"0ff5d801-a6dc-4fe7-8833-88c2fcf4865e"],
 ". The spinors are usually defined with respect to a reference basis in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", "2"], TraditionalForm]],
  ExpressionUUID->"5a7bcbac-8299-419e-bd41-68df18158b56"],
 ". The package defines the canonical standard basis"
}], "Text",ExpressionUUID->"913c2be6-219a-41da-af0c-beab2e10ed0c"],

Cell[CellGroupData[{

Cell["$QSpinBasis", "Input",
 CellLabel->
  "In[549]:=",ExpressionUUID->"da7706ec-6643-4bcd-ac4e-9c1b800719bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[549]=",ExpressionUUID->"c1eaebad-d5ab-4b53-990e-21b5d64d7e8d"]
}, Open  ]],

Cell[TextData[{
 "The basis spinors are interpreted as \"spin-up\" and \"spin-down\" with \
respect to the z-axis of a Cartesian basis in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"761af871-3564-4ab2-bc50-bccfd4effd7d"],
 "."
}], "Text",ExpressionUUID->"376bc828-166e-475b-aad9-a4ab16f507ab"],

Cell[TextData[{
 "Other standard bases provided by the package are ",
 StyleBox["QxBasis", "InlineInput"],
 ", ",
 StyleBox["QyBasis", "InlineInput"],
 ", and ",
 StyleBox["QzBasis", "InlineInput"],
 " (",
 StyleBox["QzBasis", "InlineInput"],
 " is equal to ",
 StyleBox["$QSpinBasis", "InlineInput"],
 "). For example, ",
 StyleBox["QxBasis", "InlineInput"],
 " consists of up and down spinors with respect to the x-axis:"
}], "Text",ExpressionUUID->"5cc3e2af-cc94-4584-9f30-4b822b7737a4"],

Cell[CellGroupData[{

Cell["QxBasis", "Input",
 CellLabel->
  "In[550]:=",ExpressionUUID->"3e77ec9f-e02b-4c5c-bd5e-8e68ed16ca85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[550]=",ExpressionUUID->"722fe5ea-8f71-44d6-bf60-c1c39c9ec81f"]
}, Open  ]],

Cell[TextData[{
 "Note that the symbols defined by the VQM packages all start with the letter \
Q in order to prevent conflicts with existing symbols defined in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " or in other third-party packages."
}], "Text",ExpressionUUID->"608ae862-7587-4e2f-b40d-a11cce90fac3"],

Cell[TextData[{
 "The package also defines ",
 StyleBox["QSpinBasis", "InlineInput"],
 " as a default basis for some basis-dependent commands. It is initially \
equal to ",
 StyleBox["$QSpinBasis", "InlineInput"],
 ", but can be changed with the command ",
 StyleBox["QSetSpinBasis[{", "InlineInput"],
 "basespinor1",
 StyleBox[",", "InlineInput"],
 "basespinor2",
 StyleBox["}]", "InlineInput"],
 ". This influences how the components of spinors are calculated."
}], "Text",ExpressionUUID->"dc17c9a7-0c8f-47bf-b07a-99f7e8f29f62"],

Cell[CellGroupData[{

Cell["\<\
QSetSpinBasis[QxBasis];
QSpinBasis\
\>", "Input",
 CellLabel->
  "In[551]:=",ExpressionUUID->"8a00ad3f-c3e7-4d2e-b095-49ac19045bfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[552]=",ExpressionUUID->"3143f9fc-f37e-4372-b371-e8716eb84e11"]
}, Open  ]],

Cell[TextData[{
 "An example of an operation that depends on the chosen basis is the \
calculation of the components of a spinor with respect to that basis. This is \
done with the command ",
 StyleBox["QSpinorToComponents", "InlineInput"],
 ". The spinor psi is given with respect to the reference basis ",
 StyleBox["$QSpinBasis", "InlineInput"],
 ". ",
 StyleBox["QSpinorToComponents[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " calculates the components of psi with respect to the basis ",
 StyleBox["QSpinBasis", "InlineInput"],
 ". This gives the components of the spinor {1,0} with respect to the \
previously set ",
 StyleBox["QSpinBasis", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"440c7b96-f668-4606-9b1d-f56c5bf1cf6b"],

Cell[CellGroupData[{

Cell["components = QSpinorToComponents[{1,0}]", "Input",
 CellLabel->
  "In[553]:=",ExpressionUUID->"dd101017-c663-4de7-8ec0-c9a8d5b17ef4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellLabel->
  "Out[553]=",ExpressionUUID->"15bda244-e95c-43c5-9a7e-0c1236e3489a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["components.QSpinBasis", "InlineInput"],
 " returns the original spinor. More generally, ",
 StyleBox["QComponentsToSpinor", "InlineInput"],
 " takes two complex coefficients and forms the corresponding linear \
combination of the basis vectors in ",
 StyleBox["QSpinBasis", "InlineInput"],
 ". The result is the spinor in the canonical standard basis."
}], "Text",ExpressionUUID->"fdfa3b74-0ea3-4aaf-85bd-c70b28d51271"],

Cell[CellGroupData[{

Cell["QComponentsToSpinor[components]", "Input",
 CellLabel->
  "In[554]:=",ExpressionUUID->"261b5ebc-801c-4791-b974-742d871f757f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellLabel->
  "Out[554]=",ExpressionUUID->"23f93d38-6b64-449a-8cf5-965a2975465e"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QProjectUp[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " projects a spinor psi into the direction of the first basis vector of ",
 StyleBox["QSpinBasis", "InlineInput"],
 ", "
}], "Text",ExpressionUUID->"9cc80d4c-5f68-4372-9250-4c9863721db4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QProjectUp", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[555]:=",ExpressionUUID->"30e709a0-5d6d-4b4a-9fd7-a65bd7d347b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellLabel->
  "Out[555]=",ExpressionUUID->"f53a4af1-c186-4aad-9167-cb282172a608"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QProjectDown[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " gives the part proportional to the second basis vector. The sum of the two \
projections is the identity, that is,"
}], "Text",ExpressionUUID->"584749ff-1ddb-49bb-bc1b-11993eb60b70"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "I"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QProjectUp", "[", "sp", "]"}], "+", 
   RowBox[{"QProjectDown", "[", "sp", "]"}]}], " ", "\[Equal]", " ", 
  "sp"}]}], "Input",
 CellLabel->
  "In[556]:=",ExpressionUUID->"16c057e7-aa6a-43bd-a1fd-eaa78a713b50"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[557]=",ExpressionUUID->"f8b0176b-f9ea-4452-88b9-cafe8129f884"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QProbabilityUp[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " gives the probability that the spinor has spin-up with respect to the ",
 StyleBox["QSpinBasis", "InlineInput"],
 ", ",
 StyleBox["QProbabilityDown[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " gives the probability for spin down."
}], "Text",ExpressionUUID->"12e8f613-e334-48f6-84ef-50196b6e3479"],

Cell["\<\
A natural method for the visualization of a spinor is to represent its \
components with respect to a basis by a bar diagram. The height of the bars \
gives the absolute value, and the color gives the phase of the component.\
\>", "Text",ExpressionUUID->"ae608c06-31ab-476c-bf30-34bec13b87ae"],

Cell[CellGroupData[{

Cell["QSpinorBarDiagram[{1,0}]", "Input",
 CellLabel->
  "In[558]:=",ExpressionUUID->"18be9348-4611-4aee-8d46-043a4fa4580f"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0], 
    RectangleBox[{0.05, 0}, 
     NCache[{0.95, 2^Rational[-1, 2]}, {0.95, 0.7071067811865475}]]}, 
   {Hue[
     NCache[
      Rational[1, 2], 0.5]], 
    RectangleBox[{1.05, 0}, 
     NCache[{1.95, 2^Rational[-1, 2]}, {1.95, 0.7071067811865475}]]}},
  Epilog->{
    GrayLevel[0], 
    LineBox[{{0, 0}, {2, 0}}], 
    LineBox[{{0, 1}, {2, 1}}]},
  Frame->True,
  FrameTicks->{{{0.5, 
      FormBox["\"\\!\\(c\\_1\\)\"", TraditionalForm]}, {1.5, 
      FormBox["\"\\!\\(c\\_2\\)\"", TraditionalForm]}}, Automatic, None, 
    Automatic},
  PlotRange->{{-0.1, 2.1}, {-0.1, 1.1}}]], "Output",
 CellLabel->
  "Out[558]=",ExpressionUUID->"03b70d1e-b617-44de-9555-c1eb5dd8864c"]
}, Open  ]],

Cell[TextData[{
 "Note that the image above shows the components {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "1"], ",", 
   SubscriptBox["c", "2"]}]],ExpressionUUID->
  "d586e139-33fb-48a2-9003-6b14436cc301"],
 "} of the spinor with respect to the chosen ",
 StyleBox["QSpinBasis", "InlineInput"],
 " (= ",
 StyleBox["QxBasis", "InlineInput"],
 "). Let us restore the default setting. The following image then gives the \
components of the same spinor with respect to the canonical standard basis ",
 StyleBox["$QSpinBasis = QzBasis", "InlineInput"],
 "."
}], "Text",ExpressionUUID->"527a5b88-0e59-40da-8a49-57ed3995764f"],

Cell[CellGroupData[{

Cell["\<\
QSetSpinBasis[$QSpinBasis];
QSpinorBarDiagram[{1,0}]\
\>", "Input",
 CellLabel->
  "In[559]:=",ExpressionUUID->"11c35d57-cb27-4ae3-b815-c31809142711"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0], RectangleBox[{0.05, 0}, {0.95, 1}]}, 
   {Hue[0], RectangleBox[{1.05, 0}, {1.95, 0}]}},
  Epilog->{
    GrayLevel[0], 
    LineBox[{{0, 0}, {2, 0}}], 
    LineBox[{{0, 1}, {2, 1}}]},
  Frame->True,
  FrameTicks->{{{0.5, 
      FormBox["\"\\!\\(c\\_1\\)\"", TraditionalForm]}, {1.5, 
      FormBox["\"\\!\\(c\\_2\\)\"", TraditionalForm]}}, Automatic, None, 
    Automatic},
  PlotRange->{{-0.1, 2.1}, {-0.1, 1.1}}]], "Output",
 CellLabel->
  "Out[560]=",ExpressionUUID->"b3f6d691-9eba-4cf0-8397-51cd65b90aba"]
}, Open  ]],

Cell[TextData[{
 "All the commands above accept the option ",
 StyleBox["QUseBasis", "InlineInput"],
 ". You can use this option when you want use a particular basis just for one \
command. The following command gives the spin-up part with respect to the ",
 StyleBox["QyBasis", "InlineInput"],
 " of the spinor {1,-1}."
}], "Text",ExpressionUUID->"52a603e7-1785-469c-a903-37d925ec5b94"],

Cell[CellGroupData[{

Cell["QProjectUp[{1,-1},QUseBasis->QyBasis]", "Input",
 CellLabel->
  "In[561]:=",ExpressionUUID->"6759cda5-d0b7-4dcb-bbd9-3ecbe6d9d6b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["\[ImaginaryI]", "2"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], "+", 
    FractionBox["\[ImaginaryI]", "2"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[561]=",ExpressionUUID->"ea677b83-c0da-4cee-9763-682c9a246b72"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QSpinorToComponents[{1,-1}, QUseBasis->QxBasis]", "Input",
 CellLabel->
  "In[562]:=",ExpressionUUID->"10953743-19af-4fb8-b4ca-4ac80b122ef6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[562]=",ExpressionUUID->"679660aa-bb30-4448-982e-b45ced7404a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QSpinorBarDiagram[{1,-1}, QUseBasis->QyBasis]", "Input",
 CellLabel->
  "In[563]:=",ExpressionUUID->"aa6d4d3b-a22f-49d0-867d-59a827fc1035"],

Cell[BoxData[
 GraphicsBox[{
   {Hue[
     NCache[
      Rational[1, 8], 0.125]], RectangleBox[{0.05, 0}, {0.95, 1}]}, 
   {Hue[
     NCache[
      Rational[3, 8], 0.375]], RectangleBox[{1.05, 0}, {1.95, 1}]}},
  Epilog->{
    GrayLevel[0], 
    LineBox[{{0, 0}, {2, 0}}], 
    LineBox[{{0, 1}, {2, 1}}]},
  Frame->True,
  FrameTicks->{{{0.5, 
      FormBox["\"\\!\\(c\\_1\\)\"", TraditionalForm]}, {1.5, 
      FormBox["\"\\!\\(c\\_2\\)\"", TraditionalForm]}}, Automatic, None, 
    Automatic},
  PlotRange->{{-0.1, 2.1}, {-0.1, 1.1}}]], "Output",
 CellLabel->
  "Out[563]=",ExpressionUUID->"c4f30056-d87c-47c8-a5ca-c6c49770fb3c"]
}, Open  ]],

Cell["You can compute the norm of a spinor with", "Text",ExpressionUUID->"80e07804-9801-4582-8b41-7cb5a5c71f0a"],

Cell[CellGroupData[{

Cell["Norm[{2,-I}]", "Input",
 CellLabel->
  "In[564]:=",ExpressionUUID->"753d670d-0193-4081-ae97-43806f6c32eb"],

Cell[BoxData[
 SqrtBox["5"]], "Output",
 CellLabel->
  "Out[564]=",ExpressionUUID->"4458c99f-7e4c-472e-b6ba-ecd790836331"]
}, Open  ]],

Cell[TextData[{
 "and ",
 StyleBox["QNormalize", "InlineInput"],
 " returns a spinor with norm 1"
}], "Text",ExpressionUUID->"7fbee2ce-bdae-4a22-88af-3fb85474fbae"],

Cell[CellGroupData[{

Cell["QNormalize[{2,-I}]", "Input",
 CellLabel->
  "In[565]:=",ExpressionUUID->"734507fb-a90a-4a0c-9aca-ec79ae3507c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["5"]], ",", 
   RowBox[{"-", 
    FractionBox["\[ImaginaryI]", 
     SqrtBox["5"]]}]}], "}"}]], "Output",
 CellLabel->
  "Out[565]=",ExpressionUUID->"d47e6f38-172f-4ee8-bb80-5ab67f806b8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Norm[%]", "Input",
 CellLabel->
  "In[566]:=",ExpressionUUID->"fe46c062-4548-48c5-aacd-12a98207cc2d"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[566]=",ExpressionUUID->"7e1b05f3-b1b7-4ffa-b49f-4fa9af9f0307"]
}, Open  ]],

Cell[TextData[{
 " The function ",
 StyleBox["QNormalize", "InlineInput"],
 " can also be used to normalize arbitrary vectors"
}], "Text",ExpressionUUID->"bd9afc9b-4d4c-4062-b9be-2eb63e5d928c"],

Cell[CellGroupData[{

Cell["QNormalize[{1,2,3}]", "Input",
 CellLabel->
  "In[567]:=",ExpressionUUID->"70e5d564-3fbd-4815-9961-5f16c9aaaf97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["14"]], ",", 
   SqrtBox[
    FractionBox["2", "7"]], ",", 
   FractionBox["3", 
    SqrtBox["14"]]}], "}"}]], "Output",
 CellLabel->
  "Out[567]=",ExpressionUUID->"ec1cfd7b-7de8-40b8-81e3-5257f1d9ce14"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some matrices", "Section",ExpressionUUID->"38709526-1acf-4d1a-8f9f-1874ba3b74ab"],

Cell[TextData[{
 "The package \"",
 StyleBox["VQM`Spinors", "InlineInput"],
 "\" also defines the some important operators. First of all, we have the \
Pauli spin matrices ",
 StyleBox["QPauliSigma1", "InlineInput"],
 ", ",
 StyleBox["QPauliSigma2", "InlineInput"],
 ", and ",
 StyleBox["QPauliSigma3", "InlineInput"],
 ". Moreover, ",
 StyleBox["QPauliSigmaV", "InlineInput"],
 " is a vector with the three Pauli matrices as components"
}], "Text",ExpressionUUID->"edc63e7b-af01-40d9-8bb2-4d566ae58fcc"],

Cell[CellGroupData[{

Cell["QPauliSigma2//MatrixForm", "Input",
 CellLabel->
  "In[568]:=",ExpressionUUID->"23eec854-a328-46f9-bc6c-83584e94377b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[568]//MatrixForm=",ExpressionUUID->"0b32ec8a-1743-4e26-961c-\
00abcb4052dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QPauliSigmaV", "Input",
 CellLabel->
  "In[569]:=",ExpressionUUID->"7541402f-655b-4644-9498-3ef95c0bfebc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[569]=",ExpressionUUID->"9ba6d647-4af6-41bb-aa2f-4502f7e8ed8c"]
}, Open  ]],

Cell[TextData[{
 "The two-by-two identity matrix is ",
 StyleBox["QIdentity2", "InlineInput"],
 ". The Pauli sigma matrices are the quantum-mechanical observables for the \
spin measured with respect to the x-, y-, and z-axis of the reference \
coordinate system in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"538eca69-2405-4f89-8708-d3bb27d78ecb"],
 ". The spin-observable with respect to an arbitrary axis (represented by a \
vector ",
 StyleBox["kv", "InlineInput"],
 ") is ",
 StyleBox["QSpinHamiltonian[kv]", "InlineInput"],
 ". This matrix is obtained as\n ",
 StyleBox["QPauliSigma1.kv[[1]]+QPauliSigma2.kv[[2]]+QPauliSigma3.kv[[3]]", 
  "InlineInput"]
}], "Text",ExpressionUUID->"7dc99561-3ff3-41e0-ab46-255112c14422"],

Cell["This is a three-dimensional vector with symbolic components", "Text",ExpressionUUID->"3fd1f7f0-393f-483e-8713-af9d02632815"],

Cell["\<\
Clear[k0, k1, k2, k3, kv];
kv = {k1,k2,k3};\
\>", "Input",
 CellLabel->
  "In[570]:=",ExpressionUUID->"c25e2d4a-5fae-4e62-9432-356c51bdd27a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hs", "=", 
  StyleBox[
   RowBox[{"QSpinHamiltonian", "[", "kv", "]"}], "InlineInput"]}]], "Input",
 CellLabel->
  "In[572]:=",ExpressionUUID->"a636d616-39a7-47f9-b39e-38e588f258d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k3", ",", 
     RowBox[{"k1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
     RowBox[{"-", "k3"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[572]=",ExpressionUUID->"6afff37b-dd1e-479b-8d54-1da3107da785"]
}, Open  ]],

Cell[TextData[{
 "A density matrix is a hermitian matrix with trace 1. It is also determined \
by a vector in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"509659bb-4593-4e00-ba41-0305966396e7"],
 ":"
}], "Text",ExpressionUUID->"d53af9d1-7c3a-43bb-9375-9618b8086423"],

Cell[TextData[{
 "This is the density matrix describing spin in the direction of ",
 StyleBox["kv", "InlineInput"]
}], "Text",ExpressionUUID->"76cb17ab-a6e8-47d2-ac38-11f098a98e5c"],

Cell[CellGroupData[{

Cell["ma = QVectorToDensityMatrix[kv]", "Input",
 CellLabel->
  "In[573]:=",ExpressionUUID->"cb4fe5ad-bd7a-4d5f-8b8b-efea8de054a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"1", "+", "k3"}], "2"], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"k1", "-", 
        RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"k1", "+", 
        RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"1", "-", "k3"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[573]=",ExpressionUUID->"17511b41-a9a6-4e92-bc45-45c8b6c3779b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ma", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[574]:=",ExpressionUUID->"01d1bf75-f022-4de9-a9d5-c7d8db6d4b45"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "+", "k3"}], "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"k1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}], 
      FractionBox[
       RowBox[{"1", "-", "k3"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[574]//MatrixForm=",ExpressionUUID->"70db0540-35ce-491f-9cea-\
d39b0a5aecad"]
}, Open  ]],

Cell["\<\
A four-vector {k0,k1,k2,k3} can be converted into a Hermitian matrix by:\
\>", "Text",ExpressionUUID->"15528963-9b78-4902-9ae4-a8efb3d23316"],

Cell[CellGroupData[{

Cell["QVectorToHermitianMatrix[{k0,k1,k2,k3}]", "Input",
 CellLabel->
  "In[575]:=",ExpressionUUID->"ef5bdb92-1a88-49ba-bbc2-d2082dc58a29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k0", "+", "k3"}], ",", 
     RowBox[{"k1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
     RowBox[{"k0", "-", "k3"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[575]=",ExpressionUUID->"dd8dbf77-0b3f-4cdd-bcf2-60b99cf9709d"]
}, Open  ]],

Cell["and a three-vector {k1,k2,k3} by", "Text",ExpressionUUID->"1e939c33-10eb-41fb-bf17-ddcc2539c013"],

Cell[CellGroupData[{

Cell["QVectorToHermitianMatrix[{k1,k2,k3}]", "Input",
 CellLabel->
  "In[576]:=",ExpressionUUID->"75709916-0021-48af-ace5-047d9596c632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k3", ",", 
     RowBox[{"k1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
     RowBox[{"-", "k3"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[576]=",ExpressionUUID->"669b92cc-6508-488a-a884-83e190f33194"]
}, Open  ]],

Cell["which is the same as QSpinHamiltonian[{k1,k2,k3}]", "Text",ExpressionUUID->"65dfcefc-f6e8-4d2b-8929-dc8c9541b2c6"],

Cell["\<\
There is also an inverse operation which determines the vector from a \
Hermitian matrix:\
\>", "Text",ExpressionUUID->"233e9664-50d6-43cc-9372-fe30f465ff69"],

Cell[TextData[{
 StyleBox["QHermitianMatrixToVector", "InlineInput"],
 " is inverse to ",
 StyleBox["QVectorToHermitianMatrix", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"e3fe1228-7ec5-465b-8562-1967363810bf"],

Cell[TextData[{
 StyleBox["QDensityMatrixToVector", "InlineInput"],
 " is inverse to ",
 StyleBox["QVectorToDensityMatrix", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"fc24d4a3-a9f6-4e7f-b58d-5484655be719"],

Cell[CellGroupData[{

Cell["\<\
QHermitianMatrixToVector[QVectorToHermitianMatrix[{k0,k1,k2,k3}]] // Simplify\
\
\>", "Input",
 CellChangeTimes->{{3.390202079315736*^9, 3.3902021169598656`*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"012cdf7e-40ee-40f6-8b02-64627e59890f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k0", ",", "k1", ",", "k2", ",", "k3"}], "}"}]], "Output",
 CellLabel->
  "Out[577]=",ExpressionUUID->"46d9dbb3-d410-4561-8779-5b033c4ec0aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QDensityMatrixToVector[QVectorToDensityMatrix[{k1,k2,k3}]] // Simplify\
\>", "Input",
 CellLabel->
  "In[578]:=",ExpressionUUID->"beac97bd-afbc-4117-a0ae-2c228a146d53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}]], "Output",
 CellLabel->
  "Out[578]=",ExpressionUUID->"ecd3ee5b-eb8a-4286-a966-1ed0ce50ad9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ma == QVectorToDensityMatrix[QDensityMatrixToVector[ma]] //Simplify\
\>", "Input",
 CellLabel->
  "In[579]:=",ExpressionUUID->"210997a3-61e6-4816-871d-a02e9fa1cf61"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[579]=",ExpressionUUID->"cc9ed06e-6093-4b40-bd91-ca4d781e0116"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The spinors QSpinorUp and QSpinorDown", "Section",ExpressionUUID->"0beaaef5-7f64-4d84-9be5-bf24cd4122ad"],

Cell[TextData[{
 "The package defines two basis spinors for each direction in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  ExpressionUUID->"5fc87b01-669e-4b8e-a566-bea3137b9a64"],
 ". These spinors are ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " and ",
 StyleBox["QSpinorDown[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 ". Here 'vector ' defines the direction. These spinors are eigenvectors of \
the matrix ",
 StyleBox["QVectorToMatrix[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 "."
}], "Text",ExpressionUUID->"b5a9f735-0a90-4a6b-a686-c71d74b25538"],

Cell["Clear[k1, k2, k3, kv]; kv = {k1,k2,k3};", "Input",
 CellLabel->
  "In[580]:=",ExpressionUUID->"9f106155-776e-449a-a2d2-4eb165eef6a5"],

Cell[CellGroupData[{

Cell["\<\
QVectorToDensityMatrix[kv].QSpinorUp[kv] == Sqrt[kv.kv] \
QSpinorUp[kv]//Simplify\
\>", "Input",
 CellLabel->
  "In[581]:=",ExpressionUUID->"9dedaacd-e42e-4542-821f-4dacf5905ac1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["k1", "2"], "+", 
       SuperscriptBox["k2", "2"], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "k3"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"k3", "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["k1", "2"], "+", 
            SuperscriptBox["k2", "2"], "+", 
            SuperscriptBox["k3", "2"]}]]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k1", "2"], "+", 
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"k3", " ", 
          RowBox[{"(", 
           RowBox[{"k3", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k1", "2"], "+", 
              SuperscriptBox["k2", "2"], "+", 
              SuperscriptBox["k3", "2"]}]]}], ")"}]}]}]]}]]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["k1", "2"], "+", 
           SuperscriptBox["k2", "2"], "+", 
           SuperscriptBox["k3", "2"]}]]}], ")"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["k1", "2"], "+", 
         SuperscriptBox["k2", "2"], "+", 
         RowBox[{"k3", " ", 
          RowBox[{"(", 
           RowBox[{"k3", "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["k1", "2"], "+", 
              SuperscriptBox["k2", "2"], "+", 
              SuperscriptBox["k3", "2"]}]]}], ")"}]}]}]]}]]}]}], "}"}], 
  "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]}]], "Output",
 CellLabel->
  "Out[581]=",ExpressionUUID->"2e7c7e38-4539-4e97-9c41-92cacf78a934"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVectorToHermitianMatrix[kv].QSpinorDown[kv] == -Sqrt[kv.kv] \
QSpinorDown[kv]//Simplify\
\>", "Input",
 CellLabel->
  "In[582]:=",ExpressionUUID->"8a0e8a4e-a806-4410-a8e9-48dda8129208"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[582]=",ExpressionUUID->"d71471ab-8e9f-4918-9423-d2ec51fed3cc"]
}, Open  ]],

Cell[TextData[{
 "Hence, for example, ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " is the state with spin-up in the direction of 'vector'. The two spinors \
form an orthonormal basis in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalC]", "2"], TraditionalForm]],
  ExpressionUUID->"b3cc7043-eeb3-4033-a608-6e9c0d45e687"],
 ". For example,"
}], "Text",ExpressionUUID->"2995de42-8498-4750-b8f6-7f03bc15b773"],

Cell[CellGroupData[{

Cell["QConjSpinorUp[kv].QSpinorUp[kv]//Simplify", "Input",
 CellLabel->
  "In[583]:=",ExpressionUUID->"e4379f27-3bef-426b-95c2-185217d13e6d"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[583]=",ExpressionUUID->"a5bda28d-e70a-4dbc-8b03-0392c677f3d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QConjSpinorDown[kv].QSpinorUp[kv]//Simplify", "Input",
 CellLabel->
  "In[584]:=",ExpressionUUID->"8ebdfde9-1a87-401e-97bf-6480cc0210a7"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[584]=",ExpressionUUID->"7562ce30-b4fb-4367-8c4b-e1c9ea97c9ea"]
}, Open  ]],

Cell[TextData[{
 "The conjugate comples spinors ",
 StyleBox["QConjSpinorUp[kv]", "InlineInput"],
 " and ",
 StyleBox["QConjSpinorDown[kv]", "InlineInput"],
 " have been defined for convenience."
}], "Text",ExpressionUUID->"103ffec4-177f-4071-94a8-a4e42e3eaced"],

Cell[TextData[{
 "We also note that ",
 StyleBox["QSpinorUp[kv]", "InlineInput"],
 " has a phase discontinuity on the negative z-axis, and ",
 StyleBox["QSpinorDown", "InlineInput"],
 StyleBox["[kv]", "InlineInput"],
 " has a phase discontinuity on the positive z-axis."
}], "Text",ExpressionUUID->"1f8f639a-ffb2-412e-93c0-8afc44fcf068"],

Cell[CellGroupData[{

Cell["QSpinorUp[{0,0,-1}]", "Input",
 CellLabel->
  "In[585]:=",ExpressionUUID->"4ffa3585-5928-4486-920c-52401e089aa5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellLabel->
  "Out[585]=",ExpressionUUID->"c053de2a-cb08-4993-acac-06c37e55afbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limit[QSpinorUp[{eps,0,-1}],eps->0]", "Input",
 CellLabel->
  "In[586]:=",ExpressionUUID->"2afc50ab-e09b-4138-a08c-b7529ff9d129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "Indeterminate"}], "}"}]], "Output",
 CellLabel->
  "Out[586]=",ExpressionUUID->"e007558d-c84e-4cc8-9d7f-0c21495ddd36"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limit[QSpinorUp[{-eps,0,-1}],eps->0]", "Input",
 CellLabel->
  "In[587]:=",ExpressionUUID->"a045d813-be63-49fb-8aec-38889896fa5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "Indeterminate"}], "}"}]], "Output",
 CellLabel->
  "Out[587]=",ExpressionUUID->"16b83903-a874-4418-9d7a-77dbb38c83d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limit[QSpinorUp[{0,eps,-1}],eps->0]", "Input",
 CellLabel->
  "In[588]:=",ExpressionUUID->"05af6871-b5fd-44e9-94e4-f544ff3c62ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "Indeterminate"}], "}"}]], "Output",
 CellLabel->
  "Out[588]=",ExpressionUUID->"2aea734d-990c-4ed2-ab8c-eb9dbb48814c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spinors and Vectors", "Section",ExpressionUUID->"5c67dbe7-385e-4862-913e-2ff34491b5ef"],

Cell["Consider the unit vector in three-dimensional space", "Text",ExpressionUUID->"d7b68932-0fed-4c53-b61b-0edea1d83277"],

Cell[CellGroupData[{

Cell["vec = {-4/9,8/9,-1/9}", "Input",
 CellLabel->
  "In[589]:=",ExpressionUUID->"6c56fe90-0c0c-440f-9b1d-aa57f6c34a25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["8", "9"], ",", 
   RowBox[{"-", 
    FractionBox["1", "9"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[589]=",ExpressionUUID->"91719400-edcd-4aed-a8fb-a0261c9a2292"]
}, Open  ]],

Cell["\<\
It defines a direction in space. The state which is \"spin-up\" with respect \
to this direction is\
\>", "Text",ExpressionUUID->"9311b78a-62d4-4998-834c-21dc7f73bbdd"],

Cell[CellGroupData[{

Cell["sp = QSpinorUp[vec]", "Input",
 CellLabel->
  "In[590]:=",ExpressionUUID->"2edd5f5d-f885-4596-89b8-1b32cfda87d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[590]=",ExpressionUUID->"801d6035-a8ba-4a7a-95a4-7d808d995ab4"]
}, Open  ]],

Cell["We can convert this spinor back to the vector", "Text",ExpressionUUID->"74f1e7e6-fb14-4a3d-a135-c000cc653db3"],

Cell[CellGroupData[{

Cell["QSpinorToVector[sp]", "Input",
 CellLabel->
  "In[591]:=",ExpressionUUID->"f79fbe61-7605-48a2-9d01-e0982b55c525"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["8", "9"], ",", 
   RowBox[{"-", 
    FractionBox["1", "9"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[591]=",ExpressionUUID->"68662916-7c69-4380-b82e-36ea4e767533"]
}, Open  ]],

Cell[TextData[{
 "The norm (length) of the three-dimensional real vector ",
 StyleBox["QSpinorToVector[", "InlineInput"],
 "spinor",
 StyleBox["]", "InlineInput"],
 " is equal to  ",
 StyleBox["Norm[", "InlineInput"],
 "spinor",
 StyleBox["]^2", "InlineInput"],
 ", that is"
}], "Text",ExpressionUUID->"4055c9f0-6260-4bd5-afd6-79704e26cd03"],

Cell[CellGroupData[{

Cell["Norm[QSpinorToVector[{3,2}]] == Norm[{3,2}]^2", "Input",
 CellLabel->
  "In[592]:=",ExpressionUUID->"b8ffc471-d631-4570-966d-cf5d689b2556"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[592]=",ExpressionUUID->"075d9190-5e4a-432f-9f6e-a055cd722f0d"]
}, Open  ]],

Cell[TextData[{
 "The command ",
 StyleBox["QSpinorToVector", "InlineInput"],
 " accepts the option ",
 StyleBox["QVectorLength", "InlineInput"]
}], "Text",ExpressionUUID->"96124e82-ec76-403b-a984-969d3f0ca7f2"],

Cell[TextData[{
 StyleBox["QSpinorToVector[psi, QVectorLength->", "InlineInput"],
 "n",
 StyleBox["]", "InlineInput"],
 " with",
 StyleBox["\n", "Input"],
 "n=1\t\t\tgenerates a unit vector\nn=2\t\t\tgenerates a vector with norm \
Norm[psi]^2 (default)\nn=3\t\t\tgenerates a vector with norm Norm[psi]"
}], "Text",ExpressionUUID->"2b0bca09-3870-4224-9ab6-02948712852c"],

Cell["\<\
There is also an inverse command QVectorToSpinor that accepts the same option.\
\>", "Text",ExpressionUUID->"a6d821a8-97b8-418f-880c-4d08987049aa"],

Cell[TextData[{
 StyleBox["QVectorToSpinor[vec, QVectorLength->", "InlineInput"],
 "n",
 StyleBox["]", "InlineInput"],
 " with the option",
 StyleBox["\n", "Input"],
 "n=1\t\t\tgenerates a unit spinor\nn=2\t\t\tgenerates a vector with norm \
Norm[vec]^1/2 (default)\nn=3\t\t\tgenerates a vector with norm Norm[vec]"
}], "Text",ExpressionUUID->"367012a9-018a-4f83-b219-c97047f04e1f"],

Cell[TextData[{
 "We have ",
 StyleBox["QVectorToSpinor[", "InlineInput"],
 "vec",
 StyleBox[", QVectorLength->1] == QSpinorUp[", "InlineInput"],
 "vec",
 StyleBox["]", "InlineInput"],
 "."
}], "Text",ExpressionUUID->"7ee46b0b-9fd9-45d2-9d5f-aafff2f6d439"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QExtractPhase", "Section",ExpressionUUID->"571a1e98-ddab-4711-b60f-3f7492e60acf"],

Cell["\<\
Note that the relation between spinors and vectors is not one-to-one. Here is \
another normalized spinor that gives the same vector than the spinor sp above:\
\>", "Text",ExpressionUUID->"381e29d3-1309-4575-b30b-022d375008d8"],

Cell[CellGroupData[{

Cell["sp2 =  {2/3,2 I/3-1/3}", "Input",
 CellLabel->
  "In[593]:=",ExpressionUUID->"d7e45a57-b666-4977-9c4e-00067c3efbfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "+", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], "3"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[593]=",ExpressionUUID->"9a391390-e1cb-4b40-a949-f6fb9a40d88f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QSpinorToVector[sp2]", "Input",
 CellLabel->
  "In[594]:=",ExpressionUUID->"87451acd-a511-41a0-b61f-5e8a2ecaf868"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "9"]}], ",", 
   FractionBox["8", "9"], ",", 
   RowBox[{"-", 
    FractionBox["1", "9"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[594]=",ExpressionUUID->"9b71245a-ef50-484a-964c-7d029fe8fbc3"]
}, Open  ]],

Cell["\<\
Generally, two spinors differing by a phase, sp1=Exp[I phi] sp2, lead to the \
same vector. \
\>", "Text",ExpressionUUID->"24541710-78c2-4069-9b61-287e3476ba8d"],

Cell[TextData[{
 StyleBox["QExtractPhase[", "InlineInput"],
 "psi",
 StyleBox["]", "InlineInput"],
 " returns a real number for any nonzero psi={z1,z2}. This number is a phase \
determined from comparison with ",
 StyleBox["QSpinorUp", "InlineInput"],
 ", where ",
 StyleBox["QSpinorUp", "InlineInput"],
 " is taken with respect to the spin-up direction defined by psi. Let us \
illustrate this with an example:"
}], "Text",ExpressionUUID->"46ee60f2-8f7c-4f50-b2ee-4f60b46cfb59"],

Cell[CellGroupData[{

Cell["psi = QNormalize[{-2 I,1}]", "Input",
 CellLabel->
  "In[595]:=",ExpressionUUID->"07b4f893-dcfc-4870-a377-2c31d20dc9cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     SqrtBox["5"]]}], ",", 
   FractionBox["1", 
    SqrtBox["5"]]}], "}"}]], "Output",
 CellLabel->
  "Out[595]=",ExpressionUUID->"c8931101-a865-44c9-ad11-6674c1aca013"]
}, Open  ]],

Cell["This spinor has the spin-up direction (unit vector)", "Text",ExpressionUUID->"b0128b5c-246a-4824-adbb-ace16034ac30"],

Cell[CellGroupData[{

Cell["dir = QSpinorToVector[psi]", "Input",
 CellLabel->
  "In[596]:=",ExpressionUUID->"8e158ea3-2cf8-4d73-88f9-d83d3bd06eef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["4", "5"], ",", 
   FractionBox["3", "5"]}], "}"}]], "Output",
 CellLabel->
  "Out[596]=",ExpressionUUID->"31194658-4399-474d-b827-79635a7c0649"]
}, Open  ]],

Cell[TextData[{
 "Note, however, that ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "dir",
 StyleBox["]", "InlineInput"],
 " is different from ",
 StyleBox["psi", "InlineInput"]
}], "Text",ExpressionUUID->"bbd05c1a-bfff-4ac1-a602-4f7c96c277d2"],

Cell[CellGroupData[{

Cell["QSpinorUp[dir]", "Input",
 CellLabel->
  "In[597]:=",ExpressionUUID->"75d3de41-8e58-4b24-bf95-3514bed4c466"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", 
    SqrtBox["5"]], ",", 
   FractionBox["\[ImaginaryI]", 
    SqrtBox["5"]]}], "}"}]], "Output",
 CellLabel->
  "Out[597]=",ExpressionUUID->"2a35d8bb-c2fe-4de7-af35-5f901c385a38"]
}, Open  ]],

Cell[TextData[{
 "but the difference is only a phase factor. The phase can be obtained with \
",
 StyleBox["QExtractPhase", "InlineInput"],
 ":"
}], "Text",ExpressionUUID->"ceb19f78-7780-44c6-b24b-f41ca2c29250"],

Cell[CellGroupData[{

Cell["ph = QExtractPhase[psi]", "Input",
 CellLabel->
  "In[598]:=",ExpressionUUID->"02a9ea08-e04d-408c-8dd7-2c3e4ab452ed"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[Pi]", "2"]}]], "Output",
 CellLabel->
  "Out[598]=",ExpressionUUID->"c77e0255-874d-4944-b5e8-e37a1ee88a79"]
}, Open  ]],

Cell[TextData[{
 "psi can now be recovered by multiplying ",
 StyleBox["QSpinorUp[", "InlineInput"],
 "dir",
 StyleBox["]", "InlineInput"],
 " with the appropriate phase factor"
}], "Text",ExpressionUUID->"7ad1d988-109e-4a5c-b923-42213a14d8a9"],

Cell[CellGroupData[{

Cell["Exp[I ph] QSpinorUp[dir]", "Input",
 CellLabel->
  "In[599]:=",ExpressionUUID->"213de24c-4929-4b16-a088-d701394caf3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     SqrtBox["5"]]}], ",", 
   FractionBox["1", 
    SqrtBox["5"]]}], "}"}]], "Output",
 CellLabel->
  "Out[599]=",ExpressionUUID->"b13eb5a6-1003-42af-b6b4-d72fd2687aaf"]
}, Open  ]],

Cell["\<\
Any spinor psi is thus uniquely determined by a three-dimensional vector \
together with phase factor.\
\>", "Text",ExpressionUUID->"324aa201-3a11-4d36-b023-d9d9b0514f83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotations", "Section",ExpressionUUID->"f6ed9647-6a97-444a-bb95-48019501ead6"],

Cell[TextData[{
 StyleBox["QRotationSO3[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " and ",
 StyleBox["QRotationSU2[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " define rotations around the axis given by vector through an angle given by \
",
 StyleBox["Norm[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 ". The matrix ",
 StyleBox["QRotationSO3[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " is an orthogonal 3x3-matrix. ",
 StyleBox["QRotationSU2[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " is a unitary 2x2 matrix realizing the 'spinor representation' of the \
rotation group."
}], "Text",ExpressionUUID->"a8827867-0522-43d5-ba92-7b18d9ff870e"],

Cell["For example,", "Text",ExpressionUUID->"e230af2d-4a0c-456e-aaec-19b046621af3"],

Cell[CellGroupData[{

Cell["QRotationSU2[{2 Pi,0,0}]//MatrixForm", "Input",
 CellLabel->
  "In[600]:=",ExpressionUUID->"5e1357f3-71cd-44a3-8e6f-b6f85c67c580"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[600]//MatrixForm=",ExpressionUUID->"397155da-86c1-4268-a115-\
bb4b20d53525"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QRotationSU2[{1,1,1}]//MatrixForm", "Input",
 CellLabel->
  "In[601]:=",ExpressionUUID->"53d5c9e3-2467-4e0b-9657-a0b6727a1979"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         SqrtBox["3"], "2"], "]"}], "-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SqrtBox["3"], "2"], "]"}]}], 
        SqrtBox["3"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SqrtBox["3"], "2"], "]"}]}], 
        SqrtBox["3"]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          SqrtBox["3"], "2"], "]"}]}], 
       SqrtBox["3"]], 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         SqrtBox["3"], "2"], "]"}], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           SqrtBox["3"], "2"], "]"}]}], 
        SqrtBox["3"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[601]//MatrixForm=",ExpressionUUID->"f7b7f1f4-bebc-4f32-83a0-\
98808192ca56"]
}, Open  ]],

Cell["\<\
The textbook-form of the SU(2)-rotation matrix can be obtained as follows. \
Let us first define a unit vector with symbolic components.\
\>", "Text",ExpressionUUID->"983305e5-dd13-4b08-88af-92c3246dde66"],

Cell["\<\
Clear[nv,n1,n2,n3];
nv = {n1,n2,n3}; (* should be a unit vector *)\
\>", "Input",
 CellLabel->
  "In[602]:=",ExpressionUUID->"8eead72f-0506-4730-9d84-292c310f96fb"],

Cell[CellGroupData[{

Cell["QRotationSU2[phi nv] // Simplify[#,{phi>0,nv.nv==1}]&", "Input",
 CellLabel->
  "In[604]:=",ExpressionUUID->"d1b2dffc-fc4a-4a7d-bce6-7a1faa4baf65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      RowBox[{"(", 
       RowBox[{"n1", "-", 
        RowBox[{"\[ImaginaryI]", " ", "n2"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "n1"}], "+", "n2"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[604]=",ExpressionUUID->"5c430267-fd1f-4371-8b5a-d8b47af94415"]
}, Open  ]],

Cell["This matrix is the same as the following:", "Text",ExpressionUUID->"57482c70-22c8-4b4d-8cb5-ded6de39258b"],

Cell[CellGroupData[{

Cell["\<\
MatrixExp[-I phi/2 QVectorToHermitianMatrix[nv]] // ExpToTrig // \
Simplify[#,{phi>0,nv.nv==1}]&\
\>", "Input",
 CellLabel->
  "In[605]:=",ExpressionUUID->"316aba18-c74c-408a-a414-7265e6ac9954"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "n1"}], "-", "n2"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "n1"}], "+", "n2"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["phi", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["phi", "2"], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "n3", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["phi", "2"], "]"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[605]=",ExpressionUUID->"ba177a45-405f-46c7-805a-bd96f2a67f24"]
}, Open  ]],

Cell["\<\
Any unitary 2x2-matrix may be considered a SU(2) rotation. The following \
example shows the connection with a basis transformation\
\>", "Text",ExpressionUUID->"f887189f-27cc-460a-8ea5-35026e83b0db"],

Cell[CellGroupData[{

Cell["\<\
Clear[a,b];
T=QRotationSU2[{1,1,1}];
newBasis={T.QzBasis[[1]], T.QzBasis[[2]]};
QSpinorToComponents[{a,b},QUseBasis->newBasis] == Inverse[T].{a,b} // Simplify\
\>", "Input",
 CellLabel->
  "In[606]:=",ExpressionUUID->"7b732964-c3be-4704-ae33-aff1dc211803"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[609]=",ExpressionUUID->"bc024e1e-4038-4a41-af9c-b687c9f9cd5c"]
}, Open  ]],

Cell["\<\
The connection between rotations in SO(3) and rotations in SU(2) is the \
following:\
\>", "Text",ExpressionUUID->"bad6c460-d16b-4e4b-8e44-b34446ad03b0"],

Cell["\<\
rotV = {1, 0.5, -1};
R = QRotationSO3[rotV];
T = QRotationSU2[rotV];\
\>", "Input",
 CellLabel->
  "In[610]:=",ExpressionUUID->"e4d2b0e0-363c-4bf8-839c-1f584d3626e1"],

Cell[CellGroupData[{

Cell["\<\
QVectorToSpinor[ R . {1,0,0} ] == T . QVectorToSpinor[{1,0,0}]\
\>", "Input",
 CellLabel->
  "In[613]:=",ExpressionUUID->"891b40b9-547b-4788-a342-8a9dac41c11e"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[613]=",ExpressionUUID->"c788bc04-6bd5-4d20-bfdd-07eb3157b4c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVectorToHermitianMatrix[ R . {1,0,0} ] == Chop[T . \
QVectorToHermitianMatrix[{1,0,0}] . Inverse[T]]\
\>", "Input",
 CellLabel->
  "In[614]:=",ExpressionUUID->"b1000622-aeea-424f-b7d9-35d11ffb5630"],

Cell[BoxData["True"], "Output",
 CellLabel->
  "Out[614]=",ExpressionUUID->"4528f832-ccfe-4ed6-860c-dac7f209ab6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["QVectorToArrow"], "Input",
 CellLabel->
  "In[615]:=",ExpressionUUID->"f0982a92-9224-45ed-8184-1e01dc82d97f"],

Cell[BoxData["QVectorToArrow"], "Output",
 CellLabel->
  "Out[615]=",ExpressionUUID->"959e7eff-986a-47c7-8e17-76e52341292a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QVectorToArrow", "//", "Options"}]], "Input",
 CellChangeTimes->{{3.39385182443626*^9, 3.393851825589398*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"2f1f9658-4b37-44f3-9ed4-ea454b8034e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[616]=",ExpressionUUID->"97b52db2-4f4c-48e2-9208-327fda1146b0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",ExpressionUUID->"8a7e1a71-9a11-4739-8500-938267be4570"],

Cell[CellGroupData[{

Cell[BoxData["coloroptt"], "Input",
 CellChangeTimes->{3.393852019823992*^9},
 CellLabel->
  "In[617]:=",ExpressionUUID->"fe03c456-f264-48cd-88a5-b3d680b527ce"],

Cell[BoxData["coloroptt"], "Output",
 CellLabel->
  "Out[617]=",ExpressionUUID->"83aebfea-08c3-4653-8e5b-5f232be2af22"]
}, Open  ]],

Cell["\<\
Since spinors and Hermitian matrices can be converted into vectors, we can \
visualize them\
\>", "Text",ExpressionUUID->"b8ab646d-5967-40ef-a2ba-649928d754b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Glow"}]], "Input",
 CellChangeTimes->{{3.393853833264017*^9, 3.393853834626066*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"a50fc522-2a6b-4958-b463-9dac44e7caf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"Glow\\\", \\\"[\\\", StyleBox[\\\"col\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) is a graphics directive which specifies that \
surfaces of 3D graphics objects that follow are to be taken to glow with \
color \\!\\(\\*StyleBox[\\\"col\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Glow\\\", \\\"[\\\", \\\"]\\\"}]\\) specifies that \
there is no glow. \"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Glow"]}]], "Print", "PrintUsage",
 CellTags->
  "Info6183734519733-5841779",ExpressionUUID->"acfd1a4d-e831-439c-bcc6-\
953168467b7c"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Glow", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"Protected", ",", "ReadProtected"}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Glow],
  Editable->False]], "Print",
 CellTags->
  "Info6183734519733-5841779",ExpressionUUID->"aefb08e0-431f-4fe5-8130-\
8dee8e11021f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"QSpinorToArrow", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "I"}], ",", 
     RowBox[{"1", "+", "I"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.393853697256723*^9, 3.3938537409777193`*^9}, {
  3.3938538159442387`*^9, 3.393853824354298*^9}, {3.393853859166441*^9, 
  3.393853946218874*^9}, {3.393854115308565*^9, 3.393854127360586*^9}},
 CellLabel->
  "In[619]:=",ExpressionUUID->"1193572c-242e-4704-ad97-7d596b7d54b2"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {-2, 2, -1}}]}, 
   {Hue[0.75, 1., 1.], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.3361189908316922`, 
       1.6638810091683078`, -0.75}, {-1.3707511230366511`, 
       1.534632132204959, -0.9392334895167802}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.3707511230366511`, 
       1.534632132204959, -0.9392334895167802}, {-1.534632132204959, 
       1.3707511230366511`, -0.9392334895167802}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[-1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}}, {{-2, 2, -1}, {-1.534632132204959, 
       1.3707511230366511`, -0.9392334895167802}, {-1.6638810091683078`, 
       1.3361189908316922`, -0.75}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[-3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.6638810091683078`, 
       1.3361189908316922`, -0.75}, {-1.6292488769633489`, 
       1.465367867795041, -0.5607665104832198}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[-3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}}, {{-2, 
       2, -1}, {-1.6292488769633489`, 
       1.465367867795041, -0.5607665104832198}, {-1.465367867795041, 
       1.6292488769633489`, -0.5607665104832198}}]], 
    Polygon3DBox[
     NCache[{{-2, 2, -1}, {
       Rational[-3, 2] + 
        Rational[-1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[3, 2] + 
        Rational[1, 16] Rational[3, 2]^Rational[1, 2]/GoldenRatio + 
        Rational[3, 16] 2^Rational[-1, 2]/GoldenRatio, Rational[-3, 4] + 
        Rational[1, 4] Rational[3, 2]^Rational[1, 2]/GoldenRatio}, {
       Rational[-3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[3, 2] + Rational[3, 8] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-3, 4]}}, {{-2, 2, -1}, {-1.465367867795041, 
       1.6292488769633489`, -0.5607665104832198}, {-1.3361189908316922`, 
       1.6638810091683078`, -0.75}}]]}},
  ImageSize->{360., 309.5895424770095},
  ViewPoint->{-3.2371995282253057`, 0.4220051088299329, 0.8901971144523532},
  ViewVertical->{-0.3319673470642641, 0.4807301302023575, 
   1.6232020482968084`}]], "Output",
 CellLabel->
  "Out[619]=",ExpressionUUID->"f5cc922a-6f02-45c1-935a-6bae29c4a7d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"QSpinorToArrow", "[", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}], "]"}], "/.", 
    "\[InvisibleSpace]", 
    RowBox[{
     RowBox[{"Hue", "[", "a__", "]"}], "\[RuleDelayed]", 
     RowBox[{"Glow", "[", 
      RowBox[{"Hue", "[", "a", "]"}], "]"}]}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.393851684618824*^9, 3.39385169074304*^9}, {
   3.393851869765396*^9, 3.393851872207851*^9}, 3.393853479045322*^9, {
   3.393853560112652*^9, 3.393853561303982*^9}, {3.393853593638112*^9, 
   3.393853676858457*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"7c23333a-592d-48a7-afb7-ab3eca88a2aa"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {0, -2, 0}}]}, 
   {Glow[
     Hue[0.25, 1., 1.]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {Rational[-1, 4]/GoldenRatio, Rational[-3, 2], 0}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 
       0}, {-0.1545084971874737, -1.5, 
        0}, {-0.07725424859373685, -1.5, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 
       0}, {-0.07725424859373685, -1.5, -0.1338082836649087}, {
       0.07725424859373685, -1.5, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[1, 4]/GoldenRatio, Rational[-3, 2], 0}}, {{0, -2, 0}, {
       0.07725424859373685, -1.5, -0.1338082836649087}, {
       0.1545084971874737, -1.5, 0}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {Rational[1, 4]/GoldenRatio, Rational[-3, 2], 0}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 0}, {
       0.1545084971874737, -1.5, 0}, {0.07725424859373685, -1.5, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{0, -2, 0}, {
       0.07725424859373685, -1.5, 
       0.1338082836649087}, {-0.07725424859373685, -1.5, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{0, -2, 0}, {
       Rational[-1, 8]/GoldenRatio, Rational[-3, 2], Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[-1, 4]/GoldenRatio, Rational[-3, 2], 0}}, {{0, -2, 
       0}, {-0.07725424859373685, -1.5, 
       0.1338082836649087}, {-0.1545084971874737, -1.5, 0}}]]}},
  Lighting->Automatic]], "Output",
 CellLabel->
  "Out[620]=",ExpressionUUID->"6d1480f4-dbc0-420c-8067-2c6bddbc21fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", " ", "[", "Graphics3D", "]"}]], "Input",
 CellChangeTimes->{{3.39385357302444*^9, 3.393853578361883*^9}, {
  3.393853629938384*^9, 3.393853630392205*^9}},
 CellLabel->
  "In[621]:=",ExpressionUUID->"36539d0b-0661-4b60-883a-079752f6281b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AutomaticImageSize", "\[Rule]", "False"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AxesEdge", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BoxStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ClipPlanes", "\[Rule]", "None"}], ",", 
   RowBox[{"ClipPlanesStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerLinking", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerMethod", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ControllerPath", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FaceGrids", "\[Rule]", "None"}], ",", 
   RowBox[{"FaceGridsStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"RotationAction", "\[Rule]", "\<\"Fit\"\>"}], ",", 
   RowBox[{"SphericalRegion", "\[Rule]", "False"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"TouchscreenAutoZoom", "\[Rule]", "False"}], ",", 
   RowBox[{"ViewAngle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewCenter", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewMatrix", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1.3`", ",", 
      RowBox[{"-", "2.4`"}], ",", "2.`"}], "}"}]}], ",", 
   RowBox[{"ViewProjection", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ViewVector", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewVertical", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellLabel->
  "Out[621]=",ExpressionUUID->"d81772e4-ded3-4f2b-b8f4-47c58b56c554"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QSpinorToArrow", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], "]"}], "//", "Graphics3D"}]], "Input",
 CellChangeTimes->{{3.3902027403462515`*^9, 3.3902027456638975`*^9}, 
   3.390210249675383*^9, {3.390225998471664*^9, 3.390226005880858*^9}, {
   3.3902265452964354`*^9, 3.390226574105443*^9}, {3.390226807927422*^9, 
   3.390226809804764*^9}, {3.390227203837964*^9, 3.390227205203659*^9}, 
   3.39247263166999*^9, {3.392472670590097*^9, 3.3924726723890123`*^9}, {
   3.393850753177603*^9, 3.393850780710935*^9}, {3.393851049456848*^9, 
   3.3938510536328297`*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"0759c71e-61bf-429c-9ad5-e652de21ffac"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
   {Hue[0., 1., 1.], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.1545084971874737, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}, {1.5, 
       0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {1.5, 
       0.07725424859373685, -0.1338082836649087}, {
       1.5, 0.1545084971874737, 0}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, 0.1545084971874737, 0}, {1.5, 0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {1.5, 0.07725424859373685,
        0.1338082836649087}, {1.5, -0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, 0.1338082836649087}, {
       1.5, -0.1545084971874737, 0}}]]}}]], "Output",
 CellLabel->
  "Out[622]=",ExpressionUUID->"ec966539-98da-44ae-b422-63e796aa93a5"]
}, Open  ]],

Cell[TextData[{
 "The package ",
 StyleBox["VQM`VisualizeVector", "InlineInput"],
 " (which is loaded automatically by ",
 StyleBox["VQM`Spinors", "InlineInput"],
 ") provides all necessary commands for visualizing vectors. These commands \
are also used by ",
 StyleBox["VQM`Spinors", "InlineInput"],
 " for the visualization of spinors and Hermitian matrices.. "
}], "Text",ExpressionUUID->"cc5463da-2ef7-4ad1-9f46-5c2dd99d0932"],

Cell[TextData[{
 "The  commands ",
 StyleBox["QVectorToArrow", "InlineInput"],
 " and ",
 StyleBox["QSpinorToArrow", "InlineInput"],
 " return a 3D-graphics primitive describing an arrow whose properties are \
determined by the following options"
}], "Text",ExpressionUUID->"a4332a94-0860-495e-b81c-a65d65dc2878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVectorToArrow", "]"}]], "Input",
 CellLabel->
  "In[623]:=",ExpressionUUID->"a149c0c7-7e9c-4dc7-958e-db0b7c691596"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[623]=",ExpressionUUID->"03afc570-1e03-41f5-b011-173cb0c8c5d2"]
}, Open  ]],

Cell[TextData[{
 StyleBox["QArrowHead->True", "InlineInput"],
 " (default) causes the vector to be drawn with an arrow head.",
 StyleBox[" QArrowHead->Automatic", "InlineInput"],
 " draws the vector with a point of size ",
 StyleBox["2*QLinePointSize", "InlineInput"],
 " instead of the ",
 StyleBox["QArrowHead", "InlineInput"],
 ". Otherwise the vector is just represented by a line segment."
}], "Text",ExpressionUUID->"08a80458-bdff-4eef-acd5-efe961cc60fc"],

Cell[TextData[{
 StyleBox["QMinLength", "InlineInput"],
 StyleBox["->0.1", "InlineInput"],
 " (default) specifies that vectors of length less than 0.1 are to be drawn \
as points of size QLinePointSize."
}], "Text",ExpressionUUID->"afafcf86-5226-4b09-8864-80f0d5912e07"],

Cell[TextData[{
 StyleBox["QArrowShape->{", "InlineInput"],
 StyleBox["n",
  FontSlant->"Italic"],
 ",",
 StyleBox["k",
  FontSlant->"Italic"],
 StyleBox["}", "InlineInput"],
 ": The head of the arrow is a cone with half height ",
 StyleBox["h",
  FontSlant->"Italic"],
 " = ",
 StyleBox["k",
  FontSlant->"Italic"],
 " * ",
 StyleBox["Norm[", "InlineInput"],
 "vector",
 StyleBox["]", "InlineInput"],
 " and radius ",
 StyleBox["r ",
  FontSlant->"Italic"],
 "= ",
 StyleBox["h",
  FontSlant->"Italic"],
 StyleBox["/(2 GoldenRatio)", "InlineInput"],
 " drawn using ",
 StyleBox["n",
  FontSlant->"Italic"],
 " polygons. If ",
 StyleBox["k",
  FontSlant->"Italic"],
 " is negative, then ",
 StyleBox["h",
  FontSlant->"Italic"],
 " = -",
 StyleBox["k",
  FontSlant->"Italic"],
 ". Default is (1,1/6)"
}], "Text",ExpressionUUID->"7281e2b6-c30d-4ea7-8278-6f86df55b050"],

Cell[TextData[{
 StyleBox["QArrowScale", "InlineInput"],
 StyleBox["-> ", "InlineInput"],
 StyleBox["k",
  FontSlant->"Italic"],
 " scales the length of the arrow by the factor ",
 StyleBox["k",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"51a56148-fc43-4008-917c-4358f10d10a3"],

Cell[TextData[{
 StyleBox["QHeadColor", "InlineInput"],
 StyleBox["->", "InlineInput"],
 StyleBox["colordirective",
  FontSlant->"Italic"],
 ": The arrow appears in the color specified by colordirective. Turn Lighting \
off to see the effect."
}], "Text",ExpressionUUID->"1be72a74-3ae4-4bb6-a32e-15bbcb029eee"],

Cell[TextData[{
 StyleBox["QLinePointSize", "InlineInput"],
 StyleBox["->", "InlineInput"],
 StyleBox["pt",
  FontSlant->"Italic"],
 "  causes the shaft of the arrow to be drawn with relative pointsize ",
 StyleBox["pt",
  FontSlant->"Italic"],
 ". Default is  ",
 StyleBox["pt ",
  FontSlant->"Italic"],
 "= 0.001."
}], "Text",ExpressionUUID->"dab1984c-c8ea-417a-970c-5f63d05aec2b"],

Cell[TextData[{
 StyleBox["QSpinorToArrow", "InlineInput"],
 " draws the arrow head by default in a color determined by the complex phase \
of the spinor. The options ",
 StyleBox["QHeadColor->QExtractPhase", "InlineInput"],
 " is also accepted. The complex phase factor ",
 StyleBox["Exp[I ", "InlineInput"],
 "phase",
 StyleBox["] ", "InlineInput"],
 "is mapped to colors according to ",
 StyleBox["Hue[", "InlineInput"],
 "phase",
 StyleBox["/(2 Pi)]", "InlineInput"],
 " (this is the standard color map of complex numbers)."
}], "Text",ExpressionUUID->"39356d40-789b-42de-a855-ca464583343c"],

Cell["Here are some examples:", "Text",ExpressionUUID->"837e6dfb-e964-49fe-91ef-92e1687c2639"],

Cell[CellGroupData[{

Cell["\<\
Graphics3D[
\tQVectorToArrow[{1,1,-1},
\t\tQArrowShape->{12,1/3}, QLinePointSize->0.007]
]\
\>", "Input",
 CellChangeTimes->{{3.390222413776577*^9, 3.390222416879047*^9}, {
   3.390232270323421*^9, 3.390232286372056*^9}, 3.3902323268905163`*^9, {
   3.390294045113927*^9, 3.390294065147149*^9}, 3.390294211922637*^9},
 CellLabel->
  "In[624]:=",ExpressionUUID->"a739e3bd-79c5-4ef0-8443-409d5c7d32bd"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.007], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {GrayLevel[1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}}]], "Output",
 CellLabel->
  "Out[624]=",ExpressionUUID->"25d75f09-ef5f-4d45-ba44-a3a87ae61d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.393854211124669*^9, 3.393854213762082*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"042e786d-2f2e-47ee-900f-b05e94588e50"],

Cell["\<\
Graphics3D[{{Thickness[0.007], Line[{{0, 0, 0}, {1, 1, -1}}]}, 
  {GrayLevel[1], {Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3}, {2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(3*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, {2/3, 2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3, 2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 - 1/(3*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(3*Sqrt[2]*GoldenRatio)}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), \
2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 - 1/(3*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(3*Sqrt[2]*GoldenRatio), 2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 + 1/(2*Sqrt[6]*GoldenRatio), -2/3}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3, 2/3 + 1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), \
2/3, 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 + 1/(3*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(3*Sqrt[2]*GoldenRatio), 2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3}}]}}}]\
\>", "Output",
 CellLabel->
  "Out[625]//InputForm=",ExpressionUUID->"dc80b43c-49d6-457d-834a-\
18c9bc22ecc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Graphics3D[{{Thickness[0.007], Line[{{0, 0, 0}, {1, 1, -1}}]}, 
  {White, {Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 - 1/(3*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, 
      {2/3, 2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3 - \
1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3, 2/3 - 1/(2*Sqrt[6]*GoldenRatio), -2/3 - \
1/(2*Sqrt[6]*GoldenRatio)}, 
      {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 \
- 1/(3*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(3*Sqrt[2]*GoldenRatio)}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), \
2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(2*Sqrt[6]*GoldenRatio), 2/3, 
       -2/3 - 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 - 1/(3*Sqrt[2]*GoldenRatio), \
2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 - \
1/(3*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 - 1/(6*Sqrt[2]*GoldenRatio)}, \
{2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       2/3 + 1/(2*Sqrt[6]*GoldenRatio), -2/3}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(2*Sqrt[6]*GoldenRatio), 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), -2/3}, 
      {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + 1/(3*Sqrt[2]*GoldenRatio), -2/3 \
+ 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 - 1/(6*Sqrt[2]*GoldenRatio), 2/3 + \
1/(3*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3, 2/3 + \
1/(2*Sqrt[6]*GoldenRatio), 
       -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}, {2/3 + 1/(6*Sqrt[2]*GoldenRatio), \
2/3 + 1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}}], Polygon[{{1, 1, -1}, {2/3 + \
1/(6*Sqrt[2]*GoldenRatio), 
       2/3 + 1/(6*Sqrt[2]*GoldenRatio), -2/3 + 1/(3*Sqrt[2]*GoldenRatio)}, \
{2/3 + 1/(2*Sqrt[6]*GoldenRatio), 
       2/3, -2/3 + 1/(2*Sqrt[6]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), 2/3, -2/3 + \
1/(2*Sqrt[6]*GoldenRatio)}, 
      {2/3 + 1/(3*Sqrt[2]*GoldenRatio), 2/3 - 1/(6*Sqrt[2]*GoldenRatio), -2/3 \
+ 1/(6*Sqrt[2]*GoldenRatio)}}], 
    Polygon[{{1, 1, -1}, {2/3 + 1/(3*Sqrt[2]*GoldenRatio), 2/3 - \
1/(6*Sqrt[2]*GoldenRatio), 
       -2/3 + 1/(6*Sqrt[2]*GoldenRatio)}, {2/3 + 1/(2*Sqrt[6]*GoldenRatio), \
2/3 - 1/(2*Sqrt[6]*GoldenRatio), 
       -2/3}}]}}},Lighting->Automatic]\
\>", "Input",
 CellChangeTimes->{{3.3938542142488337`*^9, 3.3938542274173117`*^9}, {
  3.393854286014658*^9, 3.393854312025385*^9}},
 CellLabel->
  "In[626]:=",ExpressionUUID->"e5013eb2-4f95-4fa0-92c8-a3e45a5b9baa"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.007], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {GrayLevel[1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}},
  Lighting->Automatic]], "Output",
 CellLabel->
  "Out[626]=",ExpressionUUID->"2ba2c05c-a8e2-4c28-b168-53c9419b90b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QVectorToArrow", "//", "Options"}]], "Input",
 CellChangeTimes->{{3.390219785784399*^9, 3.390219790421028*^9}, {
  3.390219842903577*^9, 3.390219843833543*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"cc1cd452-b2ae-4efb-8ee8-4b62bc018401"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[627]=",ExpressionUUID->"adef04bc-f39c-47c6-a41c-f8d00f3cf4aa"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.390219873706263*^9, 3.390219874375732*^9}},
 CellLabel->
  "In[628]:=",ExpressionUUID->"1a954d50-3f96-4f18-b32f-f94ad88c814e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"QVectorToArrow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"QArrowShape", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       FractionBox["1", "3"]}], "}"}]}], ",", 
    RowBox[{"QLinePointSize", "\[Rule]", "0.02"}], ",", 
    RowBox[{"Lighting", "\[Rule]", "Automatic"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3902194266242*^9, 3.390219441688385*^9}, {
   3.390219501354521*^9, 3.3902195357024927`*^9}, {3.390219879910611*^9, 
   3.390219906128868*^9}, {3.3902200204808617`*^9, 3.39022005446014*^9}, {
   3.39022223870511*^9, 3.390222239160843*^9}, {3.390232365319017*^9, 
   3.3902323732864933`*^9}, {3.390293993592916*^9, 3.390293999193632*^9}, 
   3.393850671122547*^9, {3.393850726395426*^9, 3.393850739636883*^9}},
 CellLabel->
  "In[629]:=",ExpressionUUID->"20c758b7-23e0-440b-9c5c-1143a3c08a37"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.02], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {GrayLevel[1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}}]], "Output",
 CellLabel->
  "Out[629]=",ExpressionUUID->"fb4fa318-c250-481c-9156-eb784773ad3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVectorToArrow", "]"}]], "Input",
 CellChangeTimes->{{3.390232611942411*^9, 3.390232616481105*^9}},
 CellLabel->
  "In[630]:=",ExpressionUUID->"f17bb107-a18b-40a7-820c-69c4b2eaaba8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[630]=",ExpressionUUID->"9eb3caeb-2ac5-43c7-926e-147b55273679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"QVectorToArrow", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"QArrowShape", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       FractionBox["1", "3"]}], "}"}]}], ",", 
    RowBox[{"QLinePointSize", "\[Rule]", "0.02"}], ",", 
    RowBox[{"QHeadColor", "\[Rule]", "Blue"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.3902194266242*^9, 3.390219441688385*^9}, {
   3.390232387855072*^9, 3.3902324824832993`*^9}, {3.3902900716971197`*^9, 
   3.390290075030418*^9}, {3.390290118627667*^9, 3.390290121254785*^9}, 
   3.390293983873961*^9, 3.393850646254328*^9},
 CellLabel->
  "In[631]:=",ExpressionUUID->"2faf96fa-365d-489e-b3ef-09497f7c8dd5"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.02], Line3DBox[{{0, 0, 0}, {1, 1, -1}}]}, 
   {RGBColor[0, 0, 1], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}, {0.7395026707414701, 
       0.5209946585170596, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.5209946585170596, -0.7395026707414701}, {
       0.6666666666666666, 0.5405110069888132, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.6666666666666666, 
       0.5405110069888132, -0.7928223263445201}, {0.5938306625918631, 
       0.5938306625918631, -0.8123386748162736}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.5938306625918631, -0.8123386748162736}, {
       0.5405110069888132, 0.6666666666666666, -0.7928223263445201}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{
       1, 1, -1}, {0.5405110069888132, 
       0.6666666666666666, -0.7928223263445201}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.5209946585170596, 
       0.7395026707414701, -0.7395026707414701}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.5405110069888132, 
       0.7928223263445201, -0.6666666666666666}, {0.5938306625918631, 
       0.8123386748162736, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.5938306625918631, 0.8123386748162736, -0.5938306625918631}, {
       0.6666666666666666, 0.7928223263445201, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3], Rational[2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.6666666666666666, 
       0.7928223263445201, -0.5405110069888132}, {0.7395026707414701, 
       0.7395026707414701, -0.5209946585170596}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}}, {{1, 1, -1}, {
       0.7395026707414701, 0.7395026707414701, -0.5209946585170596}, {
       0.7928223263445201, 0.6666666666666666, -0.5405110069888132}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3], Rational[-2, 3] + 
        Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}}, {{1,
        1, -1}, {0.7928223263445201, 
       0.6666666666666666, -0.5405110069888132}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}}]], 
    Polygon3DBox[
     NCache[{{1, 1, -1}, {
       Rational[2, 3] + Rational[1, 3] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 6] 2^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3] + Rational[1, 6] 2^Rational[-1, 2]/GoldenRatio}, {
       Rational[2, 3] + Rational[1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[2, 3] + Rational[-1, 2] 6^Rational[-1, 2]/GoldenRatio, 
        Rational[-2, 3]}}, {{1, 1, -1}, {0.8123386748162736, 
       0.5938306625918631, -0.5938306625918631}, {0.7928223263445201, 
       0.5405110069888132, -0.6666666666666666}}]]}}]], "Output",
 CellLabel->
  "Out[631]=",ExpressionUUID->"07a0fb1e-71fe-4125-a1cc-0edeb82a2d06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"QSpinorToArrow", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]], " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "None"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3902330509952717`*^9, 3.39023305995817*^9}, {
  3.39023335103624*^9, 3.390233387181116*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"ea7f43f0-7870-47a1-95f8-78f1ffaac832"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.001], Line3DBox[{{0, 0, 0}, {2, 0, 0}}]}, 
   {Hue[0.125, 1., 1.], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.1545084971874737, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, -0.1338082836649087}, {1.5, 
       0.07725424859373685, -0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[-1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {1.5, 
       0.07725424859373685, -0.1338082836649087}, {
       1.5, 0.1545084971874737, 0}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {Rational[3, 2], Rational[1, 4]/GoldenRatio, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {
       1.5, 0.1545084971874737, 0}, {1.5, 0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}}, {{2, 0, 0}, {1.5, 0.07725424859373685,
        0.1338082836649087}, {1.5, -0.07725424859373685, 
       0.1338082836649087}}]], 
    Polygon3DBox[
     NCache[{{2, 0, 0}, {
       Rational[3, 2], Rational[-1, 8]/GoldenRatio, Rational[1, 8] 
        3^Rational[1, 2]/GoldenRatio}, {
       Rational[3, 2], Rational[-1, 4]/GoldenRatio, 0}}, {{2, 0, 0}, {
       1.5, -0.07725424859373685, 0.1338082836649087}, {
       1.5, -0.1545084971874737, 0}}]]}},
  PlotRange->All]], "Output",
 CellLabel->
  "Out[632]=",ExpressionUUID->"569d61ca-4773-4637-8643-16aa5ad4ae4e"]
}, Open  ]],

Cell[TextData[{
 "Finally, there are the commands ",
 StyleBox["QVisualizeVector", "InlineInput"],
 ", ",
 StyleBox["QVisualizeSpinor", "InlineInput"],
 ", and ",
 StyleBox["QVisualizeOperator", "InlineInput"],
 ". They convert their argument into an arrow which is then shown together \
with auxiliary graphics elements. The appearance of those auxiliary graphics \
elements is controlled by the following options"
}], "Text",ExpressionUUID->"27848b9a-88a7-40e4-b1b9-4336ffacd314"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVisualizeVector", "]"}]], "Input",
 CellLabel->
  "In[633]:=",ExpressionUUID->"b4a6e141-63aa-4220-97c2-e30f9b81de69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QDrawUnitSphere", "\[Rule]", "18"}], ",", 
   RowBox[{"QDrawAxes", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCube", "\[Rule]", "False"}], ",", 
   RowBox[{"QCoordinateCircles", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCirclesColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QNeedleStyle", "\[Rule]", "False"}]}], "}"}]], "Output",
 CellLabel->
  "Out[633]=",ExpressionUUID->"9b69701d-dc38-4a8b-aaa6-3bed778ef4e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "QVisualizeSpinor", "]"}]], "Input",
 CellChangeTimes->{{3.3902908172403173`*^9, 3.390290818091012*^9}},
 CellLabel->
  "In[634]:=",ExpressionUUID->"c14f8d10-c667-4da7-9ab0-62c24a8c62b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QNeedleStyle", "\[Rule]", "True"}], ",", 
   RowBox[{"QDrawUnitSphere", "\[Rule]", "18"}], ",", 
   RowBox[{"QDrawAxes", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCube", "\[Rule]", "False"}], ",", 
   RowBox[{"QCoordinateCircles", "\[Rule]", "True"}], ",", 
   RowBox[{"QCoordinateCirclesColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowHead", "\[Rule]", "True"}], ",", 
   RowBox[{"QArrowShaft", "\[Rule]", "False"}], ",", 
   RowBox[{"QLinePointSize", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"QMinLength", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"QArrowShape", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"QHeadColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"QArrowScale", "\[Rule]", "1"}], ",", 
   RowBox[{"QShaftColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellLabel->
  "Out[634]=",ExpressionUUID->"556f937b-8952-4751-ba6d-112dd3019e4e"]
}, Open  ]],

Cell[TextData[{
 "This shows a spinor as a vector on the surface of the Bloch-sphere. The \
size and shape of the arrow is controlled by ",
 StyleBox["Options[QArrowToVector]", "InlineInput"],
 " as described above."
}], "Text",ExpressionUUID->"799aaf3c-ec3a-413a-86f5-35209cb0635f"],

Cell[CellGroupData[{

Cell["QVisualizeSpinor[QNormalize[(-1+I) {1 , 1+I}]]", "Input",
 CellChangeTimes->{{3.390289860638399*^9, 3.3902899349073353`*^9}, {
   3.39029083164787*^9, 3.390290833950815*^9}, {3.3902908735359917`*^9, 
   3.390290875955452*^9}, {3.390291055540636*^9, 3.3902910819612617`*^9}, 
   3.390291159803007*^9, {3.390292500078312*^9, 3.39029250705829*^9}, {
   3.390293374794389*^9, 3.390293375149041*^9}, 3.390293481275622*^9, 
   3.390293550008285*^9, {3.390293811393549*^9, 3.390293816062522*^9}, 
   3.39029396620325*^9, {3.3902946220029583`*^9, 3.39029463591173*^9}, {
   3.393851551483891*^9, 3.3938516012058067`*^9}},
 CellLabel->
  "In[635]:=",ExpressionUUID->"8ac3f506-de07-47b5-b283-24688b7713c0"],

Cell[BoxData[
 Graphics3DBox[{{
    {Hue[0.375, 1., 0.6666666666666667], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.42172168098165175`, 
       0.24494498568501488`, -0.16666666666666666`}, {0.35201198900350106`, 
       0.2636236413551827, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.35201198900350106`, 
       0.2636236413551827, -0.2687287392826324}, {0.2636236413551827, 
       0.35201198900350106`, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.2636236413551827, 0.35201198900350106`, -0.2687287392826324}, {
       0.24494498568501488`, 0.42172168098165175`, -0.16666666666666666`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.24494498568501488`, 
       0.42172168098165175`, -0.16666666666666666`}, {0.31465467766316557`, 
       0.40304302531148395`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.31465467766316557`, 
       0.40304302531148395`, -0.06460459405070089}, {0.40304302531148395`, 
       0.31465467766316557`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.40304302531148395`, 0.31465467766316557`, -0.06460459405070089}, {
       0.42172168098165175`, 0.24494498568501488`, -0.16666666666666666`}}]]}, 
    {Hue[0.5, 1., 0.8718115663020503], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.42172168098165175`, 0.24494498568501488`, -0.16666666666666666`}, {
        0.35201198900350106`, 0.2636236413551827, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.35201198900350106`, 0.2636236413551827, -0.2687287392826324}, {
        0.2636236413551827, 0.35201198900350106`, -0.2687287392826324}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[-1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[-1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{0, 0, 0}, {
        0.2636236413551827, 0.35201198900350106`, -0.2687287392826324}, {
        0.24494498568501488`, 0.42172168098165175`, -0.16666666666666666`}}]],
      Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[-1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 8] 2^Rational[-1, 2], Rational[-1, 6]}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.24494498568501488`, 0.42172168098165175`, -0.16666666666666666`}, {
        0.31465467766316557`, 0.40304302531148395`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}}, {{0, 0, 0}, {
        0.31465467766316557`, 0.40304302531148395`, -0.06460459405070089}, {
        0.40304302531148395`, 0.31465467766316557`, -0.06460459405070089}}]], 
     Polygon3DBox[
      NCache[{{0, 0, 0}, {
        Rational[1, 3] + Rational[1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 16] 2^Rational[-1, 2] + 
         Rational[1, 16] 6^Rational[-1, 2], Rational[-1, 6] + 
         Rational[1, 4] 6^Rational[-1, 2]}, {
        Rational[1, 3] + Rational[1, 8] 2^Rational[-1, 2], Rational[1, 3] + 
         Rational[-1, 8] 2^Rational[-1, 2], Rational[-1, 6]}}, {{0, 0, 0}, {
        0.40304302531148395`, 0.31465467766316557`, -0.06460459405070089}, {
        0.42172168098165175`, 
        0.24494498568501488`, -0.16666666666666666`}}]]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1: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
tNr+NoxQqP/P/wcsXCSC
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1: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
+f8AfzRdPw==
      "]], Line3DBox[CompressedData["
1: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
F43pig==
      "]], Line3DBox[CompressedData["
1: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
/H84nBYy
      "]], Line3DBox[CompressedData["
1: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
/b/S9k5S
      "]], Line3DBox[CompressedData["
1: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
5D//H9jTU1Q=
      "]], Line3DBox[CompressedData["
1:eJxN2Gk0VW0bB3CpKBVKhHrIVAoZmyi3IUM4UTIlKokkFOI1ZJZQFBqoECoZ
MiQeVLcpmec5w8HhHMc5ZzcgZXr78tx3H/aX39prrz1c1/+/1hazczt1iZ2N
je3Ln2P1n4NvR/Cd6FAChK5dxRVdcF490mNDgLBqLdj9Md/nWQgBxNKiIoJT
YsB/LuzfYtwZSACZ1DChx8nJyG9EGri89SWAxXHvx4FJr5B3NNZF2XsQ4E2p
0QoPJQ+5vKUQjXqOABxeBgXt2SXID81/WuWmQwA971+x2och8uDErXaBOwkw
rlX/r3RBNfLwrEi6xRwLcGrkGEr6fUYuaqzUeLqCBZ7lbBhZjG1Efof0KI4V
wgL9hK6YflQr8sNFdySOarGAjgmjRP1pO/JhJeNY3hkm+PEjhufyw07kz3Z8
tU9JZwL2sqWzm690I7c9rNLYS2KC6S1XTW/L9yI/ttW+bccUA8QuSu/6H38/
co+c87c5whhg2VQo+GPXAL7P67T2Dm4GCBN7kXuhcBA5o5Xv+d6EaWAj2RwS
FjiMfPMlV0J4+zSomeA23s5HRp4acLjw1T06OFeuNyAwg91k9Y+qvnV00KPH
8hyvHMXv7VaOVJbrFNi9XcdJ4OkY8hIOlyiLNhrQGC08p+YyjlwsJtfzwQEa
MDLcePuJDAU599oE02uRVGDhZc6bMYOdkVmXQBmdBOkPyqjC2RPIP6qrmuse
mgRlarbrpiwnkZMPZ2dc850A/Sbn/B/zUJHfshI6uVxNAbfVXrQ6FGH/rsLv
mTc/DjLf9LS+PE9DrsfaZ/9aZhw0hB9NEV89hVxwYO3rWscxUHbMB6QkYPdX
J3T8YkaBhEDWt2QZOvLTC5YZOpAMtBQvq/IVYvdSULT2I48AjfQBymv5aeTs
KZGfyQLDoKWUjdmbj/1d/z23O/aDYDGJ+8kjcQbyRJKGkeStAVDuaD1u9xC7
U8f+s5UVfcDaR13QcgE72xNLiutyD0h65b8vxIKJ3/+WVb+ZPN3AtEfyQ8Vb
7Na2My8UjnYC0XVqZcHsLOSyqbEkNfV2sCXz9dlqY+ypZm2wOqIFPFBbcrOK
x04TYhN73toAqlumiR8Nf/nsmWLxij/7cenqLd4V7NtIEM4TVeCKxJ2bi7sJ
5OW+lifFbD6CKiXyVLs+dsnsClUB+WLg4SoSqmGPfdN5OYJsXQiWLMQMdrpi
d3KnVu7hyQWbl453i3v95ced+cQqMgDM9qa+88f+5sSJG0Yjj8Gx4S69bcHY
zUSN14xuDQa66oq+mqHYTUqtdv6SCYTfs+6Nkv7yaZVlexuOR9Df+vvu639d
h/1tAb/SznRYuElT+8NN7HIF2f3F57PhzA5bcoY39rsin9hzWwsgiJWetXPD
/mBf3tjxgFLo50S6oXgGe6frJUOhiQqo7OyWWqmK3blPt+qfHzWwRe3ncys+
7A3t5dJuxXUwwu/dmuVJ/F3K88l1yjVNcMYrWiz7DfZeRoLDilYbpF9evXLJ
/S8vz5/PEOiAG4BI/V4F7OeS5BblNnXBS63rbezJeN6WjimJqg11Q69oj+64
GOxWEbePaLX0wsYT327OymFf0FT79TGvH1rH9yvJfMZzbnrmnebzK1/gurPc
xYbnsffVbit5qj0Efx56r3F4Cu+X69mYktHZYXj2/h4pEQ/s9LAlkqIRGTYX
RpSy5vH+6sgE9/zaOwo/VdaeNnHBvrhJd0vG3CgMDGN9jaHgfLgc/6Q/qWUM
WsqUR146jn34rUVoTPw47FdS8dpViPNHXli5mMuEAkVWqc9vFMQ+VmjJJbpt
Au7lqyPHXsE5lskfd7+kcQL+zD0Q1VOF87Ce11Q6InIS5igfHJvhwN7Vv/54
+VEqHDJ0m/LTx7nqmEjSkiNToauxrXfSfZzDW+4vbZqJpEE690WxgU84z2VM
8nLNxafgukzLlVx27FbOdV19BVPQdTCka1wd94KJxRqzJl06nHW8Mv/2Eu6R
+D21W8wa6XDP5eTKjw9x79Scb0isN52G9B6+978vjiCfUdisZdYxDb1keguN
koaQD6i6PUzWZMC62TPDR2hfcP9u4+XvLmRAE/qXW+JcuDcpn6s0LvIzoeik
iKatTh/y7dIcT9TcmNCyLb55OLQH72MYu9Smeib8Fl+lCR524e/ImfbvPX4W
dAlTDnlV04H3tGOU0/88C3Lf/CJNr21DnvyCfqQrmQVF4+b1vZqbke8Y1e6q
7GLB4V0+edOCDfj9x1yjSnISUPvit8W9m2qR35PmPBKyj4Dc8cvWmzSrkCco
5QvWmhBQPPdVhe3R97hHdrCFjTkR8FBdr8GtbUXIg9KFmIXuBBw+8T4tXz8f
ebbvUl6WDwHH8m18m75lIn8oYmAgHkjAMGm5O4vZqcgPrtcmuYT8uQ4/hW1j
wz3kZSTnishQAmrYDEQdPm6GXL9JoKfiz/lU5dnE75p34H9+4RS9VjKIgLBe
bmZY7xnyve0NHsV+BNxV454YeeAlcsPa9xl9ngR8yS8z6Hz1DfI7DRKlPc4E
5AynsomYvEVeZm5ebmxGwCD/u2alP8qQKxwacA5WIWAcW3bh9qRK5AdWObn3
bfhzP4caXPXTPiFnfA5ivzLMgg75W+SLztUjZ+k4v1jOYMFTbHoFFxybkVe5
tgi3OLLgdr3+kcj7bcgN2po5Df9hwYyihpiOuA7kdqyoI7RGJvxZX9qUH96F
vEhvwrjof0wYR2WZCp7qQX5GkbbulQATrkmpcCWBPuRvevdVdr5lwGlAtoVr
B/D5R9t9DxgxoMGpnyayH74gdxr57WvXNQ1PKIQzEuKGkL+sZMm+tZmGD2y1
5s5qjiBXN3DfWNpNh+sDUhPo4WTkaxwiIUufDtnLJNV97UaRXxwZDFCFU/B+
ozplUWYMuWbCgRB+iSn4mlsks2DVOPJ1wqpPN0fToI6IWpZ3DXY1Fa2Tpl+p
MHA3raMpgIK8n2hRltWiwtPVF+2ea08gH/ymuPI7cRJqWzhRt8xhP+Vy+Xfy
0ATstLL+nV4wifzD2kLGUekJyGkvuyBoTUUeFP4/w2vXKfBNhtm5DwvY81zN
tn5+MQ4DCkcmXqfTkJu2CDl1j41BZb7OcyTVKTwPp4qGArnGIGN/WcH7Huxq
nIK35RVHodE17nhdJzryxqSWUB07MoyZn98ePY2dPaysSHJhGM7YeO1Juz6N
fPjylau2+kOwS0fj6y8qdi7y8p3jj75AEPLrmrcZA7lwkMTVA2X98FnnQGlX
DXaN7xtTCud6YVdmXX+uFBN5hJt+zgRHD4SqsmPdt7CPmORqygl3wdoArxP7
h7H3JvMmVxzvgEoHUgS8pVnIRab4vmqQ2iAlS3GW4zr2MK1/fQWHmqA4qZFr
fy72RyZ3635+roNOHHOW/0xiN1X+9IIX1sBmxRN6t/kJ5BkUqZfGcxWwJtvY
XFYV+5uOgPKdeaXQXGMHe5wV9ldrDEzm5wpgvdt46Ho37Olyn/KkrHJg0E3D
8Tov7Gns+lzvqjLgDU83lSJ/7FnGUDhkYyKse+Vgyh2MvfpCL+mzRDC0kq6Y
1wjF7t10zLpb3Q+Y7RG5dvYvz0ws8ZtUeAh8Dxp6PPrrOr+S6u7udEkHmVGz
MjE3sZvsDlrtXpEN7v7Yveak91/PWzruHjRbAHb5Lw9v/Ou5rHQSifvri4Ft
3O39WfbYg0iOVnuefwCp8oLFaYbY1+wnPjjRq4D7atswJWnsfoYtDg2lf3oj
krl8ZgV/F3dj/S+51xqAg+S0CH8b9p2UDUd9rreABPlvHB8SsDN3vdEX4WsH
WqYZJYNm2FcNT0RU8naCVQflGx6tx/5TceksfaULZFOOGT0sxvPmGXElL62u
Bxgt/pZcvoD9dy2P7EJBHxgouxwbsIznPGvybuozzwHwVN1g7noS9vsWuxqr
zQYBz3zwgZO7sBdXKi1c2TUM6h88bHuWg/fLsYwRGN02Ar7cUNE9rYKdYqbT
wtVIBk8PO5jnZuH9fZDkbx2fNArI4VKDNyWwR5FD901dGAN3fVTv9jzG+fDJ
I5DXfP840Pgo4vRuAedMgTdDaWp2HLSVBrow7LBnxxSvP1ZJAYN7eY40FOO8
CneqfqYTOgF0PQLCrDmxU2zTotiVJ0GXwxGahC3Ow8QEWljx9CRYjlRxLEnF
+VmZ9Wdg46jgaR+naBgd5zBVvYvLXoEGxILXOq5Txu65JsrJp5sGbsiM22Y7
4Dz39prccdVpChxa9dZcPR33wtiDPP21q+mA51uclHMD7pEnDoIyzGg6+BFZ
7HBzAfeOksCLR7QN02B/VfHPFFnsO45YRT6NnQYz448S52OHkbtpMf4pXc0A
ojTHo2lDg8jNvBXq2HwZYIGXo19hBfdmUfupf2wnGaD/kN78dvF+5ELazTnO
x5jgcZFFzXfbXjwnyQ7ez9OYIO3eL/sYt27kl1vJPko/mIAUXVL87kkn7uXO
HoV9aizw2thuq29TO56TgC3JNsEssFn3krZ/WityOZ3nOjblLPA1bOMGPloj
8nxJIdLKNxYY2SuqLdrzGfej3osUdVECKEjpboVt1ciXjFilU5oEiNVtJo9v
qEC+6N95UOscARbmtDb5jJUgf0dK9R5xJ4BsXTefmHI+8hw3YylrXwL4UbU7
t/NkIt/vKfkkNZAAzs1enpFXU/C+cEs03QshAPSPeBLuEov8v/+Nm6+1rosu
OP/xP/8/GM3brQ==
      "]], Line3DBox[CompressedData["
1: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
HJ/tvPb3//n/AfylrBg=
      "]], Line3DBox[CompressedData["
1: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
cP7jf/5/u95JPA==
      "]], Line3DBox[CompressedData["
1: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
S/7z/wF788DU
      "]], Line3DBox[CompressedData["
1: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
/y92FrvS
      "]], Line3DBox[CompressedData["
1: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
/j/brYOy
      "]], Line3DBox[CompressedData["
1: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
up5XGQ==
      "]], Line3DBox[CompressedData["
1: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
+f8AIlTKvw==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1: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
tNr+NoxQqP/P/wfPbZIC
      "]]}, {
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, -1., 0}, {0, 1., 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
       FontColor->GrayLevel[0.4]]}}, 
    {RGBColor[0, 0, 1], PointSize[0.02], Thickness[0.003], 
     Point3DBox[
      NCache[{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}]], 
     Line3DBox[CompressedData["
1:eJxN1ns41NkfB3BSJDIRJVTsFMbs1ohKipNLwi5lIlKpbJdfK6tkRUq/TUrk
ltu6dHcp91WMWE4k41czGQ1yHcwYc5+0VDJk+/3ROft9nvPP6/k+53u+5/M+
5/mYBIZQj81TUlI693WofB17p78MXiTLQcxatv0k4bQ91ef/TxckUOjKfDM5
8D3IjLMKvwW++daTJe6GK+VgxlzhWh5ahrwu67+lP6nLwbSTvXZKRQ3yRMJ2
/aUyGVi1+NdjwXcakXvYMzjj92RgIqveO6O0FXmS3fZI8jYZWHipkzK/nYn9
MOVGQ7kUjNIG/Cxr3iBfbvZqhqglBanqS6ocLbuRJ1dIze86SMDr6HBSNacX
ednEQOiAvxhErabGJgcMIp9op/ZVnRSB//wwcYrmOIz8Idng5hdXIVgW0MKg
jY0gj5B1/6ZCFAC3yjee3Qd4yPvts3VnpXywQy0C+D0dRU7fZFV1MXYUGLrM
frqxcgx5fsXmm6UmPMAx36Cm5i1AvowqPOqXMAKKmQ43qAlC5KeemhhEvxkC
ctIfXsvui5Dzg3zGoosGgELwdHxxohg5rWneWOiKXiAg+R7JCJEgH9YpePS2
vAuYG5pbZJlJkdd0OF3P4XWAmpuzJAcWdgNPw/+lfs8AnpT3+wl7ZcgbliXf
zplqAZLAzY6KauwmyvRaq4VN4OhvFZ3rONj9nLMe65jWAVBXyVf7gl2nw70l
pr4KPNSiMS115cj7Wht20P8oBJprXlBVididqBz93LlkkFJ1we9XC+wVkcLg
40HxkJMc19ryL2/9uCFOcboQXj3hQljzr3mGyPzEcOPHUFnjVrHVUuwH3gdN
XL5QBzO78qJ6ZvA6LW0jQleInsECVnqa2xB2VeUf72sy26DR3qyBe1exa187
XXXehgUNmz1qKQTs/P0dOuxaNgx32sNwj8H7/J1dSW5ZyFtY1SluNWLiejUu
/DjZ3d4HuRpiu9Vq2D2evVG8WMCBue5hL7PIuO46ub13P1QOw74goYxtgnPS
3Kiv8cySC3X8vnynWIJzRbz2mrwZ8qDWgNcql3acT18f7p+Bq/hwbcvznvoE
PvKYBfXZtwPHoKYRg0mwxTmPS+W8jywWwGh6cAy1hovzc8okjdMihHre2e51
W/A5+ttq/IigXwSP8bIc1+sNIddk5osCO8SQ8K7wwZH8fnyf6AVYqeZJ4OSd
Lc6Re3qQM36WRhj4S2H31dAW5XudOM8vftms8k4KDyYFjMbqdyDPo3R6lx6T
QUdf6yuexFfIo7dXHtpNl0GVkYiCykPPke/MmTlTJpLB9CZTW40zEP/vvcNn
h+bL4Qa1rbu+N6xFTppi5WwxkMOA0+KzziaVyKnbfl5vYCaHwf5PVufvuIvc
is+Kv0CWwxnFk2nBiBeev7PcuuLr+2w3Jtdv1234zXt8jVKeG8nhaWGH8uCr
MuSGz2bC/lokhyXRE9mXrWuQHyu5EkJ+J4NJvAiao2Ejck7wms/ur2TQbM4x
jT3TjJzm6rnFJlQGg1N0g01dXiKf9uykp76XQoXyct0f1DrwdxMprJ17pHBR
w6Pqg62dyDWLN2jcfyCBPrzR1yxKD/KrmVM9kXQx7Hcfvlf9sh/51itKRm84
IrjZfMopQmMIud0XnVJrrhCqNIeM2xFGkMdaz9kwqgVwUX6S+lQRF3nNA206
I3YMNgRaK/p1RpFPBu0+LCHyYdHT1f0eV/nIb+k5Zzj8yYOsrCMnvfvHkBOv
2/SaOXPh2b9yeQtUhMhXNC3YU58/DM9FeuXKSSLkYx/1b3gac+CPJZkbPxHF
yJsbNXjF4j4YMXmefVZJgjw1rGGyh/oWukSNd5PZ2LuvD/kFjbDh4kZuod0F
KfKLrj+1ZixhwQWTYXF1ujLkBvblqerDbbDOt3LH/Vjs/vruZuklTdDX2LUM
9GDPTbLLfnmuHooo5YTdn7GTNj6vZ6U8hi5MSpKOjhy5bSKfGun7ELqv+HCq
2AT74ITzca5WGlz3KT1jhoRd3lSdHGkcD2gO2X1tFti1PtONOjMKQWpUb9xC
Ivbq/aav7EiPQfAhuHvlUuzjxZZZPvPqgYpm9afpabxO39/TbRWmTSAzsGxW
dxD7/tpfXtPaWsCZzN5UvVrsCU/zztEyGWDkODHtwS7sc8aPL9eNdICw3ZFF
CSy8z7eLJfpkny6glaBnVWWDfXJdykbRTA+IKqiiLw/H9RKucdh2wGMAbFoy
79C6Alz30CeEtnWtQ6B0UZ6foADnZOmm8dnPsSNAdu7TMvNknKt2AcE2QcEF
zX0D5/XPCpAfCKga23dhFBQqF+XNN8X5/Bi90U29nQ/Wzr1d2t+Dc7640d0/
UVUANsWSyIXRPOSFehuKPLcLwXLg1HX+b3yONEgUN30PEThq0cHUCxlG7jZ1
In29jxjk8ok7+aGDyD38D5DWWkqABY3xey2xD/k1L6NFs3IJKIj/mOLN6Eb+
bvVKFZs7UqBRffvEXl02cu9t4UIzMxmIt2frRWu3Izffd5HQnCMDcI51ibWd
jtz00o535RIZYG883jb5Ad9jux6pzbmpygE4GGVh/4iGfCrj6OCLFXLQdX5f
i3hvJXLtCaV4wtf+duvJ9DDqvrvIv/XDqv1j4Gs/3PjN/wEUC6am
      "]], 
     Line3DBox[CompressedData["
1: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
myj+b0P+D92WYDA=
      "]]}}},
  VQM`VisualizeVector`QNeedleStyle -> True,
  VQM`VisualizeVector`QHeadColor -> Hue[0.375, 1., 0.6666666666666667],
  VQM`VisualizeVector`QShaftColor -> Hue[0.5, 1., 0.8718115663020503],
  Axes->False,
  Boxed->False]], "Output",
 CellLabel->
  "Out[635]=",ExpressionUUID->"9c7da56d-5137-4da7-bf09-08c613bb8d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVisualizeSpinor[QNormalize[(-1+I) {1 , 1+I}], QNeedleStyle->False]\
\>", "Input",
 CellChangeTimes->{{3.39029386237111*^9, 3.390293897491084*^9}},
 CellLabel->
  "In[636]:=",ExpressionUUID->"1afbc497-861c-4990-88a2-6c8f5c3fc349"],

Cell[BoxData[
 Graphics3DBox[{{
    {Thickness[0.001], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        Rational[2, 3], Rational[2, 3], Rational[-1, 3]}}, {{0, 0, 0}, {
        0.6666666666666666, 0.6666666666666666, -0.3333333333333333}}]]}, 
    {Hue[0.375, 1., 0.6666666666666667], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.5546270030561026, 0.44537299694389737`, -0.25}, {0.5115440440683197, 
       0.45691704101221703`, -0.31307782983892674`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}, {
       0.5115440440683197, 0.45691704101221703`, -0.31307782983892674`}, {
       0.45691704101221703`, 0.5115440440683197, -0.31307782983892674`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[-1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[-1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.45691704101221703`, 
       0.5115440440683197, -0.31307782983892674`}, {0.44537299694389737`, 
       0.5546270030561026, -0.25}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{0.6666666666666666,
        0.6666666666666666, -0.3333333333333333}, {0.44537299694389737`, 
       0.5546270030561026, -0.25}, {0.4884559559316804, 
       0.543082958987783, -0.18692217016107326`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}}, {{0.6666666666666666,
        0.6666666666666666, -0.3333333333333333}, {0.4884559559316804, 
       0.543082958987783, -0.18692217016107326`}, {0.543082958987783, 
       0.4884559559316804, -0.18692217016107326`}}]], 
     Polygon3DBox[
      NCache[{{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
        Rational[1, 2] + Rational[1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[1, 2] + 
         Rational[-1, 16] 2^Rational[-1, 2]/GoldenRatio + 
         Rational[1, 16] 6^Rational[-1, 2]/GoldenRatio, Rational[-1, 4] + 
         Rational[1, 4] 6^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 2] + Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 2] + Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[-1, 4]}}, {{0.6666666666666666, 
       0.6666666666666666, -0.3333333333333333}, {0.543082958987783, 
       0.4884559559316804, -0.18692217016107326`}, {0.5546270030561026, 
       0.44537299694389737`, -0.25}}]]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1: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
tNr+NoxQqP/P/wcsXCSC
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiIpbCi0kwqlISCtHkTCVhLJFWStbKqfI
ln3XjWHse7Mwy1MoWVLZHdu//4tz3+bzed58Xzz3zDPX9buumY32180uLuPh
4WH9vpb/vuYW//8igOAaR2XPsZM6qUanv90uGAIeebO6or9dXrXzsouMN/jP
CxQLxbXmCNAj/PP8A+knyEVyj47xTRFAamQor2DqGfJuK709MT8IsEWZ1cKz
+yXyBS2H+FYWAfg1fu4xFkxBvoPxZttIBQFCGo6/i8h7j/zxs/fpTnEE0DlV
bP59IRf5OufTpS9uEKBTOSGCYBQinxysNKZqESD6SooHfa4Uuc3P0Ni/Z7nA
3qLymePyCuRteb2ZZcVcwDgUVtbwuRK5l2iRrdU1LlC5ksFH6aUg56c9DkiX
4YLepnmNpA81yP/dkr0topIDHNgPeWUf1SKfbo63O2rFAcUBCV8CPOuRn3Gn
9CSNs4HVfO7rPJ1G5LcCdE1febEB76MB2YLNzcg5WxxKJHjZ4E39N9HJqRbk
PInjPxT8WeDbanL5U7M25PHX2N/DZrpBctqHeqG97cj3/xWe8u56N1gfI7uZ
b2UH8nBXly1rO7uAhJB5S9QX7I/VNY5ZqnYBjROXi8eKO5EbOGjO7nnKBPNc
tcJDdz4i171RtdrhKwMEthHKlwxpyNXe/vVG7wADeASaxGbw0JH/SZJ7tCKM
DowfFK3flo39cvuwwqFWGjCI+0so7RoD+eD3zSd4pGgg0WmHJp84E7mb6ULg
Y8OPgJnN8hyuwP7GhNxg49EJEiInJgcudiFX9Vb3cM/qAEG9mxXezGDnBpX/
aOtsB7xzfcozEd3I/ddkzF/hbQdWoSku9/9gIY9d03Rt5842sIszJCkQh/1I
rKpkfmgLEHVOMVBbx0ZO0m27nfGxCYgoPVTJC8eeXTi7rG+kAQTIu1YcEeAg
P1oyHOq7qR7cSw151/Q39ht2EmnaZ2rBlyZWsX0j9l9GF7v/uFAD1F2dIkWU
uMhdb9vqKwdRwKmE4Ch+MvbQrWwhc99KcKhJ1NSzFrvPq7ccCx4IqG8mjGVX
EcgLj8eK+WmVgm7VCYcnh7F3CFm6z8oWgpVGhnVkMvbY7YGOVftygXbcXiuB
JOxFkTViwrRMcMryjKtNNfbmtHcKOf5vwcq6U3Zan7Ab0OUr7f55DU5nrlHU
HcSuWLrj+bBPAtDM0jO3H8V+qrOsmSQeDdICdM6JzWDPlTE28D8YBByDlIR8
57FLDMm5Wp52AU4jSvV5i9iDgkvKSMnX4WzkQ7vKJZ7Mjr933C4AbpjSMOYs
uc/bHJpaiWMk9JuTql/7L3b2uo8VtKY4KD7Zf2pwDPtz8a+b+aRew/F2u6aA
oSX3P67/dKrnHdTVIsUuo2M/Jx0g0KGYDc8rxr+QKljyHAKuMbv08+Gyeh8e
0mPstmG0ZwIyxVAK+qmvtMNOfkBEt6iXw3cKsr10ReygM29yr18FLGe+Kk0a
xPUAyRM2EjZVUPIM76R9Mnbz2UoeG+tqmLPshpedJXY39RFqpBoVpgncZxgt
x57l8LRKX6UOihKU0d2vcN3mv9iysFOyAa4qHilo18S+PTPCtJ/eCDsYORNW
bbhf7M8feb+jsBm2C6bp3fwL++fp8HyFG63wDkWr5CGB+xEk7tjxOKQNSpX5
1ty8gD10n1Eg1bkdNlBdFjJouN+rkgQlo7U7IGdSPKDtGPbMHwnwk0wnVN8a
Z6WXgXPjS6jZXu6nTlgfq/FvBgn7rNX5Or2XH+H+pPYBNQ+cSxNPvUyvXqPB
5HsJGYK1ON8Ei5tEGzfSYc5Zm8liOewUaXHdwB46NErwNhs9h3PSf/Sc0IMY
BrR0098UFI/zVkri7iMPHSbU273VjdaD8/mn90IHe5AJHUYGb/0kYVcb/gFi
HnbBExp9IZXGOOcNF1u3mEl3Q7+EiW2j/nguTBTf7A3P7IbLenY/u5KK5wun
j19QQZ0FV5w0FdVj4nkkn8fnlg9Z8Ll2kf8o0Yq86e/XnD26bPjKoG+5uhie
a+flnLLUs9kw+E34rKtlE+7rD5JHleU5UMCxwXf6RgNyoSfS6TqBHCiknrRN
800d8giXJAa5lwOLi91D69lU5JoNi9KZOlz4q9ciOqS/GvmqjA2M8yFceDJ9
rxxVFM99bbcQ/ptMLgzv7M1SFsR7gnIN7UalNAEnZLYnbz30Aefthku8D04Q
8PHGZrE57xK8L1lT1mT6EBByesZ1HQrwXDtEsN6+I6DSA9cD8kE5eI6vuCPk
2kTAmYUQ8S/p6cgvZc29/PWFgEfeK2wjLv2DvAdu7Oob+X2uV0PGYiDeu/rd
yRumJwgoLTZw1sQ8BrmJ4Vqzh7MEzPLhlnZ+D8N9kXDCkrNAwIsWkf1nVvng
56DZrrKwSMB3uVFZRxP0kd+OE1BS/e29nNLF4Oy78D831Q1pfDRHwK6hsXKf
0lDk2aBsWniagOVVU7/0Hj9FPgiKhEm/CPjUeHw+vO8F8p8uoaHf+wm46kDq
+QvxScjH3qc/F2knoDk1q1XJJg15QiO5pPw9ARVFlxkmEtnIUytqt7v5E1Bf
auexoql85Merm83MThNQu+i+7AClGHneqxZVvnUEPHXSdPg+qxx5Pfcpbw/x
u37eFsRPd1QgDxdYnaYZxYU+AV+sVdhVyB8tVrtHHeTC9MDS8jJ6NfJu0u5x
6e8c2GhJ8tFJpSJP6RlyDQjiwHXhzAtiiXXIv9ImerZv4cBjcVoCD5wakPu1
/XNtqpQNxbmfrIq2NSH/soqy65geG/qotFfZCLQgF9KIVqHWs+DXi5+Em8pa
8bnEfeFcwILuN50clWvbkDvH9JSWZXVDW87o+k3J7cjnqeEp3+S7YaxuTlTF
zQ7kazVkVlj5d0G/h3+aVhp1Ik83GatbGGLC3umv/oHiH5EbHim05ZxgQos1
MaHlrdjpV1d7r3jBgBHBmjfintGQ609cWK09RodQwDCt2YiOPHf4nsqMGh3e
qWfdOSTMQH56srat8Q4Nauy7k29RiN1/kHJQpeojnCyP83U7y0Re+yyj3Gas
E64amFGb5utC7lh5WtVxeyeUjDsePZKAXeesmzE07YA9UVE5tQe6kfP/GoYS
t9qh0kq1Y1Ht2KMv10bPvG6DqzdHGLIsWMjzu4/evnerFd7a3Pd5ORe79c7n
25eXNcPZMnn+nZZs5IHJjjOArwka+loMW9dgj/Copratb4B14i7LXDU4yEWy
CaaFRR38cSA7rv45duPP9z71nKPC7SICFi6z2MkTVrFhV6uh6DKBViVzLvJq
3uvdM+FVsIDMYoYlYlfK5+V9HVoBvxJ3DcEA9vFbjKeSJuUwvXh+hZUCgXxG
dac7TakY1tvcE5e3xW6zWUNlcXU+pNNEDx8Lw/5SbMDKSCsbnvz2bYV3PvaI
xDsmTyRSYZ3DjmxbGnZr+w+Jg9qvoYlvz4zKEHYi52CebH08XKcjMio0hl3K
+edotkQ0jDe8nyQygz3dJtDd+XoQPCRgM+o5j302jhTpcdkFyiYX6//eG3Hu
xYy7Oac6AnP+MKW2JZ51fXV4UKA/KDzVuJNvAbuneIQXszgSyIV2TA0uOXeX
e8q/QjvigeVhP5XoJe+zy2xmwunAa6BwRsd+15LPdddLLifG9i1oP6uU/88n
7A1uDIqKVCZoyVU4t68Wu77C5K0/1XOBl/mlvTpJ2BcrBWWCSYXgqGbPpRoy
9iPbjVplukrAYclFWvVR7OqZKWa5Ax8Ad5eGna/Iku8x1aUqxLISkM2Uqt41
43pIEQtLX2VNAeSp+Jd772O/CDctMs1qAIz5cWpEGftIM5UnYVMt0HPok15J
x/V5xVWO35dUDyT1X4Qv3sA+o+e5QYbTACo39HdfFsYuc1rILbWmCQj/mvK6
G4375X1QYvLdhBYwQ6n0/CaL3fqJCL+MYhu4bbipj5KI+9HbQCvJWqQdTEgb
WM6TsAuqXKiT+dQOlHJKZwuDcb8biQl3+qR2AIfbx9d+n8e5wfbISdvt0wk8
BUOdzttgf2bda1Z++CNodncR20/BuXTBZO3B/SQaeBZ6gOQigT1RVZJ3P5MG
quRyg4ztcb59168fzwimg6FsqWRyAc5J+Cv43H4DBvhK6hLfOIlzlR3oczHg
BwOUG1zXWaeN/VLwAbmhJ0ywO3PdQLMvzufBw5LOIXu7QDBff/PRXJzzXFrW
ldrmLvCr9O8F5jCeC+RL8irwajdIcI3xy1iN/fIT2RLKeDcI+VMx7LEOni/q
+bZRRe4sEFczp3LfCc+jn5l+b9zmWGDN5KYNaSvx/GqYo1KtXNlAqiKC/Mqk
GTlV/3Oo+yAbSMxsiG+52oj8nsd1hvdpDjDyzXh97mE98oA+UzpPEQcccS/J
1Smtxbn3ds/7VGkuKJouH1KvrkE+ZbufS77KBdf5vRO2DFCQ92zayg7P4YJD
f9hFVovjfeCibJQ7fYYLrgqU38wXw/vDFvvMbaV7CJBClfQ7YlmGfF/P2Nge
JwJc6xdiHNxThPvo2/0phVgC7CXGnXnW5yGfYLnNni0nwFS/aave8Szk+71q
zymyCHBFhHK5STcF5961JyTxHwRIArPTa2++xPuVR+qJtEkCyEn5u613fo7r
rag5mn+OAGsni4WSvj1Brp1kbcf7+3fypYDnkkkD3sj/+7+RWr1nm+fYyQ//
+f8AfzRdPw==
      "]], Line3DBox[CompressedData["
1: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
F43pig==
      "]], Line3DBox[CompressedData["
1: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
/H84nBYy
      "]], Line3DBox[CompressedData["
1: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
/b/S9k5S
      "]], Line3DBox[CompressedData["
1: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
5D//H9jTU1Q=
      "]], Line3DBox[CompressedData["
1:eJxN2Gk0VW0bB3CpKBVKhHrIVAoZmyi3IUM4UTIlKokkFOI1ZJZQFBqoECoZ
MiQeVLcpmec5w8HhHMc5ZzcgZXr78tx3H/aX39prrz1c1/+/1hazczt1iZ2N
je3Ln2P1n4NvR/Cd6FAChK5dxRVdcF490mNDgLBqLdj9Md/nWQgBxNKiIoJT
YsB/LuzfYtwZSACZ1DChx8nJyG9EGri89SWAxXHvx4FJr5B3NNZF2XsQ4E2p
0QoPJQ+5vKUQjXqOABxeBgXt2SXID81/WuWmQwA971+x2och8uDErXaBOwkw
rlX/r3RBNfLwrEi6xRwLcGrkGEr6fUYuaqzUeLqCBZ7lbBhZjG1Efof0KI4V
wgL9hK6YflQr8sNFdySOarGAjgmjRP1pO/JhJeNY3hkm+PEjhufyw07kz3Z8
tU9JZwL2sqWzm690I7c9rNLYS2KC6S1XTW/L9yI/ttW+bccUA8QuSu/6H38/
co+c87c5whhg2VQo+GPXAL7P67T2Dm4GCBN7kXuhcBA5o5Xv+d6EaWAj2RwS
FjiMfPMlV0J4+zSomeA23s5HRp4acLjw1T06OFeuNyAwg91k9Y+qvnV00KPH
8hyvHMXv7VaOVJbrFNi9XcdJ4OkY8hIOlyiLNhrQGC08p+YyjlwsJtfzwQEa
MDLcePuJDAU599oE02uRVGDhZc6bMYOdkVmXQBmdBOkPyqjC2RPIP6qrmuse
mgRlarbrpiwnkZMPZ2dc850A/Sbn/B/zUJHfshI6uVxNAbfVXrQ6FGH/rsLv
mTc/DjLf9LS+PE9DrsfaZ/9aZhw0hB9NEV89hVxwYO3rWscxUHbMB6QkYPdX
J3T8YkaBhEDWt2QZOvLTC5YZOpAMtBQvq/IVYvdSULT2I48AjfQBymv5aeTs
KZGfyQLDoKWUjdmbj/1d/z23O/aDYDGJ+8kjcQbyRJKGkeStAVDuaD1u9xC7
U8f+s5UVfcDaR13QcgE72xNLiutyD0h65b8vxIKJ3/+WVb+ZPN3AtEfyQ8Vb
7Na2My8UjnYC0XVqZcHsLOSyqbEkNfV2sCXz9dlqY+ypZm2wOqIFPFBbcrOK
x04TYhN73toAqlumiR8Nf/nsmWLxij/7cenqLd4V7NtIEM4TVeCKxJ2bi7sJ
5OW+lifFbD6CKiXyVLs+dsnsClUB+WLg4SoSqmGPfdN5OYJsXQiWLMQMdrpi
d3KnVu7hyQWbl453i3v95ced+cQqMgDM9qa+88f+5sSJG0Yjj8Gx4S69bcHY
zUSN14xuDQa66oq+mqHYTUqtdv6SCYTfs+6Nkv7yaZVlexuOR9Df+vvu639d
h/1tAb/SznRYuElT+8NN7HIF2f3F57PhzA5bcoY39rsin9hzWwsgiJWetXPD
/mBf3tjxgFLo50S6oXgGe6frJUOhiQqo7OyWWqmK3blPt+qfHzWwRe3ncys+
7A3t5dJuxXUwwu/dmuVJ/F3K88l1yjVNcMYrWiz7DfZeRoLDilYbpF9evXLJ
/S8vz5/PEOiAG4BI/V4F7OeS5BblNnXBS63rbezJeN6WjimJqg11Q69oj+64
GOxWEbePaLX0wsYT327OymFf0FT79TGvH1rH9yvJfMZzbnrmnebzK1/gurPc
xYbnsffVbit5qj0Efx56r3F4Cu+X69mYktHZYXj2/h4pEQ/s9LAlkqIRGTYX
RpSy5vH+6sgE9/zaOwo/VdaeNnHBvrhJd0vG3CgMDGN9jaHgfLgc/6Q/qWUM
WsqUR146jn34rUVoTPw47FdS8dpViPNHXli5mMuEAkVWqc9vFMQ+VmjJJbpt
Au7lqyPHXsE5lskfd7+kcQL+zD0Q1VOF87Ce11Q6InIS5igfHJvhwN7Vv/54
+VEqHDJ0m/LTx7nqmEjSkiNToauxrXfSfZzDW+4vbZqJpEE690WxgU84z2VM
8nLNxafgukzLlVx27FbOdV19BVPQdTCka1wd94KJxRqzJl06nHW8Mv/2Eu6R
+D21W8wa6XDP5eTKjw9x79Scb0isN52G9B6+978vjiCfUdisZdYxDb1keguN
koaQD6i6PUzWZMC62TPDR2hfcP9u4+XvLmRAE/qXW+JcuDcpn6s0LvIzoeik
iKatTh/y7dIcT9TcmNCyLb55OLQH72MYu9Smeib8Fl+lCR524e/ImfbvPX4W
dAlTDnlV04H3tGOU0/88C3Lf/CJNr21DnvyCfqQrmQVF4+b1vZqbke8Y1e6q
7GLB4V0+edOCDfj9x1yjSnISUPvit8W9m2qR35PmPBKyj4Dc8cvWmzSrkCco
5QvWmhBQPPdVhe3R97hHdrCFjTkR8FBdr8GtbUXIg9KFmIXuBBw+8T4tXz8f
ebbvUl6WDwHH8m18m75lIn8oYmAgHkjAMGm5O4vZqcgPrtcmuYT8uQ4/hW1j
wz3kZSTnishQAmrYDEQdPm6GXL9JoKfiz/lU5dnE75p34H9+4RS9VjKIgLBe
bmZY7xnyve0NHsV+BNxV454YeeAlcsPa9xl9ngR8yS8z6Hz1DfI7DRKlPc4E
5AynsomYvEVeZm5ebmxGwCD/u2alP8qQKxwacA5WIWAcW3bh9qRK5AdWObn3
bfhzP4caXPXTPiFnfA5ivzLMgg75W+SLztUjZ+k4v1jOYMFTbHoFFxybkVe5
tgi3OLLgdr3+kcj7bcgN2po5Df9hwYyihpiOuA7kdqyoI7RGJvxZX9qUH96F
vEhvwrjof0wYR2WZCp7qQX5GkbbulQATrkmpcCWBPuRvevdVdr5lwGlAtoVr
B/D5R9t9DxgxoMGpnyayH74gdxr57WvXNQ1PKIQzEuKGkL+sZMm+tZmGD2y1
5s5qjiBXN3DfWNpNh+sDUhPo4WTkaxwiIUufDtnLJNV97UaRXxwZDFCFU/B+
ozplUWYMuWbCgRB+iSn4mlsks2DVOPJ1wqpPN0fToI6IWpZ3DXY1Fa2Tpl+p
MHA3raMpgIK8n2hRltWiwtPVF+2ea08gH/ymuPI7cRJqWzhRt8xhP+Vy+Xfy
0ATstLL+nV4wifzD2kLGUekJyGkvuyBoTUUeFP4/w2vXKfBNhtm5DwvY81zN
tn5+MQ4DCkcmXqfTkJu2CDl1j41BZb7OcyTVKTwPp4qGArnGIGN/WcH7Huxq
nIK35RVHodE17nhdJzryxqSWUB07MoyZn98ePY2dPaysSHJhGM7YeO1Juz6N
fPjylau2+kOwS0fj6y8qdi7y8p3jj75AEPLrmrcZA7lwkMTVA2X98FnnQGlX
DXaN7xtTCud6YVdmXX+uFBN5hJt+zgRHD4SqsmPdt7CPmORqygl3wdoArxP7
h7H3JvMmVxzvgEoHUgS8pVnIRab4vmqQ2iAlS3GW4zr2MK1/fQWHmqA4qZFr
fy72RyZ3635+roNOHHOW/0xiN1X+9IIX1sBmxRN6t/kJ5BkUqZfGcxWwJtvY
XFYV+5uOgPKdeaXQXGMHe5wV9ldrDEzm5wpgvdt46Ho37Olyn/KkrHJg0E3D
8Tov7Gns+lzvqjLgDU83lSJ/7FnGUDhkYyKse+Vgyh2MvfpCL+mzRDC0kq6Y
1wjF7t10zLpb3Q+Y7RG5dvYvz0ws8ZtUeAh8Dxp6PPrrOr+S6u7udEkHmVGz
MjE3sZvsDlrtXpEN7v7Yveak91/PWzruHjRbAHb5Lw9v/Ou5rHQSifvri4Ft
3O39WfbYg0iOVnuefwCp8oLFaYbY1+wnPjjRq4D7atswJWnsfoYtDg2lf3oj
krl8ZgV/F3dj/S+51xqAg+S0CH8b9p2UDUd9rreABPlvHB8SsDN3vdEX4WsH
WqYZJYNm2FcNT0RU8naCVQflGx6tx/5TceksfaULZFOOGT0sxvPmGXElL62u
Bxgt/pZcvoD9dy2P7EJBHxgouxwbsIznPGvybuozzwHwVN1g7noS9vsWuxqr
zQYBz3zwgZO7sBdXKi1c2TUM6h88bHuWg/fLsYwRGN02Ar7cUNE9rYKdYqbT
wtVIBk8PO5jnZuH9fZDkbx2fNArI4VKDNyWwR5FD901dGAN3fVTv9jzG+fDJ
I5DXfP840Pgo4vRuAedMgTdDaWp2HLSVBrow7LBnxxSvP1ZJAYN7eY40FOO8
CneqfqYTOgF0PQLCrDmxU2zTotiVJ0GXwxGahC3Ow8QEWljx9CRYjlRxLEnF
+VmZ9Wdg46jgaR+naBgd5zBVvYvLXoEGxILXOq5Txu65JsrJp5sGbsiM22Y7
4Dz39prccdVpChxa9dZcPR33wtiDPP21q+mA51uclHMD7pEnDoIyzGg6+BFZ
7HBzAfeOksCLR7QN02B/VfHPFFnsO45YRT6NnQYz448S52OHkbtpMf4pXc0A
ojTHo2lDg8jNvBXq2HwZYIGXo19hBfdmUfupf2wnGaD/kN78dvF+5ELazTnO
x5jgcZFFzXfbXjwnyQ7ez9OYIO3eL/sYt27kl1vJPko/mIAUXVL87kkn7uXO
HoV9aizw2thuq29TO56TgC3JNsEssFn3krZ/WityOZ3nOjblLPA1bOMGPloj
8nxJIdLKNxYY2SuqLdrzGfej3osUdVECKEjpboVt1ciXjFilU5oEiNVtJo9v
qEC+6N95UOscARbmtDb5jJUgf0dK9R5xJ4BsXTefmHI+8hw3YylrXwL4UbU7
t/NkIt/vKfkkNZAAzs1enpFXU/C+cEs03QshAPSPeBLuEov8v/+Nm6+1rosu
OP/xP/8/GM3brQ==
      "]], Line3DBox[CompressedData["
1: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
HJ/tvPb3//n/AfylrBg=
      "]], Line3DBox[CompressedData["
1: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
cP7jf/5/u95JPA==
      "]], Line3DBox[CompressedData["
1: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
S/7z/wF788DU
      "]], Line3DBox[CompressedData["
1:eJxN2HlUzOsfB/BpJwmRoqYQKjeSRGr0tBFKairyIyGyFW3aryW30uZq1aab
RPsmTYv0NC2MhKZ9mbaZqWbmq7qiBd38nN/53efxPef7z+vM+Z7v9zzP5/1+
zqw/e416XphEIvX9vEV+3lkW9jx/GgG8nr/33nbSwYD0v2sIztc+jMwpI8Ce
lfdVpsbDwb8e66EfolNKgAnVvf0bx5ORR/aYDZYWEqCuSG91ET0T+aE/mjL3
ZxPg08gi1RNL8pHvWCNHU3lAgOChegdBy3PkNFb2TtZNAuinpIWqXX+B/HNe
54ozjgTgeDlPKVnTkU9F3dp1RI8Adysv/VB42oD8x0eP7g+SBLidMuozQWEg
T/lh4cdsFwCx9hj/C9VvkcNw/oPxFAEI4ub2z869R57+OrNt2zEBYMUO2CXu
YSJ/rq1/y325AOQfdAzoaW9Fnr3YKUq4kQ+OONRlpjm1I9+0cpTl6sIHD+XI
IlPSncidFk6y767kg9VloSX7EruQnxIfXuabzwPJpEMFFpQe5DerU3ekGPLA
nL9BZwuzF7nrJt0/N3WOgej7Gjqh+1jIZTcesTh/cgz8/q0rUpfZj5xa1Now
yx0FRdCoQEN/EHmqYgb3jMMoiLblDfk4DCFvNwVDqq0jQOzqG2En2WHk2voB
bp8OjYCUVacGmquxv1FTjy18xgUU03bRBFc28jxXIR17ZS5YoPC6JKU5yCtN
gmw0wzlgrjaCyn6KfflSK33AYQPNpl0Td824yPUTn5x+b8wGRW19/t7d2Hdw
j2wQuz8MUi3UeyevjSDX83HOrewbAqrVpMTWBewLNOYpH80hkHitc7buxijy
nFqtybqhAZDzPGB3pMgYckVfqW4br34gHirPY/hhn9jrLKOziAXutO2v2sPD
Hk4dWdN8vRf8RzhSvO04D/lpmeu03tluoJij7977Env0x+zgzTZdoFqpxLJQ
hY/cXM9+zqOhA0SFnNT2DsTeUtNt6q7bDhYXLrsR9A67y7E2m/jgVsBIWPsm
XUmA3PSoe4kK0QJKoyqWsZ2w9xlT36fZvAdKFlm6rVnYYUyt64qeJmATbHjJ
iIP9VmEQeBX7Glwjq4qpriKQR3m252cLNYBkWbOwb0bY1Rgb5ClZtcBHdNnU
zHnsV3St3GJLqwB903RkZxD2Y9N/C9YGlQK7+AalmWTsawKFhIQ2FQPH1ZnC
Tx5j1zyRNsaJygE7mE56xbnYz6tt8LoIMkBQDDT3LcYeHqU1ZzkYD4Lapi5T
n2Pflnx0miN5A2zkb2ncQ8NeV2Th73spADptjigw/cU/a46yLoM4WC455fno
l+cEpQc4ZzLToWQZjeNYgt3Aaef6kyuz4T8s7zKRfOwzOpr/cbEpgq4OIXW1
mdglSbt2Kl+hwXJWfxY5Bvv6jRFb+mgvYW3VZJCvN/ZrF042GbjUQfqnfWZM
G+xxaorXHV80QjluqvUHDexky8chc+ZvYOoY+0+z73h9m6f0R+hJzZB8PuGi
2SvsaQZL0ve2fIBT5SpgcST20F2mfZIZTJiYwF/B3vfL/iH9Zqms1watzzoM
T/yD92cKALe1J9uhendyzVw29iB61NaHCZ1wYXrkWJwl9il/nsMqxW5YKco/
TP6C56Vx8T1HkeoeaKLy3f9CBPZWU+19Y3v6oPs2E40IFexqtw8OjuewYPkj
5TvyFXhOSw4oC9O1BqBpVeNW673YtSfoWl8eDMIC7bVu0o04H9IX3Py4YUOw
lFsklkrBDp5oMFbvHoaPqRWLU8pxzmjdeLK0izUMTU9nVsttx94V8cmWF8GG
wn1CwaEPcI4tUuHfrdjCgZJ9/dKLRbG3pTcbP2ZyYHu0U3HLKZyTATUnNBTc
uPAIK0bYuhzn7Y97b0ymF7jwdIi/243V2E9vsXhvFDcCNyfxL1o74dzefUJH
w2TtKDRgWBQXleP8hy2+6t6Jo7DNKm4haAn2v19MuHkojEHlv+mJkkkDyJWf
k4cW/hyDq6+veye1FffOAZn94gsSPLgwuK+uIrkP+WxiwsH9Pjw4JS1ZYLAI
91qNoepZlR4ePC8cHRYW3o38nwI79WcUPiQUPOrWjOI+jesN0naI5UPV7abV
n451IJeO3O7oyObDgBm3pJzmNuSTk18jT2gJ4N6dG7pj1+IeXx2UEJvpJYBa
XsZnNt5uQa4wLRkXQhNAAa2Z13D7Hd4PGZXw+LgAdhhL3qLoNCH/Q+zhtleK
BFw/dcBx7edXyJPTNNxkDxLQMoBFMjtXj/zOeV3z0isEDPsntO7S0lrkHlsY
Kh1hBCxzGaA7d1Qgt9/osEPwFwHtLDe9VMkrQW62cMUzN4uALqzjnQ2P8blr
IMNt+dsCAtJOn6HHTj5BHqJV0Jv0jIB5ww3pF6kPkdsq5GjeLCOg2E2t38xC
o3CPl9fa+NEIqFzyrGG2nIp83lf9CePn713Mo0xce+7Cf/2vnTz130sJSNo/
oVgHk5Dr0uhZD4oIeH+ttH723cfI5bL1+qNyCKjua9cuRs9F/ir1gkzGIwIq
BIekM74XIz9ruTW3NYqAu0m1U3dKy5FvM7hl9dWNgIyO/Qyd6Rrk9ekjLbsP
E/BsV/6rA+L1yK8ZnN9muomAem+NhvdYvULObVZ63TglgCu+HmT79L1BftjW
P3WmWgBV3c5Gc1XeIXf3o+9zC/i5rzyWKFDtWpBLFVp6D2gL4BrjiBRRqVbk
eqsC/ioV8OHncDFpbnob8s+PlCf84vjwg/PMzlRqB/JSjS5yzF4+VCmLkzFg
dyK/RFze5sXmQbVkj7Lcc93IRY6KqK/y40EtWW+d60K9yF3C60LLlvOg7Jb6
brPAPuQrGJWiG5LG4HxcYJnnsn7k3bb3PlPJY/CcZavtqdgB5PH+opl6maOQ
4MhffD09iFzlkfO84Gee5JFKGEzaEPLlh20ISvwI7HaueLbm7DByyv2+ErWl
I9Djef65aTE2crtNijPCXlxIHA4+LlWKPUqDLKcwxIGGEfOkuSMc5AM6q5R8
9Diw+EpcEP8L9mJhauxMMhuCu3TliTAuci8Fnas634bhu2thljvkRpBfn4p/
oWg2DClMMqM/F/uM8n2XwpQh6K0tPmmnOYo857aSy3DVILR1L/oyWoG9bY+q
IJ8yAGmDUKFhzxjyzabSLXUtLPjV0N6amo8d5LKbQg36oNI9D7G9G3jIs75R
dHbU9sDmsNWFluHYt14bpx836YZPOg0vPRBgfz+71oP5VycMP/SbdIgFH7+P
jcneepkOWL/0Un3xI+yAomxVf6oN2ls9Zq2bxa7jb//Bt4AJFZ5Gus+YCJB/
30A7vVy2BS7ZGOhgEoxdPbM19W1eM5wK45fJNGI3MTwdxzrzBl4ViCYufMU+
HfmtqKmpEZpPKMLFGgTyYLsTbF+DOkielIuotsO+nvNsYl3HSyjlGaA3fR17
cx1HTCaBBv1sZdyio7FntrmeuJtYBDV5JAWPTOxqUvNC7ePZkNm0zMg4D7us
rgQz3ygDVgttf+ddjD3tCiNnuUQCvNEnGnHoOXbxLeKX5TfdgOFPjtr8PDci
3/408s39aR/g7JPmb/2LJ/rMapTeiQVMg/519b8850cqydVc9hF4K+/jv6sE
u46m7KmIC9mg703GTOUv77ncRsbic3wRcBb/Xfr6L98VrKi1hHymFDBaw1bY
pGDfKd/pYSZdBZSkOy5aBWPP+yFVaZ9RCw66FXhtdsYu0Vhttmq+Hrw7QhWn
GGNfGH3UtN/wNfAbD2jJkcdOrVmp49PYBFhWoYr+XLy+2//8rvtW4j2YvSxj
pFmAvW/N9vjlDS2AVaNJJV/GPqupvP2WTyu4Ot7frrQeu8UfUVobFreDC7eZ
VVWdeH9udQZzXuUdoDF2/pz+Teyxmg+EX5p0gcz3NUsNVbH3SwxG9Qq6wd9E
k8R6Op6XJl+yn/edXtA4O3xV4Sj2c3cuWGp96wOvm8ylbD/iOb0RVmopEdYP
bK18PMw8sQ+/dqQsmhkAwYFnNzrP4xwwNFu0YLllCJwcCpbzDcLO/RL+UJ87
BMjnLJ8dmsM54378c0Rc1DDoCpSynnTH3jxtRr1oyAajBkpq93txjqlOBd4U
IdjAcx20O2SIPWLYQv5eMAe4sv3LAvJwHm5esBr/psoFdwM7yDzRX/LTrexG
YhUXtJMEpYXncN5+3L3E8Oa+EfCp3NXHth7n9poaz/15nSNgRcyKzIfLsNd/
O1HVaD8KYi11e+qccP73q/trdg+OgvteFge3HsJ9EbdR4TXFfgwwJWzSKQO4
d+TKxTwZjDHQEPwi66IHC3k0raE2icID7b81sg8M4V7jTOgrlmXwAFn+TKXd
2R48d0/bkyok+eAWMD6f9LILea7tcULkMh9UT0ZHLFuL+3TamHOqspoPOA/c
ha2j2vE5xJiqHbNMAF7qFywp6ME9bnQwNvTKUQGQTDKhGBsw8bpcE3tQES8A
oTJHJJsPf0A+9WHPsFubAKTfPGZazHyL+3dApdhdnACKShX0c+EMvO72z94G
7iKA2sehKvJMAz5HfXj4Y/8pAuSnOs6NuNCRmy8mZdQHEqBY0ZzUqVuN5zG8
WygmgQC3qwzUv5HKkNdFZqQxswjQlhas3fN7PvJ7Y9v3OhcSYDLB/Zme2hPk
SuZ6k4tKCeCpMWMAMlKQV4EQ57QyAlzQ2T2v+DgC99f//29sMSzz2nbSoeZf
/y92FrvS
      "]], Line3DBox[CompressedData["
1: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
/j/brYOy
      "]], Line3DBox[CompressedData["
1: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
up5XGQ==
      "]], Line3DBox[CompressedData["
1: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
+f8AIlTKvw==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Hk8VOsfB3BLKFuqG2Wt1C1LFBUJj7IkiiS7ipSlJBHXEmGQNUQkyZoR
su/bM2bmjK3ILukSUdar4lqSfv3xu8/jj/PP+3VeZ8485/l+PjNn99XbF66z
MDExvf99sP4+gl25fAWVGEDR2GfYMEJBVUDYPyKc9A+038uIdTnOAN2fNFg1
Eq+D/9ymWWnIS4EBCDn3KylP3JBLVvfFf5BnANugY7c7X/ghb8nZxlkuwwDT
LGEPD/oGIyfPj5EWdzFAIE9M76biaORT77rKdXkZQN7j7aVytnjkx/Q841Xn
CfDIIzFCvDEJuTNb/2lSLwFqV4wqSqNSkT/b1Dl+o5AALV7ZI5nOGci/vTtR
IRxEABGZ6wMDqlnI+6Ul2rxNCBCtvvLBti8b+QWKEcN0FwFu7JeutE3LRT7/
677as8904G9lfk/gaD7yqzTqklAuHWQrib22Mi9Eflt38ijfNToYSXRaES4q
Qt51kM5DF6aD5s3B1+Omi5GbxITLCbbQgGNwDpe7SilygbaxawmuNBB7I/9E
aUAZcre2+dIjojRQbUh51ZNXjny8Rln/YS0V7GuL/iA3WYH8uJPaJN2SCnIP
GT31465CHhN1ZYVtrgFMN/LuPqtWjdxBKOamhV8DmMpjGjSwq0GufS2NY2Jb
AwC97O8/uNYiL916XLIlkQKKz5uHuUTVIffJ/671XJwCpGamEnqi65HHvm90
WTKBoDJqqZw5GCJ3zYoiZM/Wg9SL7OcH1CnI9wU48Hfp1AGZ6kpvgUrsybMC
Cxula4F71be6uMMNyK83mp7p4qwBClOFT2QysVcpGJH8/60CJqdKg1s5qfj5
MudnrNIqQQh5tEjXDbu6EzmtKKUCCCrzPdnVjV1h/jMn2bscqH5LKi+VpiHn
Bprp44plYL9fm0bHA+wxbkrJ0eyl4GY0/zOufuxCa/5ce8uKwW73W2oVEnTk
u76qilxyKwJNUi/+mHbGXj33wRMqFIJ7hYYHZ4qwd7C9XpkrewUMToiUr37D
vpjFvT1SPBcU+Dy5ESJJIDcLOvez6UI2iNQSqmOzxn7G21YvKOQFcPZ9zFEU
jT2AU2Vk6Us6uHfsYO2XCuyswco727lSgXj4joWXg9htPROlUsufgsEm0brg
ZezxZ29rut54DNRXPf8s4GMgP/9a9wGLbhSInMxS3bgXu/v9CYmqsVDAPCwt
9EsSe5uhauy4byAw0J6+/OIQ9ikerqwrmj5gKkHtrvZR7CejHVc/h90BRRo5
l68oYldecmtz3WEKMp4zwPhx7GIR3xONV43gkvy1X7PrnGkPe5KJijO0j/eg
Pl93HekYveKsFS8YrvmvPMsx7K2+MyfO6ZMgufVOVtnhdfcTkuLyXSwUPh+o
LxiRws4n6szO9SMG7s2a3jQnjP2cfHQ4T08CFA0d66WxY+/TNl/SjUyGt3QD
i5cm8Tr/1UKK2O6UBpNDhHwLWrFbeoNaDp1M+COwpHYhA/sGHrsFm7ks2Gwi
6+LqiV3n46rb5sCX0FlT5U2tDvbWQ2dff9XOgyORz0s9tmJvfj87FdaXD72b
LmbT+vE+5K+zU7jYUgjzooU3pcRhVzyV83NapBgaqu+1EDu77vzmZwm6xiXw
S5V1dTQrdnCOueJTRin8M9Lp6OMCPEf58OuEbG8ZdFxr36dtib1D65WD5c9y
mGOoHyzIjv2NiZN9ikIl5KtL2p2Wgef6SovIrUnjKhh9WqpGWh27xSPenocP
qmHfBsmJ2h6cJ+aKz5Ksk2sg+5AoJ99N7C1tAdOnyLVwRIGPyWoN59XtiLus
/JQ6uLTp9A7WQOyVW0vMeuvr4Y7Rdu4KHuzGg7Y34lsgNBKvbLLdinPSMFY8
+to1CuSgDTRVsOFchaMdXou9FDjmlmpez4pz+IOf1p5yvQZolmJ14OInnOeF
wa/TD1U3wG+yxAJrB87/MeckU3sxKrSaleztrsV9IatZ0+oeQoVZKiKt7mGV
yFMNfJm/jlFh1J5T5GBb3DtyNWWHZbVosGFHGUefOO4puVMZQs4pNLhcEjS2
8SPuu7L6xPczMzS4yKsoP5pfgnP71pBzowodht/U9nt1Cffmji2zXjokOhzw
cfIyFsU9a5OQ2Z5NpcPaDHbTJGoB7msnQWMWFgK+Ojt+WpfzFfIvX34mLSsQ
0IfCTwryzEGeY02eeetIwKSxsmDPHDJ+vucXmpufEHCf/tVqUbYXuMctL/7o
rCfg0KjAESH7dOShXQffWI4Q0LrGt11CKAV51tSfjrvWCBhVaUr+CBORSz3X
OKPLz4CD5VcSZydjkZeQBc8xH2DAo2YdYaEmETiH6d9oijIMuOdJ/sObS/h3
14mJ1g975BkwkvTUeD7BH88Ry60Na8cY0Iyr8IxP4F+4l3WTE88fZ0D7pKLn
n/LtkGewhB/fqcSAYbdaTtPYZZAT6X6B4b/PZ8yzi0jM2sD/PKLJ72KpAgOe
NDuWO5Z1F/mkoKR23BEGXOIEO4KM7iN/yq1xr1aWAZ2mEpWU3YKQM939tfOq
BAO+nbXZoKYajlybvfmJ704GNPAf3urEEotcTK5A3oKFAR2Gjpyw6X6CXP76
X7mvxgj4Rxa5wSbwOfLBG5fS0gkCjlYX5nmMpSGXGvHlEU8moN+CwBGxukzk
Kp2q1St3CJibw+chc4WMvObV4RlHFQIqt302V5LPQZ5kfeQH2wYC+p6XcZn7
lod8mO/tsnEzHYrOqyVdu1eAfC3pSb9MIB0meDac2ixYhLzK+xiftyodPisL
vPjYvBj5GY6cWNsFGjx8dNmXFF2CfH5EInIklQb58xYuJbwvRd7Zo7wofY4G
TY3sKY5c5cj/9SEJac5QocfDGY9mvQrkwrt/yC6FUuEbVh2WyaBK5BKekb79
B6iQrZNtXjK9Cnlj25BSxe88mdi4jTm1vRr55ZeDoff1G2B4Y+Zeq5Ea5Gx2
0eoWIxSYlm6+X3GiFvl0WKRzsB0F/uGrxDu0Voecd8N8SetHCP8JD90dv1KP
XPrLm0aB/nqox24z+piZgnyfmkGccn8d/J7tMyDoid0ld2rnld5a2GRqc8x+
EvtLrtHA7RU1sOHIIct+qwbk1uLFLQKZ1fCAq+49gVbsFb67ymZcqmBRy92D
t45Tkf9JGRuwVquEB4ZKWZtSsRtwxgf4C1dAitwfTC9XsUdtK5ofe1cG0x/7
7FW2oCGfa159BMilkK5pu1aSj92jS/lji1sJPMgb7zjzA7tIQnuX3r5i+DU1
BXjq0JHHG3/seTdeCN9xSm9qeogd6A4bGmwtgANd6l56XdidvjDOnrbIg9aa
89dn+Qjk3QYxbvtfv4SOHz/t09PEnuR25PH7tSyoqy/83tsD+6H5EJd4i0x4
WoU8OpOO3aLzpIOrVxp86tPKsaUV+wadyxZD6slQxmihPGAae6PGsoLRTAIM
7DcLN2dnIP+7scvaR+QRNJXsir0vjH2G6nXK2iQUmj4TfZohhb1xXOdX0BoJ
Xtkd4yN4GLu/Z9tTljM+0Ljs5snTR7GTjzotteTcgfIlrTxmitg3FMyc9Tho
Ck8TXp/GjmOX/MBLsVMwBHGHqerL6/yN5QOHmHO3gdLdd/SqddfZ6NvDLm3n
DcKMNX4Or/tcntvpFzsfkUBIbr2f17r7LHfm3qxvFAoqK3mWXqz7Xk8N9aP4
+aOAc6Rk64W92O+EnRseGosDXsV/h+Ruxd6xmDzQlP8UfLIT6s9bxut8OS/B
zYgjFWzffcf770HsH/NTCaasdCDXzfdPcA32onpft9ceL8Bs4e3u3BjsLkN9
a4vbs0HhtqTlC9ex8yzqSQx9ygGX16JGH8hiD/i+kck85RVI1Tp2d3Ue70Mp
RfPuN1sKgbthoNyFKuzR4LX/1xtFQHRQaHSvK/Zrev5RjdnFgNXMTjROet3+
D8nWEl8tAcpUHbm8ATwvpL4qn0H1MkBsEuHuDcR+4GbrPQfncpAkQxL9JYs9
3U6H+2xhBaC1Xu340obndzXBlJ27pxJI3m8ZjbqN3UVvyu/EbBXYZBREp/Ng
fzxUM+WxowYITspmf32O86TmUeZmsQO14Gt014KMPHaLtfjtK1p1YMYzrYpR
hfNK3a5vzwvTetCxX7aPUxV7FKuQUvh5CMZ7ZM2vRkLki1JZVuGSFLAvlMEr
E4DzU6mBn1s8lQLIP4T1JP1x3lbpnugK29wA9iQLnjTxxfl8dy1XcIXUAH4t
HWbju4zzvKBH2clwugEsBdlrXdPB+Q8Ptf2bbUoFHBrm30N24L5QPw9JilVU
MLLiZ5oxj3tHqkCu4942GigQO0zpfot7KsIyZs7KmQa8o8J49B+WITcXW5rS
pNJAt6f9s0UL3HcWnzvsi7fTQc03GimQE/fjyjeDhF1X6WDKy1mJoxr3bPBj
xwL3TDoAOZ17Or0Lketcj9s/MU4HDnum7/Qo5yOndx8QrxUjgPhqav/H7Fzc
O6o1Zv4XCOA0J6TmLPQSud1blSnmQAIcfbCwcUY/C/lPEVP+yTwCcFpqlhD5
GchnJa+Gu3QRQEZmecNweypyBSmSueV3Anw5wK5b/D0JucZy1sa3XAxwhm/i
JTk9HrnirUvkgF0MUL+FiTe+Pxr5TX8VGVMZBpDfTo1jHghGvi1n7EKKPAN0
6nS5bFnyQ56s+UHIRIEBRA8lSAxLuCMfaM9Od/j9P5kYXmR+JGmL1/P/7xuD
tNr+NoxQqP/P/wfPbZIC
      "]]}, {
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, -1., 0}, {0, 1., 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
       FontColor->GrayLevel[0.4]]}}, 
    {RGBColor[0, 0, 1], PointSize[0.02], Thickness[0.003], 
     Point3DBox[
      NCache[{Rational[2, 3], Rational[2, 3], Rational[-1, 3]}, {
       0.6666666666666666, 0.6666666666666666, -0.3333333333333333}]], 
     Line3DBox[CompressedData["
1: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
      "]], 
     Line3DBox[CompressedData["
1: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
myj+b0P+D92WYDA=
      "]]}}},
  VQM`VisualizeVector`QNeedleStyle -> False,
  VQM`VisualizeVector`QNeedleStyle -> True,
  VQM`VisualizeVector`QHeadColor -> Hue[0.375, 1., 0.6666666666666667],
  VQM`VisualizeVector`QShaftColor -> Hue[0.5, 1., 0.8718115663020503],
  Axes->False,
  Boxed->False]], "Output",
 CellLabel->
  "Out[636]=",ExpressionUUID->"832f733f-8a35-496a-8843-a66890c191fc"]
}, Open  ]],

Cell["Additional graphics elements may sometimes be helpful", "Text",ExpressionUUID->"0e5ce316-ea46-4aa8-a635-a9e396c6c5e6"],

Cell[CellGroupData[{

Cell["\<\
QVisualizeVector[{1,1,1}/Sqrt[3],QCoordinateCube->True, \
QCoordinateCircles->False, QDrawUnitSphere->10, QDrawAxes->{True,False,True}]\
\
\>", "Input",
 CellChangeTimes->{{3.39029469726896*^9, 3.390294706877055*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"e5af808f-7d3f-4a56-a57c-675e875056b0"],

Cell[BoxData[
 Graphics3DBox[{{
    {Thickness[0.001], 
     Line3DBox[
      NCache[{{0, 0, 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}}, {{0, 0, 
        0}, {0.5773502691896258, 0.5773502691896258, 
        0.5773502691896258}}]]}, 
    {GrayLevel[1], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{
       0.5773502691896258, 0.5773502691896258, 0.5773502691896258}, {
       0.48763970494832193`, 0.37838569883611667`, 0.4330127018922193}, {
       0.48763970494832193`, 0.4330127018922193, 0.37838569883611667`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{
       0.5773502691896258, 0.5773502691896258, 0.5773502691896258}, {
       0.48763970494832193`, 0.4330127018922193, 0.37838569883611667`}, {
       0.4330127018922193, 0.48763970494832193`, 0.37838569883611667`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}}, {{0.5773502691896258, 0.5773502691896258, 
       0.5773502691896258}, {0.4330127018922193, 0.48763970494832193`, 
       0.37838569883611667`}, {0.37838569883611667`, 0.48763970494832193`, 
       0.4330127018922193}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{0.5773502691896258,
        0.5773502691896258, 0.5773502691896258}, {0.37838569883611667`, 
       0.48763970494832193`, 0.4330127018922193}, {0.37838569883611667`, 
       0.4330127018922193, 0.48763970494832193`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}}, {{0.5773502691896258,
        0.5773502691896258, 0.5773502691896258}, {0.37838569883611667`, 
       0.4330127018922193, 0.48763970494832193`}, {0.4330127018922193, 
       0.37838569883611667`, 0.48763970494832193`}}]], 
     Polygon3DBox[
      NCache[{{3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        Rational[1, 4] 3^Rational[1, 2], Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio}, {
        Rational[1, 4] 3^Rational[1, 2] + 
         Rational[1, 8] 2^Rational[-1, 2]/GoldenRatio, 
         Rational[1, 4] 3^Rational[1, 2] + 
         Rational[-1, 8] 2^Rational[-1, 2]/GoldenRatio, Rational[1, 4] 
         3^Rational[1, 2]}}, {{0.5773502691896258, 0.5773502691896258, 
       0.5773502691896258}, {0.4330127018922193, 0.37838569883611667`, 
       0.48763970494832193`}, {0.48763970494832193`, 0.37838569883611667`, 
       0.4330127018922193}}]]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1:eJxN2Gs8VNv/B3CR04VEpCLdFeoUfgopK5JyDQedqFBUQkJCRHK/J9dIJEok
98swrDHMGIYxM5tcEqZEQtJU0jnp78H/rNWD/eT9YL3W3q/9/XzW3lvPu1s4
CQoICLxavIQWL9OJfeozdAKoKPIleHw97V+WepJi7h+Buf571ulFD3eIWEao
e4H//PwBtez7LQR41GYUdUQ9BDk1aNtf55sIIB1dT1XIiUMelh2v3kEmgPJG
P69goWTk6fqydxJLCQBT5RXGqrKQPzMujf6STQDZOvML5umPkZOGDQPpkQSQ
GAi7c6qmAPnh4YaNFlcJ4CpReKnTtxh5gFPEE1djAvTnVy9sNC5DPlCt6TQq
T4AdVxeCFZkVyB8yI+YMf3KB+/DB4zdkqpH3x+ZWaXVwwax9RXBzSi3yiYf/
W0+5zwVPbMmrG0fqkC8cY33+cIELBn9o/TG+oQE565fbYMUOLpCVK6Zy/CFy
jyWtfkffcUDoicyJjJcU5OIB3RuqMzlAUHLjpI0gFfkTW6NTZFMOsGmpHITb
m/H6d9mfqIIcYMa3lxL+swX5/CXP0eEiNoAf8qwvHachv/rZ5Vi+NRs8lGWX
VxnQkfc8co+mTXaB60UrTJJtW5Hz9jJkxOS7gPsXfvDa8wzkl/fdspBwZAHO
CY9ly83bkEslbNSG0Z3g82rH5bYm7cgp187pXK/tAG887wfbqTLxfR2wc0l4
ywReL7MqwkQ78D7p7qWGX9sBlbRMizOLPfyfTzwj8Xaw2Vmyt4jSiXzbJod5
OYk2QJddaTWUzkL+4FB1F2M1AxyeD21kOXYhfz38mZjc0AqmSC8nKlexkdNs
6MP7VtCB8pe/f/m4Yu/t1rDfKEwDkXfOr+mnYN8+rququ6QFZF2wZD1bzUGu
NC9DlnpDBXV79IPr7bFnfPL3vcNpAu2Xm6Q3FWD/l6nzSj+fAgpHeHptn7A7
+lu9uSUBQdjXnnc7lLnIhZWGi/QHycBDJI/5jzP2BZKWaaZ7HXAtUYwefoxd
JWD/R4Z8LVhWrTBj1IN9NH+d4428KuA65A1bhQnk/pVDrCmFCnD0dssPFWXs
rjnlyk5EKQgb/XPDur+wDxoqRq6Nfw6sl/3SZHph/7ytNOx1y1Og/+lVpl8c
9vo+ed3dYo+Bu2hFilQudmoUUFvWlwmu5fg1GlVg377A/ePnyjRQ19qwPpCE
PWg6Zi750D0QyujlhzZiNzZYd8RTJBqo0cgq+VTsA5uXThLqQSD1woEZRxp2
Bbt8hYRrTkAMiNRT6NjlA3K2/Ei4AMUjWSGM37xGL+Wg1lgAXHLTzjrrt3We
Ss/fd1wSCe+VAl/DZuyfNN/t9NybCAVl7mn4QOwyO+RoQrap0DeWlnaiDrvZ
zGyTw69smPFiuPaf59jF5EVepKrlQ1IQU0HnPva6iAx5D6NCmBznrBN+G/vH
2uaEqKUlkOzs2FPiiF1WzZ8ftaockhTJv6x1sJ9RjlXa6lwJ+eEGSqGy2AVO
hq1YV1kNhQtdsviz+P155rBTuleJBHcV7dn1FmKXePlPiYFHPRT4zLkUHYu9
WHPV5i28Brh3RCP2/UnsswyppLpNFKhm8zPy4mrsnpHte4rUmuC3CKpGLwvP
RUTMX8ZBZ6lQ+2nrRblQ7LGSu2eWXW2GtTohXQua2Psu8nOLrrfAIMucXrNp
PL/D9IjDRrE0+OXN4KryFOy2QsXdkzF02OCarD8MsAeUGer/m9EKnyak0BfI
OE/od3YS++4x4CNqvJjiL5w/PpIuE9TANrjjo3hi42Hs98t81+X6tkMPP8m1
CxdwjukMRamb2jLhppzCIb9EnHsvuj+diDHogJ4Se5sK8nF+uqUOOJJ2d8JP
RJh0WjXO25eBdd5Zc50wY5LZJcrB+ezW5q1S1cGCZU3cm2YcnOcLc6J932O6
4CVG/Iu/B3H+5+38ICe6hQ11l92OyBjDfTFTmKgVfosNXx87umXJS9wv8beS
usvZbLjh+NhNbS7uI+uPpnZWOzlw4rvql80VuL/KjecGoDcHStVSj48l4b5T
tvren1rPgen9Z4SCQpqQX9j/8NRjQS4s0y/SuH4K96bicb+FgCNcaPtnITX7
RiPOmZUeJ4Z9ubCoSuKShy4ZOTu/yehwGRdGRU6Nj7wkITcy7+/R4XGhvVu0
UFB8DfKlAkwFfXECutXdXFMpVoU86dBX/YvqBHwQk/J+SWU58rXLhQ9qn170
zvuF9falyG+KBOi/9iWgVI9z3PXiIuQt2i8CEhMJWHOw9IT5xBP8PB/nua15
SsC1/oqKU7WPkGsyJCq6qwlozqxfQ6jfRx6oqEU5QybgWdqAiv41fO7yed2y
l0whILOzVk/0ZALyd1F2EUotBNwqe+jJ+FQo8uwWnyQtOgGh4uvA3DXe+JzQ
4SX9cdHrJx5vCKs5iHxn7Pgv90VfrXg5iVnvAf/zAroa7Fhcf9/c8aDd9neQ
W14N5C2lLj6fLVkHHHgxyA9aXSFXNRDQ8E3YWPO6JOSPvHdkidUS8H3VypDo
w+nIn1YIuU8+I6DnjmBR0Q85yG8VjkxaphDwW9r5stZ1T5AbD2cms/0J2Crd
wjbeVYR8WvZIqYkdAeXm91xZ6CtBrpK+0KOnRcDAszNTs17lyEVc6/SGpAi4
zWdtZBWzErkNnLOVHeNCnV2qJvyTNchZVZtkl1dwYXZooPgGKgn5K8NMPjuQ
C98Lzb2aEyIjTz/nrnxChwu/7RxvEnRvxPuJylE6KsSF9ySOnq2wpCD/UP4Y
HqJy4JXoDza+l5uQP+b1+qzw4cCzAr1/iyVQkfPm0ofj9nCgRNXF1ItZzcjX
arjIa/SyIeth/9bNDS3IhV3Oy78OZEPtt89JXzg05IOE8xcPBTbsfugtwGPR
kRdtyj3zPrYLflOq/Sr7qhV506X6DFkWC17gtScldTGwaxrovRFhQfVJ2nIv
UhtyMk/bwVilE0rGTMYElbYj3xVZWKNyrgO6j1RL+d5lIr8YZSzc6sGENnem
V436dyA/HuS1f3N8O5wtCtuSYtaJPOZAT2dxQRtU9l7bt1+GhVx3mn1L7BkD
Xr7TbPJjCnve4Zk19pWt0B9qkEQLu5APb8wt6cujQwu3QYaqOhu5xPbOMOlk
GhQ0lzdRTMKuHWH80eFuCxzpL2qdGMUeuO+HrpVHMyT5OPwtrslBXjGiFehv
T4WzdjGCViHYJ/QWasrMmuDkxa9XRRjY1bODNhrLU+CsxDj/4you8tSFMDpP
shE66EpYVhtinwpofpaSXw//1+mkWRKBXeyyiN4uLRJ08QkxDW3EviVslHno
SzUMFb13eNM09qz+unsCNyqhtt6Z109lCOQUM5sjinLl0MDynpbrEezp5g+d
YmRKoMH6Uy+3OWLPi2ebbVxZCGl9y/pGg7HHmVzQUTHMhxRVc9+36djnZrz1
Tm3KgRNuogVpz7Gfl5i7axWbCp/d3XNDvA77VfGSJpv2RGg33KI43Yi9T/d6
+guxaEjJJm3Jo2KPWP7D5d61IFhxOt7Mjob9gcHXTN0QJ3jFp8t58dyI50s9
dHbvBofF7xXfJ5zf3Nd5bNxkwB8YHcg7V/XbOiu3G/XxHSJBXFPdhz3N2NOM
tSXCryQCWwFWmi7E/n3yZ+et6FTAMLBIXPPbfYUO5gV/KsgEZgF+kvEV2EVU
aeVq6bkgWVdzpu8x9h/aZtffNjwFvkp5IZlx2Ntkpjo2hT8HKsXHvs17YSeH
WNey0kqBsNn4/pPW2G14F1NmZCpAlcK7bRIq2G2PeLidvloFNJx6MjJXYD8G
wjOFPtaA1bcZDo39+P3JTHesD7atA32muSNP8rFL7St6TkknA76rntLda9jl
bb7Wfl5oBIzV4YKbVbF7k5WVjmdQwG2vAVsrPp4LseWhp7UYTUB4z2D09ULs
GW6v/uqZpIJS2bWXpc5h9907xdKZawa7+VfOpK3BLlCcY/pGkgaCPBvD1ch4
fuceQN7Z9XTQYlk2f/YSdrZYuF7CmlYgXid8xEYc+7GdxXbTsgygmfj9RoAt
zpP5hqV3cle1gZvmPOvaTJw/3eoxnsOi7aDSMU63qBnn2K6nlFB7ASbofSuj
fHMc5571VCGFP8gEV7bO7JaWxJ7otz6ttaUDeI5+97GSx/nZHZTGXpnaCYYO
PmzPP4Lz9lpsmLPRGRYY2/6Ad9oG5/MfRcdVgnZ3gajN74f7TuM8P9XXLaPy
rgsYiWQ/THDE+X9w0F3vpwUbFKz6HH7FEvfF87itau8L2KAyzkKnzAz3yx+6
IEBzng0ins1fFzXBfbTHghM1YsQBiav3HZLci/tLrES8oTGZA45ty6gMksN9
N322y3B+iAPO52Wf0J7FvWmzKnzoxzYueEFar1ASA5H71X/9c8k5LtAeVXa9
YtWA/N0Ik7zlPhfQFvYlPhqvQ/7WWsu6lMkFXkxujMuDWuTbLQb/GfzOBXw5
i7Ff1tXI/VWZLe93EOC73lcBm4EK5NVvpEtMDQhQbt7R7BhShtyFMTCU5kKA
mvL9jQsfipHL6L1V+RlBALJS1s9/hwpw79MOTzdmEeCghb3Jt+15+JwgvSRC
sZQABjZmGkE/svB5aXxdpS+ZAHnWSU4HrJKRm2rJTik1EWAJfcA+TDUeuQWX
3+HXQgD3zXWtgbUhyANmNgyYL34npyVOCsuRvPA6//+/MemBlziPr9f4n/8f
yew2lw==
      "]], Line3DBox[CompressedData["
1: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
8sGg/j//P8vR8EQ=
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1: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
1E8hxw==
      "]], Line3DBox[CompressedData["
1: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
HJ/tvPb3//n/AfylrBg=
      "]], Line3DBox[CompressedData["
1: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
FwhILVzafeWeFe4jYG9+2JuATwoG6rkPR8F//cpssGyNBwFr5dftWDR5jjxV
ODg/xOX3c0WMyqX7piF/KvxZasiBgMUhoubXzmUj53Z01lWwIeD61ESDrPR8
5HHX6BQXAwImNLkP6/N8RK7JR3MtkSbg+6GMr1krFcgXBYqV/JfYsF/EtSiQ
Uo28K6LA6nEbG972z/fafL0e+Y11wuVST9lQ0LeS5OLcjLz33U8hfjs2NGgq
PqjM0Y7c4dq+4k2b2VCh+/Xz4akO5OWKuotXa1nwXITwUkpHF3ItjWo+6css
yPnu+1bDez3IJatv81wUZcFgSZeVB+59yHV2VLZwFDNhea5U+wWpL8hDU8sS
vh1nQr/cg24tDQPIlxQ2sbXIDKjVnfZc8v4Q8mX7PxgJXgxY8T5ZRmbPCPKG
dZLNhxh0yF0pQafSv+L3nKleauFIh4ZnN4TNNJDx7zNnU08M06ChqZLKvehR
5MXfEp7dNaFBDdf2+anTY8jv//DyLi2YhGYb9bbziY4j96YWNR2RmIRejtn+
S43Yd+pxvdx+eQJOk4rE1kdSkH97774xt4sKd9K5+Jw1qMhXvZBJrxOnwqxt
nIF3GNjXardPJ3pT4DgvUbL73gRy/dok+U3l4/BuWVehhcIk8h7d6XrnxTEY
HM0kgpuwW2X6BUnrjkHjv9dXz52hIRfYtjyn6TkKb/55I55vFvtR+Er/1N9k
WN1S1xRznY5c8Pu8nlDaV2gTXe5mu4JdqOD9/HHmMLwTIMc1EMZA/tKGre13
cAjujnwXunMGO//FK/xaaQNQSvu+PfkME3l49p64kP5+OLZO6YlnPfYyFZG9
vjJ9kMd6lnNWloVc5cJPtVTjHqjvS0muC8cuqFJX3Or2+z4le4Pk+7HLka5X
mr3pgIXBy59HJNnIMzrTqX7BbTBTW2Vl2hl7tma03+DXJnhbp2+zcDL2PIV8
s2iiDtoGu4ut6cP+tSv/kgBfNdSPjuJqX03gebgZyAg5VwH5zyYk7JPHrqdm
KdPQUgwthXlab5pg7/6R8/n0qTzo9dxxAdhiv754+bi3w1tIPeV/9pMj9u36
VWP3BVMhNaKl4pIr9vg2W5My1afQPZ72Lt0Te16ASwYpJgxGEZ1Cv8+NyJ88
5aI1mgeB70GaceT/+NDC1VB178eAsC8RV/LC3pw/aPquMgU8Dl0Axm7YuYv3
kOaaMwH78VK33nnsb3wXa6as84C4uqCm4X+e6wyjn0v70HuQk5uaqWOBXe5Y
voR6YilY3ryxep029nzHx+Z+RpXAuFUrtFcEu0DX8nmX7zVgba/7UecpvC6V
D6IkC+80AHGlG7vLP2Nv3OxwxoHUApgOK9D7DvZE3sFW85B2AJxJokVHsPso
v8276tYJDEaXLdauwi6hu6SadbAbLN6rFaHm4Xn784OLdxlHL4g5vlFazQG7
l5v3k2Nf+kCk4Z4b2zmwv37Ia3s9+gs4oPO9IOQFnn9a/BcxRbtBkJIR2W69
B3uLF/k5RXwYuCZ/UWovwfurdrLa371kBNC5J5fSjLEPV1zJL9QiA4WwvIqi
Crx/bXemeO/gGAUwf+ikgh52HsvVZ19WjIIri30RBsU4Hxz/uWXaFj0GlIus
FsN3YBd8WtBfbzIO3B9lBsxH4/xR6826rSRAAaURhdc/TeAcWxXks3irlgKi
GnbOm+tif+sgI6DnQwXThDQHNQHnYa/YmRuJ0hNgzMnMa24M5yqnGLdVctUE
GKmaz+dUw159ueqC4plJ4P7dobHtOs7n72tbvZ4sTYKO59ZVvqU455m+bqJX
7tLAfZKuZckK7oU1G3LSWyTooPyTZ4DVbuz+q4scVr+igx4+N51QEu6Xjbp9
U88lGEBY1TTsgi7uI31jEfuWRAYIurNPrjt8GPvgkM6UEBPotzwKdSAP4txW
3C+vEMYEEfv7a6w24H7sI1rL2mhMsJCw5kWCcT/ymybaEqmGLHDlltrHiYe9
yPeJNtq8SGIBIdKvj8EF3bj3PW5f82KxgGGLREXWVCfy/tzZjOm9bBC0ImVt
oYrPA6xAfvMSfzYQd2RaTUW3Ik+3ExMrzWaD5rg/y3RmGpGn2KW1ho6xgelb
j1fLq+vwPPi8ld27lgANq9SbKNJVyA+1mm7O2kMAC5O8Eo1f5ci3vrstxmVG
AL4gg/VM4Q/I150aMpo9S4Dub8HxK6a5yOdtpI/sJhHAWVNXm3v/a+R8ZKvr
xh4EOCeT0N9jk4RziUZhiP3+To6SdLBtOHUPnxP+/3/jRzXxtE2SDuX/+v8A
d2+PRw==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1: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
8sGg/j//P27xXdM=
      "]], Line3DBox[CompressedData["
1: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
DKQX
      "]]}, 
    {GrayLevel[0.4], Thickness[0.005], 
     StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
      FontColor->GrayLevel[0.4]]}, 
    {GrayLevel[0.4], Thickness[0.005], 
     StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
      FontColor->GrayLevel[0.4]]}, 
    {RGBColor[0, 0.6, 0.4], 
     Line3DBox[
      NCache[{{0, 0, 0}, {3^Rational[-1, 2], 0, 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        3^Rational[-1, 2], 0, 3^Rational[-1, 2]}, {
        0, 0, 3^Rational[-1, 2]}}, {{0, 0, 0}, {0.5773502691896258, 0, 0}, {
        0.5773502691896258, 0.5773502691896258, 0}, {0.5773502691896258, 
        0.5773502691896258, 0.5773502691896258}, {
        0.5773502691896258, 0, 0.5773502691896258}, {
        0, 0, 0.5773502691896258}}]], 
     Line3DBox[
      NCache[{{0, 0, 0}, {0, 3^Rational[-1, 2], 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 0}, {
        3^Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        0, 3^Rational[-1, 2], 3^Rational[-1, 2]}, {
        0, 0, 3^Rational[-1, 2]}}, {{0, 0, 0}, {0, 0.5773502691896258, 0}, {
        0.5773502691896258, 0.5773502691896258, 0}, {0.5773502691896258, 
        0.5773502691896258, 0.5773502691896258}, {
        0, 0.5773502691896258, 0.5773502691896258}, {
        0, 0, 0.5773502691896258}}]], 
     Line3DBox[
      NCache[{{3^Rational[-1, 2], 0, 0}, {
        3^Rational[-1, 2], 0, 3^Rational[-1, 2]}}, {{
        0.5773502691896258, 0, 0}, {
        0.5773502691896258, 0, 0.5773502691896258}}]], 
     Line3DBox[
      NCache[{{0, 3^Rational[-1, 2], 0}, {
        0, 3^Rational[-1, 2], 3^Rational[-1, 2]}}, {{
        0, 0.5773502691896258, 0}, {
        0, 0.5773502691896258, 0.5773502691896258}}]]}}},
  VQM`VisualizeVector`QCoordinateCube -> True,
  VQM`VisualizeVector`QCoordinateCircles -> False,
  VQM`VisualizeVector`QDrawUnitSphere -> 10,
  VQM`VisualizeVector`QDrawAxes -> {True, False, True},
  Axes->False,
  Boxed->False]], "Output",
 CellLabel->
  "Out[637]=",ExpressionUUID->"580b3be1-7816-4aa0-b273-691f79c05ee1"]
}, Open  ]],

Cell["A Density matrix can also be visualized as a vector.", "Text",ExpressionUUID->"7fcaa290-98c1-4c38-906b-a7e74dcefc5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dm", " ", "=", " ", 
  RowBox[{"QVectorToDensityMatrix", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", 
      RowBox[{"-", ".5"}], ",", "2"}], "}"}], "//", "QNormalize"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[638]:=",ExpressionUUID->"aa983cdb-c3ef-45bc-a930-2da3561ec018"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9364357804719847`", ",", 
     RowBox[{"0.2182178902359924`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.1091089451179962`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.2182178902359924`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.1091089451179962`", " ", "\[ImaginaryI]"}]}], ",", 
     "0.06356421952801522`"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[638]=",ExpressionUUID->"d6b29b8d-62ba-4453-a068-2638f0119f79"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
QVisualizeDensityMatrix[dm, QArrowShape->{6,1/3}, QLinePointSize->.01]\
\>", "Input",
 CellChangeTimes->{{3.3902337888867903`*^9, 3.3902338148488903`*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"643cefb3-fa3a-4176-8714-8428add6253a"],

Cell[BoxData[
 Graphics3DBox[{{
    {Thickness[0.01], 
     Line3DBox[{{0, 0, 0}, {0.4364357804719848, -0.2182178902359924, 
       0.8728715609439694}}]}, 
    {GrayLevel[1], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.2448916532729864, -0.2376096609073352, 
      0.5819143739626463}, {0.3375689608149961, -0.22636639754291904`, 
      0.5383865360327456}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.3375689608149961, -0.22636639754291904`, 
      0.5383865360327456}, {0.3836344945233329, -0.13423533012624542`, 
      0.5383865360327456}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.3836344945233329, -0.13423533012624542`, 
      0.5383865360327456}, {0.33702272068966005`, -0.05334752607398793, 
      0.5819143739626463}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.33702272068966005`, -0.05334752607398793, 
      0.5819143739626463}, {0.24434541314765035`, -0.06459078943840413, 
      0.6254422118925471}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.24434541314765035`, -0.06459078943840413, 
      0.6254422118925471}, {0.19827987943931352`, -0.15672185685507775`, 
      0.6254422118925471}}], 
     Polygon3DBox[{{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}, {0.19827987943931352`, -0.15672185685507775`, 
      0.6254422118925471}, {0.2448916532729864, -0.2376096609073352, 
      0.5819143739626463}}]}}, {
    {GrayLevel[0.5], Line3DBox[CompressedData["
1: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
tNr+NoxQqP/P/wcsXCSC
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1:eJxN2Gk8lOsbB3CKhFDG2nFaRaKNiIpbCi0kwqlISCtHkTCVhLJFWStbKqfI
ln3XjWHse7Mwy1MoWVLZHdu//4tz3+bzed58Xzz3zDPX9buumY32180uLuPh
4WH9vpb/vuYW//8igOAaR2XPsZM6qUanv90uGAIeebO6or9dXrXzsouMN/jP
CxQLxbXmCNAj/PP8A+knyEVyj47xTRFAamQor2DqGfJuK709MT8IsEWZ1cKz
+yXyBS2H+FYWAfg1fu4xFkxBvoPxZttIBQFCGo6/i8h7j/zxs/fpTnEE0DlV
bP59IRf5OufTpS9uEKBTOSGCYBQinxysNKZqESD6SooHfa4Uuc3P0Ni/Z7nA
3qLymePyCuRteb2ZZcVcwDgUVtbwuRK5l2iRrdU1LlC5ksFH6aUg56c9DkiX
4YLepnmNpA81yP/dkr0topIDHNgPeWUf1SKfbo63O2rFAcUBCV8CPOuRn3Gn
9CSNs4HVfO7rPJ1G5LcCdE1febEB76MB2YLNzcg5WxxKJHjZ4E39N9HJqRbk
PInjPxT8WeDbanL5U7M25PHX2N/DZrpBctqHeqG97cj3/xWe8u56N1gfI7uZ
b2UH8nBXly1rO7uAhJB5S9QX7I/VNY5ZqnYBjROXi8eKO5EbOGjO7nnKBPNc
tcJDdz4i171RtdrhKwMEthHKlwxpyNXe/vVG7wADeASaxGbw0JH/SZJ7tCKM
DowfFK3flo39cvuwwqFWGjCI+0so7RoD+eD3zSd4pGgg0WmHJp84E7mb6ULg
Y8OPgJnN8hyuwP7GhNxg49EJEiInJgcudiFX9Vb3cM/qAEG9mxXezGDnBpX/
aOtsB7xzfcozEd3I/ddkzF/hbQdWoSku9/9gIY9d03Rt5842sIszJCkQh/1I
rKpkfmgLEHVOMVBbx0ZO0m27nfGxCYgoPVTJC8eeXTi7rG+kAQTIu1YcEeAg
P1oyHOq7qR7cSw151/Q39ht2EmnaZ2rBlyZWsX0j9l9GF7v/uFAD1F2dIkWU
uMhdb9vqKwdRwKmE4Ch+MvbQrWwhc99KcKhJ1NSzFrvPq7ccCx4IqG8mjGVX
EcgLj8eK+WmVgm7VCYcnh7F3CFm6z8oWgpVGhnVkMvbY7YGOVftygXbcXiuB
JOxFkTViwrRMcMryjKtNNfbmtHcKOf5vwcq6U3Zan7Ab0OUr7f55DU5nrlHU
HcSuWLrj+bBPAtDM0jO3H8V+qrOsmSQeDdICdM6JzWDPlTE28D8YBByDlIR8
57FLDMm5Wp52AU4jSvV5i9iDgkvKSMnX4WzkQ7vKJZ7Mjr933C4AbpjSMOYs
uc/bHJpaiWMk9JuTql/7L3b2uo8VtKY4KD7Zf2pwDPtz8a+b+aRew/F2u6aA
oSX3P67/dKrnHdTVIsUuo2M/Jx0g0KGYDc8rxr+QKljyHAKuMbv08+Gyeh8e
0mPstmG0ZwIyxVAK+qmvtMNOfkBEt6iXw3cKsr10ReygM29yr18FLGe+Kk0a
xPUAyRM2EjZVUPIM76R9Mnbz2UoeG+tqmLPshpedJXY39RFqpBoVpgncZxgt
x57l8LRKX6UOihKU0d2vcN3mv9iysFOyAa4qHilo18S+PTPCtJ/eCDsYORNW
bbhf7M8feb+jsBm2C6bp3fwL++fp8HyFG63wDkWr5CGB+xEk7tjxOKQNSpX5
1ty8gD10n1Eg1bkdNlBdFjJouN+rkgQlo7U7IGdSPKDtGPbMHwnwk0wnVN8a
Z6WXgXPjS6jZXu6nTlgfq/FvBgn7rNX5Or2XH+H+pPYBNQ+cSxNPvUyvXqPB
5HsJGYK1ON8Ei5tEGzfSYc5Zm8liOewUaXHdwB46NErwNhs9h3PSf/Sc0IMY
BrR0098UFI/zVkri7iMPHSbU273VjdaD8/mn90IHe5AJHUYGb/0kYVcb/gFi
HnbBExp9IZXGOOcNF1u3mEl3Q7+EiW2j/nguTBTf7A3P7IbLenY/u5KK5wun
j19QQZ0FV5w0FdVj4nkkn8fnlg9Z8Ll2kf8o0Yq86e/XnD26bPjKoG+5uhie
a+flnLLUs9kw+E34rKtlE+7rD5JHleU5UMCxwXf6RgNyoSfS6TqBHCiknrRN
800d8giXJAa5lwOLi91D69lU5JoNi9KZOlz4q9ciOqS/GvmqjA2M8yFceDJ9
rxxVFM99bbcQ/ptMLgzv7M1SFsR7gnIN7UalNAEnZLYnbz30Aefthku8D04Q
8PHGZrE57xK8L1lT1mT6EBByesZ1HQrwXDtEsN6+I6DSA9cD8kE5eI6vuCPk
2kTAmYUQ8S/p6cgvZc29/PWFgEfeK2wjLv2DvAdu7Oob+X2uV0PGYiDeu/rd
yRumJwgoLTZw1sQ8BrmJ4Vqzh7MEzPLhlnZ+D8N9kXDCkrNAwIsWkf1nVvng
56DZrrKwSMB3uVFZRxP0kd+OE1BS/e29nNLF4Oy78D831Q1pfDRHwK6hsXKf
0lDk2aBsWniagOVVU7/0Hj9FPgiKhEm/CPjUeHw+vO8F8p8uoaHf+wm46kDq
+QvxScjH3qc/F2knoDk1q1XJJg15QiO5pPw9ARVFlxkmEtnIUytqt7v5E1Bf
auexoql85Merm83MThNQu+i+7AClGHneqxZVvnUEPHXSdPg+qxx5Pfcpbw/x
u37eFsRPd1QgDxdYnaYZxYU+AV+sVdhVyB8tVrtHHeTC9MDS8jJ6NfJu0u5x
6e8c2GhJ8tFJpSJP6RlyDQjiwHXhzAtiiXXIv9ImerZv4cBjcVoCD5wakPu1
/XNtqpQNxbmfrIq2NSH/soqy65geG/qotFfZCLQgF9KIVqHWs+DXi5+Em8pa
8bnEfeFcwILuN50clWvbkDvH9JSWZXVDW87o+k3J7cjnqeEp3+S7YaxuTlTF
zQ7kazVkVlj5d0G/h3+aVhp1Ik83GatbGGLC3umv/oHiH5EbHim05ZxgQos1
MaHlrdjpV1d7r3jBgBHBmjfintGQ609cWK09RodQwDCt2YiOPHf4nsqMGh3e
qWfdOSTMQH56srat8Q4Nauy7k29RiN1/kHJQpeojnCyP83U7y0Re+yyj3Gas
E64amFGb5utC7lh5WtVxeyeUjDsePZKAXeesmzE07YA9UVE5tQe6kfP/GoYS
t9qh0kq1Y1Ht2KMv10bPvG6DqzdHGLIsWMjzu4/evnerFd7a3Pd5ORe79c7n
25eXNcPZMnn+nZZs5IHJjjOArwka+loMW9dgj/Copratb4B14i7LXDU4yEWy
CaaFRR38cSA7rv45duPP9z71nKPC7SICFi6z2MkTVrFhV6uh6DKBViVzLvJq
3uvdM+FVsIDMYoYlYlfK5+V9HVoBvxJ3DcEA9vFbjKeSJuUwvXh+hZUCgXxG
dac7TakY1tvcE5e3xW6zWUNlcXU+pNNEDx8Lw/5SbMDKSCsbnvz2bYV3PvaI
xDsmTyRSYZ3DjmxbGnZr+w+Jg9qvoYlvz4zKEHYi52CebH08XKcjMio0hl3K
+edotkQ0jDe8nyQygz3dJtDd+XoQPCRgM+o5j302jhTpcdkFyiYX6//eG3Hu
xYy7Oac6AnP+MKW2JZ51fXV4UKA/KDzVuJNvAbuneIQXszgSyIV2TA0uOXeX
e8q/QjvigeVhP5XoJe+zy2xmwunAa6BwRsd+15LPdddLLifG9i1oP6uU/88n
7A1uDIqKVCZoyVU4t68Wu77C5K0/1XOBl/mlvTpJ2BcrBWWCSYXgqGbPpRoy
9iPbjVplukrAYclFWvVR7OqZKWa5Ax8Ad5eGna/Iku8x1aUqxLISkM2Uqt41
43pIEQtLX2VNAeSp+Jd772O/CDctMs1qAIz5cWpEGftIM5UnYVMt0HPok15J
x/V5xVWO35dUDyT1X4Qv3sA+o+e5QYbTACo39HdfFsYuc1rILbWmCQj/mvK6
G4375X1QYvLdhBYwQ6n0/CaL3fqJCL+MYhu4bbipj5KI+9HbQCvJWqQdTEgb
WM6TsAuqXKiT+dQOlHJKZwuDcb8biQl3+qR2AIfbx9d+n8e5wfbISdvt0wk8
BUOdzttgf2bda1Z++CNodncR20/BuXTBZO3B/SQaeBZ6gOQigT1RVZJ3P5MG
quRyg4ztcb59168fzwimg6FsqWRyAc5J+Cv43H4DBvhK6hLfOIlzlR3oczHg
BwOUG1zXWaeN/VLwAbmhJ0ywO3PdQLMvzufBw5LOIXu7QDBff/PRXJzzXFrW
ldrmLvCr9O8F5jCeC+RL8irwajdIcI3xy1iN/fIT2RLKeDcI+VMx7LEOni/q
+bZRRe4sEFczp3LfCc+jn5l+b9zmWGDN5KYNaSvx/GqYo1KtXNlAqiKC/Mqk
GTlV/3Oo+yAbSMxsiG+52oj8nsd1hvdpDjDyzXh97mE98oA+UzpPEQcccS/J
1Smtxbn3ds/7VGkuKJouH1KvrkE+ZbufS77KBdf5vRO2DFCQ92zayg7P4YJD
f9hFVovjfeCibJQ7fYYLrgqU38wXw/vDFvvMbaV7CJBClfQ7YlmGfF/P2Nge
JwJc6xdiHNxThPvo2/0phVgC7CXGnXnW5yGfYLnNni0nwFS/aave8Szk+71q
zymyCHBFhHK5STcF5961JyTxHwRIArPTa2++xPuVR+qJtEkCyEn5u613fo7r
rag5mn+OAGsni4WSvj1Brp1kbcf7+3fypYDnkkkD3sj/+7+RWr1nm+fYyQ//
+f8AfzRdPw==
      "]], Line3DBox[CompressedData["
1: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
F43pig==
      "]], Line3DBox[CompressedData["
1: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
/H84nBYy
      "]], Line3DBox[CompressedData["
1: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
/b/S9k5S
      "]], Line3DBox[CompressedData["
1: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
5D//H9jTU1Q=
      "]], Line3DBox[CompressedData["
1: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
OP/xP/8/GM3brQ==
      "]], Line3DBox[CompressedData["
1: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
HJ/tvPb3//n/AfylrBg=
      "]], Line3DBox[CompressedData["
1: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
cP7jf/5/u95JPA==
      "]], Line3DBox[CompressedData["
1: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
S/7z/wF788DU
      "]], Line3DBox[CompressedData["
1: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
/y92FrvS
      "]], Line3DBox[CompressedData["
1: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
/j/brYOy
      "]], Line3DBox[CompressedData["
1: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
up5XGQ==
      "]], Line3DBox[CompressedData["
1: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
+f8AIlTKvw==
      "]], Line3DBox[CompressedData["
1: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

      "]], Line3DBox[CompressedData["
1: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
tNr+NoxQqP/P/wfPbZIC
      "]]}, {
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{-1., 0, 0}, {1., 0, 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, -1., 0}, {0, 1., 0}}],
       FontColor->GrayLevel[0.4]]}, 
     {GrayLevel[0.4], Thickness[0.005], 
      StyleBox[Line3DBox[{{0, 0, -1.}, {0, 0, 1.}}],
       FontColor->GrayLevel[0.4]]}}, 
    {RGBColor[0, 0, 1], PointSize[0.02], Thickness[0.003], 
     Point3DBox[{0.4364357804719848, -0.2182178902359924, 
      0.8728715609439694}], Line3DBox[CompressedData["
1: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
      "]], 
     Line3DBox[CompressedData["
1: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

      "]]}}},
  VQM`VisualizeVector`QArrowShape -> NCache[{6, 
     Rational[1, 3]}, {6, 0.3333333333333333}],
  VQM`VisualizeVector`QLinePointSize -> 0.01,
  Axes->False,
  Boxed->False,
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellLabel->
  "Out[639]=",ExpressionUUID->"52ef19b3-4418-472a-ae71-a45653e9c2a4"]
}, Open  ]],

Cell[TextData[{
 "Options for ",
 StyleBox["QVisualize", "InlineInput"],
 StyleBox["Vector", "InlineInput"],
 ", etc."
}], "Text",ExpressionUUID->"3fce4af2-d374-4f27-81da-43d41f4ad5fd"],

Cell[TextData[{
 StyleBox["QDrawUnitSphere->", "InlineInput"],
 "n \t\tdraws the outline of the unit sphere by plotting n (default: 20) \
circles.\n",
 StyleBox["QDrawAxes->True", "InlineInput"],
 " \t\t\tor, for example, ",
 StyleBox["QDrawAxes->{True, False, True}", "InlineInput"],
 " adds gray coordinate axes.\n",
 StyleBox["QCoordinateCube->->True", "InlineInput"],
 " \t\tadds a green cube indicating the components of the vector (default: \
False).\n",
 StyleBox["QCoordinateCircles->True", "InlineInput"],
 " \t\tadds blue coordinate lines indicating the polar coordinates of the \
vector.\n",
 StyleBox["QHeadColor->QExtractPhase", "InlineInput"],
 "\tworks only with ",
 StyleBox["QVisualizeSpinor", "InlineInput"],
 ", see ",
 StyleBox["QSpinorToArrow", "InlineInput"],
 "\n",
 StyleBox["QHeadColor->color", "InlineInput"],
 "\t\t\tdraws the vector with the given color"
}], "Text",ExpressionUUID->"bbd25819-6d38-42ac-9419-c0692ac9c14a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{936, 1065},
WindowMargins->{{Automatic, 0}, {Automatic, 57}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification->1.,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (January 23, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info6183734519733-5841779"->{
  Cell[57822, 1946, 676, 14, 96, "Print",ExpressionUUID->"acfd1a4d-e831-439c-bcc6-953168467b7c",
   CellTags->"Info6183734519733-5841779"],
  Cell[58501, 1962, 521, 16, 25, "Print",ExpressionUUID->"aefb08e0-431f-4fe5-8130-8dee8e11021f",
   CellTags->"Info6183734519733-5841779"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info6183734519733-5841779", 505606, 10012}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 252, 6, 31, "Input",ExpressionUUID->"0d7e1d1a-a8d1-4c50-b39c-436a0ba7c00f"],
Cell[822, 30, 342, 8, 35, "Output",ExpressionUUID->"b3027253-115a-4d44-80a7-226bf8c5b764"]
}, Open  ]],
Cell[1179, 41, 252, 5, 69, "Program",ExpressionUUID->"4be8870a-a3bd-4214-b15b-6d11f6d61210"],
Cell[CellGroupData[{
Cell[1456, 50, 93, 0, 98, "Title",ExpressionUUID->"0a0c03bd-2c71-4ee1-9394-751627ff19f2"],
Cell[1552, 52, 162, 6, 124, "Subsubtitle",ExpressionUUID->"7634f8b2-07ec-4d1a-a225-3a91e82be12b"],
Cell[CellGroupData[{
Cell[1739, 62, 85, 0, 55, "Subsection",ExpressionUUID->"b5447cef-737a-4732-b30e-0cef49736323"],
Cell[1827, 64, 954, 19, 127, "Text",ExpressionUUID->"52a0d80e-3420-41cd-9ac4-235276f12f93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2818, 88, 86, 0, 68, "Section",ExpressionUUID->"bb5f607e-811c-4cd3-b99c-a7c083894bfc"],
Cell[2907, 90, 328, 5, 31, "Input",ExpressionUUID->"e6041aa1-7e88-4597-b55c-1969c0cdf946"],
Cell[3238, 97, 266, 5, 31, "Input",ExpressionUUID->"df2e9b1b-40f7-4601-85f8-913a54be41b0"],
Cell[3507, 104, 217, 6, 35, "Text",ExpressionUUID->"7a480ff4-c96f-42d0-bf76-5d8fefe7ed09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3761, 115, 79, 0, 68, "Section",ExpressionUUID->"50e88c4d-e232-419e-b26c-3358ec50a762"],
Cell[3843, 117, 938, 24, 58, "Text",ExpressionUUID->"913c2be6-219a-41da-af0c-beab2e10ed0c"],
Cell[CellGroupData[{
Cell[4806, 145, 111, 2, 31, "Input",ExpressionUUID->"da7706ec-6643-4bcd-ac4e-9c1b800719bf"],
Cell[4920, 149, 254, 8, 35, "Output",ExpressionUUID->"c1eaebad-d5ab-4b53-990e-21b5d64d7e8d"]
}, Open  ]],
Cell[5189, 160, 367, 8, 35, "Text",ExpressionUUID->"376bc828-166e-475b-aad9-a4ab16f507ab"],
Cell[5559, 170, 490, 14, 58, "Text",ExpressionUUID->"5cc3e2af-cc94-4584-9f30-4b822b7737a4"],
Cell[CellGroupData[{
Cell[6074, 188, 107, 2, 31, "Input",ExpressionUUID->"3e77ec9f-e02b-4c5c-bd5e-8e68ed16ca85"],
Cell[6184, 192, 437, 17, 57, "Output",ExpressionUUID->"722fe5ea-8f71-44d6-bf60-c1c39c9ec81f"]
}, Open  ]],
Cell[6636, 212, 317, 6, 58, "Text",ExpressionUUID->"608ae862-7587-4e2f-b40d-a11cce90fac3"],
Cell[6956, 220, 530, 13, 81, "Text",ExpressionUUID->"dc17c9a7-0c8f-47bf-b07a-99f7e8f29f62"],
Cell[CellGroupData[{
Cell[7511, 237, 142, 5, 50, "Input",ExpressionUUID->"8a00ad3f-c3e7-4d2e-b095-49ac19045bfd"],
Cell[7656, 244, 437, 17, 57, "Output",ExpressionUUID->"3143f9fc-f37e-4372-b371-e8716eb84e11"]
}, Open  ]],
Cell[8108, 264, 751, 17, 104, "Text",ExpressionUUID->"440c7b96-f668-4606-9b1d-f56c5bf1cf6b"],
Cell[CellGroupData[{
Cell[8884, 285, 139, 2, 31, "Input",ExpressionUUID->"dd101017-c663-4de7-8ec0-c9a8d5b17ef4"],
Cell[9026, 289, 249, 9, 57, "Output",ExpressionUUID->"15bda244-e95c-43c5-9a7e-0c1236e3489a"]
}, Open  ]],
Cell[9290, 301, 446, 8, 81, "Text",ExpressionUUID->"fdfa3b74-0ea3-4aaf-85bd-c70b28d51271"],
Cell[CellGroupData[{
Cell[9761, 313, 131, 2, 31, "Input",ExpressionUUID->"261b5ebc-801c-4791-b974-742d871f757f"],
Cell[9895, 317, 156, 4, 35, "Output",ExpressionUUID->"23f93d38-6b64-449a-8cf5-965a2975465e"]
}, Open  ]],
Cell[10066, 324, 284, 7, 35, "Text",ExpressionUUID->"9cc80d4c-5f68-4372-9250-4c9863721db4"],
Cell[CellGroupData[{
Cell[10375, 335, 193, 5, 31, "Input",ExpressionUUID->"30e709a0-5d6d-4b4a-9fd7-a65bd7d347b9"],
Cell[10571, 342, 200, 6, 53, "Output",ExpressionUUID->"f53a4af1-c186-4aad-9167-cb282172a608"]
}, Open  ]],
Cell[10786, 351, 283, 6, 58, "Text",ExpressionUUID->"584749ff-1ddb-49bb-bc1b-11993eb60b70"],
Cell[CellGroupData[{
Cell[11094, 361, 386, 11, 55, "Input",ExpressionUUID->"16c057e7-aa6a-43bd-a1fd-eaa78a713b50"],
Cell[11483, 374, 114, 2, 35, "Output",ExpressionUUID->"f8b0176b-f9ea-4452-88b9-cafe8129f884"]
}, Open  ]],
Cell[11612, 379, 416, 11, 58, "Text",ExpressionUUID->"12e8f613-e334-48f6-84ef-50196b6e3479"],
Cell[12031, 392, 303, 4, 58, "Text",ExpressionUUID->"ae608c06-31ab-476c-bf30-34bec13b87ae"],
Cell[CellGroupData[{
Cell[12359, 400, 124, 2, 31, "Input",ExpressionUUID->"18be9348-4611-4aee-8d46-043a4fa4580f"],
Cell[12486, 404, 714, 21, 222, "Output",ExpressionUUID->"03b70d1e-b617-44de-9555-c1eb5dd8864c"]
}, Open  ]],
Cell[13215, 428, 629, 15, 81, "Text",ExpressionUUID->"527a5b88-0e59-40da-8a49-57ed3995764f"],
Cell[CellGroupData[{
Cell[13869, 447, 160, 5, 50, "Input",ExpressionUUID->"11c35d57-cb27-4ae3-b815-c31809142711"],
Cell[14032, 454, 549, 15, 222, "Output",ExpressionUUID->"b3f6d691-9eba-4cf0-8397-51cd65b90aba"]
}, Open  ]],
Cell[14596, 472, 387, 7, 58, "Text",ExpressionUUID->"52a603e7-1785-469c-a903-37d925ec5b94"],
Cell[CellGroupData[{
Cell[15008, 483, 137, 2, 31, "Input",ExpressionUUID->"6759cda5-d0b7-4dcb-bbd9-3ecbe6d9d6b8"],
Cell[15148, 487, 341, 11, 54, "Output",ExpressionUUID->"ea677b83-c0da-4cee-9763-682c9a246b72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15526, 503, 147, 2, 31, "Input",ExpressionUUID->"10953743-19af-4fb8-b4ca-4ac80b122ef6"],
Cell[15676, 507, 189, 6, 41, "Output",ExpressionUUID->"679660aa-bb30-4448-982e-b45ced7404a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15902, 518, 145, 2, 31, "Input",ExpressionUUID->"aa6d4d3b-a22f-49d0-867d-59a827fc1035"],
Cell[16050, 522, 631, 19, 222, "Output",ExpressionUUID->"c4f30056-d87c-47c8-a5ca-c6c49770fb3c"]
}, Open  ]],
Cell[16696, 544, 112, 0, 35, "Text",ExpressionUUID->"80e07804-9801-4582-8b41-7cb5a5c71f0a"],
Cell[CellGroupData[{
Cell[16833, 548, 112, 2, 31, "Input",ExpressionUUID->"753d670d-0193-4081-ae97-43806f6c32eb"],
Cell[16948, 552, 122, 3, 38, "Output",ExpressionUUID->"4458c99f-7e4c-472e-b6ba-ecd790836331"]
}, Open  ]],
Cell[17085, 558, 164, 4, 35, "Text",ExpressionUUID->"7fbee2ce-bdae-4a22-88af-3fb85474fbae"],
Cell[CellGroupData[{
Cell[17274, 566, 118, 2, 31, "Input",ExpressionUUID->"734507fb-a90a-4a0c-9aca-ec79ae3507c1"],
Cell[17395, 570, 261, 9, 58, "Output",ExpressionUUID->"d47e6f38-172f-4ee8-bb80-5ab67f806b8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17693, 584, 107, 2, 31, "Input",ExpressionUUID->"fe46c062-4548-48c5-aacd-12a98207cc2d"],
Cell[17803, 588, 111, 2, 35, "Output",ExpressionUUID->"7e1b05f3-b1b7-4ffa-b49f-4fa9af9f0307"]
}, Open  ]],
Cell[17929, 593, 193, 4, 35, "Text",ExpressionUUID->"bd9afc9b-4d4c-4062-b9be-2eb63e5d928c"],
Cell[CellGroupData[{
Cell[18147, 601, 119, 2, 31, "Input",ExpressionUUID->"70e5d564-3fbd-4815-9961-5f16c9aaaf97"],
Cell[18269, 605, 276, 10, 64, "Output",ExpressionUUID->"ec1cfd7b-7de8-40b8-81e3-5257f1d9ce14"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18594, 621, 87, 0, 68, "Section",ExpressionUUID->"38709526-1acf-4d1a-8f9f-1874ba3b74ab"],
Cell[18684, 623, 504, 13, 81, "Text",ExpressionUUID->"edc63e7b-af01-40d9-8bb2-4d566ae58fcc"],
Cell[CellGroupData[{
Cell[19213, 640, 124, 2, 31, "Input",ExpressionUUID->"23eec854-a328-46f9-bc6c-83584e94377b"],
Cell[19340, 644, 728, 21, 65, "Output",ExpressionUUID->"0b32ec8a-1743-4e26-961c-00abcb4052dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20105, 670, 112, 2, 31, "Input",ExpressionUUID->"7541402f-655b-4644-9498-3ef95c0bfebc"],
Cell[20220, 674, 701, 24, 35, "Output",ExpressionUUID->"9ba6d647-4af6-41bb-aa2f-4502f7e8ed8c"]
}, Open  ]],
Cell[20936, 701, 800, 18, 104, "Text",ExpressionUUID->"7dc99561-3ff3-41e0-ab46-255112c14422"],
Cell[21739, 721, 130, 0, 35, "Text",ExpressionUUID->"3fd1f7f0-393f-483e-8713-af9d02632815"],
Cell[21872, 723, 151, 5, 50, "Input",ExpressionUUID->"c25e2d4a-5fae-4e62-9432-356c51bdd27a"],
Cell[CellGroupData[{
Cell[22048, 732, 206, 5, 31, "Input",ExpressionUUID->"a636d616-39a7-47f9-b39e-38e588f258d4"],
Cell[22257, 739, 411, 13, 35, "Output",ExpressionUUID->"6afff37b-dd1e-479b-8d54-1da3107da785"]
}, Open  ]],
Cell[22683, 755, 339, 8, 35, "Text",ExpressionUUID->"d53af9d1-7c3a-43bb-9375-9618b8086423"],
Cell[23025, 765, 181, 3, 35, "Text",ExpressionUUID->"76cb17ab-a6e8-47d2-ac38-11f098a98e5c"],
Cell[CellGroupData[{
Cell[23231, 772, 131, 2, 31, "Input",ExpressionUUID->"cb4fe5ad-bd7a-4d5f-8b8b-efea8de054a5"],
Cell[23365, 776, 656, 22, 54, "Output",ExpressionUUID->"17511b41-a9a6-4e92-bc45-45c8b6c3779b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24058, 803, 143, 3, 31, "Input",ExpressionUUID->"01d1bf75-f022-4de9-a9d5-c7d8db6d4b45"],
Cell[24204, 808, 1098, 34, 91, "Output",ExpressionUUID->"70db0540-35ce-491f-9cea-d39b0a5aecad"]
}, Open  ]],
Cell[25317, 845, 151, 2, 35, "Text",ExpressionUUID->"15528963-9b78-4902-9ae4-a8efb3d23316"],
Cell[CellGroupData[{
Cell[25493, 851, 139, 2, 31, "Input",ExpressionUUID->"ef5bdb92-1a88-49ba-bbc2-d2082dc58a29"],
Cell[25635, 855, 444, 14, 35, "Output",ExpressionUUID->"dd8dbf77-0b3f-4cdd-bcf2-60b99cf9709d"]
}, Open  ]],
Cell[26094, 872, 103, 0, 35, "Text",ExpressionUUID->"1e939c33-10eb-41fb-bf17-ddcc2539c013"],
Cell[CellGroupData[{
Cell[26222, 876, 136, 2, 31, "Input",ExpressionUUID->"75709916-0021-48af-ace5-047d9596c632"],
Cell[26361, 880, 411, 13, 35, "Output",ExpressionUUID->"669b92cc-6508-488a-a884-83e190f33194"]
}, Open  ]],
Cell[26787, 896, 120, 0, 35, "Text",ExpressionUUID->"65dfcefc-f6e8-4d2b-8929-dc8c9541b2c6"],
Cell[26910, 898, 168, 3, 35, "Text",ExpressionUUID->"233e9664-50d6-43cc-9372-fe30f465ff69"],
Cell[27081, 903, 215, 5, 35, "Text",ExpressionUUID->"e3fe1228-7ec5-465b-8562-1967363810bf"],
Cell[27299, 910, 211, 5, 35, "Text",ExpressionUUID->"fc24d4a3-a9f6-4e7f-b58d-5484655be719"],
Cell[CellGroupData[{
Cell[27535, 919, 255, 6, 31, "Input",ExpressionUUID->"012cdf7e-40ee-40f6-8b02-64627e59890f"],
Cell[27793, 927, 180, 4, 35, "Output",ExpressionUUID->"46d9dbb3-d410-4561-8779-5b033c4ec0aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28010, 936, 178, 4, 31, "Input",ExpressionUUID->"beac97bd-afbc-4117-a0ae-2c228a146d53"],
Cell[28191, 942, 169, 4, 35, "Output",ExpressionUUID->"ecd3ee5b-eb8a-4286-a966-1ed0ce50ad9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28397, 951, 175, 4, 31, "Input",ExpressionUUID->"210997a3-61e6-4816-871d-a02e9fa1cf61"],
Cell[28575, 957, 114, 2, 35, "Output",ExpressionUUID->"cc9ed06e-6093-4b40-bd91-ca4d781e0116"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28738, 965, 111, 0, 68, "Section",ExpressionUUID->"0beaaef5-7f64-4d84-9be5-bf24cd4122ad"],
Cell[28852, 967, 688, 20, 81, "Text",ExpressionUUID->"b5a9f735-0a90-4a6b-a686-c71d74b25538"],
Cell[29543, 989, 139, 2, 31, "Input",ExpressionUUID->"9f106155-776e-449a-a2d2-4eb165eef6a5"],
Cell[CellGroupData[{
Cell[29707, 995, 189, 5, 31, "Input",ExpressionUUID->"9dedaacd-e42e-4542-821f-4dacf5905ac1"],
Cell[29899, 1002, 2027, 66, 102, "Output",ExpressionUUID->"2e7c7e38-4539-4e97-9c41-92cacf78a934"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31963, 1073, 196, 5, 31, "Input",ExpressionUUID->"8a0e8a4e-a806-4410-a8e9-48dda8129208"],
Cell[32162, 1080, 114, 2, 35, "Output",ExpressionUUID->"d71471ab-8e9f-4918-9423-d2ec51fed3cc"]
}, Open  ]],
Cell[32291, 1085, 471, 12, 58, "Text",ExpressionUUID->"2995de42-8498-4750-b8f6-7f03bc15b773"],
Cell[CellGroupData[{
Cell[32787, 1101, 141, 2, 31, "Input",ExpressionUUID->"e4379f27-3bef-426b-95c2-185217d13e6d"],
Cell[32931, 1105, 111, 2, 35, "Output",ExpressionUUID->"a5bda28d-e70a-4dbc-8b03-0392c677f3d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33079, 1112, 143, 2, 31, "Input",ExpressionUUID->"8ebdfde9-1a87-401e-97bf-6480cc0210a7"],
Cell[33225, 1116, 111, 2, 35, "Output",ExpressionUUID->"7562ce30-b4fb-4367-8c4b-e1c9ea97c9ea"]
}, Open  ]],
Cell[33351, 1121, 262, 6, 35, "Text",ExpressionUUID->"103ffec4-177f-4071-94a8-a4e42e3eaced"],
Cell[33616, 1129, 337, 7, 58, "Text",ExpressionUUID->"1f8f639a-ffb2-412e-93c0-8afc44fcf068"],
Cell[CellGroupData[{
Cell[33978, 1140, 119, 2, 31, "Input",ExpressionUUID->"4ffa3585-5928-4486-920c-52401e089aa5"],
Cell[34100, 1144, 156, 4, 35, "Output",ExpressionUUID->"c053de2a-cb08-4993-acac-06c37e55afbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34293, 1153, 135, 2, 31, "Input",ExpressionUUID->"2afc50ab-e09b-4138-a08c-b7529ff9d129"],
Cell[34431, 1157, 168, 4, 35, "Output",ExpressionUUID->"e007558d-c84e-4cc8-9d7f-0c21495ddd36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34636, 1166, 136, 2, 31, "Input",ExpressionUUID->"a045d813-be63-49fb-8aec-38889896fa5a"],
Cell[34775, 1170, 168, 4, 35, "Output",ExpressionUUID->"16b83903-a874-4418-9d7a-77dbb38c83d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34980, 1179, 135, 2, 31, "Input",ExpressionUUID->"05af6871-b5fd-44e9-94e4-f544ff3c62ff"],
Cell[35118, 1183, 168, 4, 35, "Output",ExpressionUUID->"2aea734d-990c-4ed2-ab8c-eb9dbb48814c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35335, 1193, 93, 0, 68, "Section",ExpressionUUID->"5c67dbe7-385e-4862-913e-2ff34491b5ef"],
Cell[35431, 1195, 122, 0, 35, "Text",ExpressionUUID->"d7b68932-0fed-4c53-b61b-0edea1d83277"],
Cell[CellGroupData[{
Cell[35578, 1199, 121, 2, 31, "Input",ExpressionUUID->"6c56fe90-0c0c-440f-9b1d-aa57f6c34a25"],
Cell[35702, 1203, 272, 9, 53, "Output",ExpressionUUID->"91719400-edcd-4aed-a8fb-a0261c9a2292"]
}, Open  ]],
Cell[35989, 1215, 178, 3, 35, "Text",ExpressionUUID->"9311b78a-62d4-4998-834c-21dc7f73bbdd"],
Cell[CellGroupData[{
Cell[36192, 1222, 119, 2, 31, "Input",ExpressionUUID->"2edd5f5d-f885-4596-89b8-1b32cfda87d4"],
Cell[36314, 1226, 307, 10, 54, "Output",ExpressionUUID->"801d6035-a8ba-4a7a-95a4-7d808d995ab4"]
}, Open  ]],
Cell[36636, 1239, 116, 0, 35, "Text",ExpressionUUID->"74f1e7e6-fb14-4a3d-a135-c000cc653db3"],
Cell[CellGroupData[{
Cell[36777, 1243, 119, 2, 31, "Input",ExpressionUUID->"f79fbe61-7605-48a2-9d01-e0982b55c525"],
Cell[36899, 1247, 272, 9, 53, "Output",ExpressionUUID->"68662916-7c69-4380-b82e-36ea4e767533"]
}, Open  ]],
Cell[37186, 1259, 341, 10, 35, "Text",ExpressionUUID->"4055c9f0-6260-4bd5-afd6-79704e26cd03"],
Cell[CellGroupData[{
Cell[37552, 1273, 145, 2, 31, "Input",ExpressionUUID->"b8ffc471-d631-4570-966d-cf5d689b2556"],
Cell[37700, 1277, 114, 2, 35, "Output",ExpressionUUID->"075d9190-5e4a-432f-9f6e-a055cd722f0d"]
}, Open  ]],
Cell[37829, 1282, 211, 5, 35, "Text",ExpressionUUID->"96124e82-ec76-403b-a984-969d3f0ca7f2"],
Cell[38043, 1289, 369, 8, 104, "Text",ExpressionUUID->"2b0bca09-3870-4224-9ab6-02948712852c"],
Cell[38415, 1299, 157, 2, 35, "Text",ExpressionUUID->"a6d821a8-97b8-418f-880c-4d08987049aa"],
Cell[38575, 1303, 382, 8, 104, "Text",ExpressionUUID->"367012a9-018a-4f83-b219-c97047f04e1f"],
Cell[38960, 1313, 256, 8, 35, "Text",ExpressionUUID->"7ee46b0b-9fd9-45d2-9d5f-aafff2f6d439"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39253, 1326, 87, 0, 68, "Section",ExpressionUUID->"571a1e98-ddab-4711-b60f-3f7492e60acf"],
Cell[39343, 1328, 237, 3, 58, "Text",ExpressionUUID->"381e29d3-1309-4575-b30b-022d375008d8"],
Cell[CellGroupData[{
Cell[39605, 1335, 122, 2, 31, "Input",ExpressionUUID->"d7e45a57-b666-4977-9c4e-00067c3efbfc"],
Cell[39730, 1339, 307, 10, 54, "Output",ExpressionUUID->"9a391390-e1cb-4b40-a949-f6fb9a40d88f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40074, 1354, 120, 2, 31, "Input",ExpressionUUID->"87451acd-a511-41a0-b61f-5e8a2ecaf868"],
Cell[40197, 1358, 272, 9, 53, "Output",ExpressionUUID->"9b71245a-ef50-484a-964c-7d029fe8fbc3"]
}, Open  ]],
Cell[40484, 1370, 171, 3, 35, "Text",ExpressionUUID->"24541710-78c2-4069-9b61-287e3476ba8d"],
Cell[40658, 1375, 479, 11, 81, "Text",ExpressionUUID->"46ee60f2-8f7c-4f50-b2ee-4f60b46cfb59"],
Cell[CellGroupData[{
Cell[41162, 1390, 126, 2, 31, "Input",ExpressionUUID->"07b4f893-dcfc-4870-a377-2c31d20dc9cc"],
Cell[41291, 1394, 287, 10, 58, "Output",ExpressionUUID->"c8931101-a865-44c9-ad11-6674c1aca013"]
}, Open  ]],
Cell[41593, 1407, 122, 0, 35, "Text",ExpressionUUID->"b0128b5c-246a-4824-adbb-ace16034ac30"],
Cell[CellGroupData[{
Cell[41740, 1411, 126, 2, 31, "Input",ExpressionUUID->"8e158ea3-2cf8-4d73-88f9-d83d3bd06eef"],
Cell[41869, 1415, 210, 6, 53, "Output",ExpressionUUID->"31194658-4399-474d-b827-79635a7c0649"]
}, Open  ]],
Cell[42094, 1424, 242, 7, 35, "Text",ExpressionUUID->"bbd05c1a-bfff-4ac1-a602-4f7c96c277d2"],
Cell[CellGroupData[{
Cell[42361, 1435, 114, 2, 31, "Input",ExpressionUUID->"75d3de41-8e58-4b24-bf95-3514bed4c466"],
Cell[42478, 1439, 240, 8, 58, "Output",ExpressionUUID->"2a35d8bb-c2fe-4de7-af35-5f901c385a38"]
}, Open  ]],
Cell[42733, 1450, 211, 5, 35, "Text",ExpressionUUID->"ceb19f78-7780-44c6-b24b-f41ca2c29250"],
Cell[CellGroupData[{
Cell[42969, 1459, 123, 2, 31, "Input",ExpressionUUID->"02a9ea08-e04d-408c-8dd7-2c3e4ab452ed"],
Cell[43095, 1463, 153, 4, 50, "Output",ExpressionUUID->"c77e0255-874d-4944-b5e8-e37a1ee88a79"]
}, Open  ]],
Cell[43263, 1470, 244, 6, 35, "Text",ExpressionUUID->"7ad1d988-109e-4a5c-b923-42213a14d8a9"],
Cell[CellGroupData[{
Cell[43532, 1480, 124, 2, 31, "Input",ExpressionUUID->"213de24c-4929-4b16-a088-d701394caf3b"],
Cell[43659, 1484, 287, 10, 58, "Output",ExpressionUUID->"b13eb5a6-1003-42af-b6b4-d72fd2687aaf"]
}, Open  ]],
Cell[43961, 1497, 181, 3, 35, "Text",ExpressionUUID->"324aa201-3a11-4d36-b023-d9d9b0514f83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44179, 1505, 83, 0, 68, "Section",ExpressionUUID->"f6ed9647-6a97-444a-bb95-48019501ead6"],
Cell[44265, 1507, 736, 23, 81, "Text",ExpressionUUID->"a8827867-0522-43d5-ba92-7b18d9ff870e"],
Cell[45004, 1532, 83, 0, 35, "Text",ExpressionUUID->"e230af2d-4a0c-456e-aaec-19b046621af3"],
Cell[CellGroupData[{
Cell[45112, 1536, 136, 2, 31, "Input",ExpressionUUID->"5e1357f3-71cd-44a3-8e6f-b6f85c67c580"],
Cell[45251, 1540, 726, 22, 65, "Output",ExpressionUUID->"397155da-86c1-4268-a115-bb4b20d53525"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46014, 1567, 133, 2, 31, "Input",ExpressionUUID->"53d5c9e3-2467-4e0b-9657-a0b6727a1979"],
Cell[46150, 1571, 1722, 57, 121, "Output",ExpressionUUID->"f7b7f1f4-bebc-4f32-83a0-98808192ca56"]
}, Open  ]],
Cell[47887, 1631, 215, 3, 58, "Text",ExpressionUUID->"983305e5-dd13-4b08-88af-92c3246dde66"],
Cell[48105, 1636, 174, 5, 50, "Input",ExpressionUUID->"8eead72f-0506-4730-9d84-292c310f96fb"],
Cell[CellGroupData[{
Cell[48304, 1645, 153, 2, 31, "Input",ExpressionUUID->"d1b2dffc-fc4a-4a7d-bce6-7a1faa4baf65"],
Cell[48460, 1649, 1099, 34, 54, "Output",ExpressionUUID->"5c430267-fd1f-4371-8b5a-d8b47af94415"]
}, Open  ]],
Cell[49574, 1686, 112, 0, 35, "Text",ExpressionUUID->"57482c70-22c8-4b4d-8cb5-ded6de39258b"],
Cell[CellGroupData[{
Cell[49711, 1690, 204, 5, 31, "Input",ExpressionUUID->"316aba18-c74c-408a-a414-7265e6ac9954"],
Cell[49918, 1697, 1080, 34, 54, "Output",ExpressionUUID->"ba177a45-405f-46c7-805a-bd96f2a67f24"]
}, Open  ]],
Cell[51013, 1734, 210, 3, 58, "Text",ExpressionUUID->"f887189f-27cc-460a-8ea5-35026e83b0db"],
Cell[CellGroupData[{
Cell[51248, 1741, 266, 7, 88, "Input",ExpressionUUID->"7b732964-c3be-4704-ae33-aff1dc211803"],
Cell[51517, 1750, 114, 2, 35, "Output",ExpressionUUID->"bc024e1e-4038-4a41-af9c-b687c9f9cd5c"]
}, Open  ]],
Cell[51646, 1755, 163, 3, 35, "Text",ExpressionUUID->"bad6c460-d16b-4e4b-8e44-b34446ad03b0"],
Cell[51812, 1760, 176, 6, 69, "Input",ExpressionUUID->"e4d2b0e0-363c-4bf8-839c-1f584d3626e1"],
Cell[CellGroupData[{
Cell[52013, 1770, 170, 4, 31, "Input",ExpressionUUID->"891b40b9-547b-4788-a342-8a9dac41c11e"],
Cell[52186, 1776, 114, 2, 35, "Output",ExpressionUUID->"c788bc04-6bd5-4d20-bfdd-07eb3157b4c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52337, 1783, 209, 5, 31, "Input",ExpressionUUID->"b1000622-aeea-424f-b7d9-35d11ffb5630"],
Cell[52549, 1790, 114, 2, 35, "Output",ExpressionUUID->"4528f832-ccfe-4ed6-860c-dac7f209ab6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52700, 1797, 123, 2, 31, "Input",ExpressionUUID->"f0982a92-9224-45ed-8184-1e01dc82d97f"],
Cell[52826, 1801, 124, 2, 35, "Output",ExpressionUUID->"959e7eff-986a-47c7-8e17-76e52341292a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52987, 1808, 217, 4, 31, "Input",ExpressionUUID->"2f1f9658-4b37-44f3-9ed4-ea454b8034e0"],
Cell[53207, 1814, 3740, 97, 59, "Output",ExpressionUUID->"97b52db2-4f4c-48e2-9208-327fda1146b0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56996, 1917, 87, 0, 68, "Section",ExpressionUUID->"8a7e1a71-9a11-4739-8500-938267be4570"],
Cell[CellGroupData[{
Cell[57108, 1921, 160, 3, 31, "Input",ExpressionUUID->"fe03c456-f264-48cd-88a5-b3d680b527ce"],
Cell[57271, 1926, 119, 2, 35, "Output",ExpressionUUID->"83aebfea-08c3-4653-8e5b-5f232be2af22"]
}, Open  ]],
Cell[57405, 1931, 170, 3, 35, "Text",ExpressionUUID->"b8ab646d-5967-40ef-a2ba-649928d754b6"],
Cell[CellGroupData[{
Cell[57600, 1938, 197, 4, 31, "Input",ExpressionUUID->"a50fc522-2a6b-4958-b463-9dac44e7caf1"],
Cell[CellGroupData[{
Cell[57822, 1946, 676, 14, 96, "Print",ExpressionUUID->"acfd1a4d-e831-439c-bcc6-953168467b7c",
 CellTags->"Info6183734519733-5841779"],
Cell[58501, 1962, 521, 16, 25, "Print",ExpressionUUID->"aefb08e0-431f-4fe5-8130-8dee8e11021f",
 CellTags->"Info6183734519733-5841779"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59071, 1984, 497, 11, 31, "Input",ExpressionUUID->"1193572c-242e-4704-ad97-7d596b7d54b2"],
Cell[59571, 1997, 5390, 97, 327, "Output",ExpressionUUID->"f5cc922a-6f02-45c1-935a-6bae29c4a7d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64998, 2099, 751, 18, 31, "Input",ExpressionUUID->"7c23333a-592d-48a7-afb7-ab3eca88a2aa"],
Cell[65752, 2119, 2340, 50, 407, "Output",ExpressionUUID->"6d1480f4-dbc0-420c-8067-2c6bddbc21fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68129, 2174, 271, 5, 31, "Input",ExpressionUUID->"36539d0b-0661-4b60-883a-079752f6281b"],
Cell[68403, 2181, 3416, 70, 335, "Output",ExpressionUUID->"d81772e4-ded3-4f2b-b8f4-47c58b56c554"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71856, 2256, 697, 13, 31, "Input",ExpressionUUID->"0759c71e-61bf-429c-9ad5-e652de21ffac"],
Cell[72556, 2271, 2257, 47, 193, "Output",ExpressionUUID->"ec966539-98da-44ae-b422-63e796aa93a5"]
}, Open  ]],
Cell[74828, 2321, 431, 9, 81, "Text",ExpressionUUID->"cc5463da-2ef7-4ad1-9f46-5c2dd99d0932"],
Cell[75262, 2332, 313, 7, 58, "Text",ExpressionUUID->"a4332a94-0860-495e-b81c-a65d65dc2878"],
Cell[CellGroupData[{
Cell[75600, 2343, 156, 3, 31, "Input",ExpressionUUID->"a149c0c7-7e9c-4dc7-958e-db0b7c691596"],
Cell[75759, 2348, 3740, 97, 59, "Output",ExpressionUUID->"03afc570-1e03-41f5-b011-173cb0c8c5d2"]
}, Open  ]],
Cell[79514, 2448, 461, 9, 81, "Text",ExpressionUUID->"08a80458-bdff-4eef-acd5-efe961cc60fc"],
Cell[79978, 2459, 270, 5, 35, "Text",ExpressionUUID->"afafcf86-5226-4b09-8864-80f0d5912e07"],
Cell[80251, 2466, 867, 38, 58, "Text",ExpressionUUID->"7281e2b6-c30d-4ea7-8278-6f86df55b050"],
Cell[81121, 2506, 290, 9, 35, "Text",ExpressionUUID->"51a56148-fc43-4008-917c-4358f10d10a3"],
Cell[81414, 2517, 310, 7, 35, "Text",ExpressionUUID->"1be72a74-3ae4-4bb6-a32e-15bbcb029eee"],
Cell[81727, 2526, 383, 12, 35, "Text",ExpressionUUID->"dab1984c-c8ea-417a-970c-5f63d05aec2b"],
Cell[82113, 2540, 595, 14, 81, "Text",ExpressionUUID->"39356d40-789b-42de-a855-ca464583343c"],
Cell[82711, 2556, 94, 0, 35, "Text",ExpressionUUID->"837e6dfb-e964-49fe-91ef-92e1687c2639"],
Cell[CellGroupData[{
Cell[82830, 2560, 410, 10, 88, "Input",ExpressionUUID->"a739e3bd-79c5-4ef0-8443-409d5c7d32bd"],
Cell[83243, 2572, 7387, 131, 408, "Output",ExpressionUUID->"25d75f09-ef5f-4d45-ba44-a3a87ae61d03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90667, 2708, 207, 4, 31, "Input",ExpressionUUID->"042e786d-2f2e-47ee-900f-b05e94588e50"],
Cell[90877, 2714, 2867, 54, 734, "Output",ExpressionUUID->"dc80b43c-49d6-457d-834a-18c9bc22ecc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93781, 2773, 2954, 58, 563, "Input",ExpressionUUID->"e5013eb2-4f95-4fa0-92c8-a3e45a5b9baa"],
Cell[96738, 2833, 7410, 132, 408, "Output",ExpressionUUID->"2ba2c05c-a8e2-4c28-b168-53c9419b90b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104185, 2970, 267, 5, 31, "Input",ExpressionUUID->"cc1cd452-b2ae-4efb-8ee8-4b62bc018401"],
Cell[104455, 2977, 3740, 97, 59, "Output",ExpressionUUID->"adef04bc-f39c-47c6-a41c-f8d00f3cf4aa"]
}, Open  ]],
Cell[108210, 3077, 175, 3, 31, "Input",ExpressionUUID->"1a954d50-3f96-4f18-b32f-f94ad88c814e"],
Cell[CellGroupData[{
Cell[108410, 3084, 960, 20, 88, "Input",ExpressionUUID->"20c758b7-23e0-440b-9c5c-1143a3c08a37"],
Cell[109373, 3106, 7386, 131, 408, "Output",ExpressionUUID->"fb4fa318-c250-481c-9156-eb784773ad3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116796, 3242, 222, 4, 31, "Input",ExpressionUUID->"f17bb107-a18b-40a7-820c-69c4b2eaaba8"],
Cell[117021, 3248, 3740, 97, 59, "Output",ExpressionUUID->"9eb3caeb-2ac5-43c7-926e-147b55273679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120798, 3350, 787, 18, 88, "Input",ExpressionUUID->"2faf96fa-365d-489e-b3ef-09497f7c8dd5"],
Cell[121588, 3370, 7391, 131, 408, "Output",ExpressionUUID->"07a0fb1e-71fe-4125-a1cc-0edeb82a2d06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129016, 3506, 627, 16, 48, "Input",ExpressionUUID->"ea7f43f0-7870-47a1-95f8-78f1ffaac832"],
Cell[129646, 3524, 2278, 48, 193, "Output",ExpressionUUID->"569d61ca-4773-4637-8643-16aa5ad4ae4e"]
}, Open  ]],
Cell[131939, 3575, 482, 10, 81, "Text",ExpressionUUID->"27848b9a-88a7-40e4-b1b9-4336ffacd314"],
Cell[CellGroupData[{
Cell[132446, 3589, 158, 3, 31, "Input",ExpressionUUID->"b4a6e141-63aa-4220-97c2-e30f9b81de69"],
Cell[132607, 3594, 5653, 145, 105, "Output",ExpressionUUID->"9b69701d-dc38-4a8b-aaa6-3bed778ef4e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138297, 3744, 226, 4, 31, "Input",ExpressionUUID->"c14f8d10-c667-4da7-9ab0-62c24a8c62b0"],
Cell[138526, 3750, 5652, 145, 105, "Output",ExpressionUUID->"556f937b-8952-4751-ba6d-112dd3019e4e"]
}, Open  ]],
Cell[144193, 3898, 283, 5, 58, "Text",ExpressionUUID->"799aaf3c-ec3a-413a-86f5-35209cb0635f"],
Cell[CellGroupData[{
Cell[144501, 3907, 702, 10, 31, "Input",ExpressionUUID->"8ac3f506-de07-47b5-b283-24688b7713c0"],
Cell[145206, 3919, 103930, 1740, 408, "Output",ExpressionUUID->"9c7da56d-5137-4da7-bf09-08c613bb8d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249173, 5664, 240, 5, 31, "Input",ExpressionUUID->"1afbc497-861c-4990-88a2-6c8f5c3fc349"],
Cell[249416, 5671, 100578, 1676, 408, "Output",ExpressionUUID->"832f733f-8a35-496a-8843-a66890c191fc"]
}, Open  ]],
Cell[350009, 7350, 124, 0, 35, "Text",ExpressionUUID->"0e5ce316-ea46-4aa8-a635-a9e396c6c5e6"],
Cell[CellGroupData[{
Cell[350158, 7354, 310, 7, 31, "Input",ExpressionUUID->"e5af808f-7d3f-4a56-a57c-675e875056b0"],
Cell[350471, 7363, 55557, 940, 408, "Output",ExpressionUUID->"580b3be1-7816-4aa0-b273-691f79c05ee1"]
}, Open  ]],
Cell[406043, 8306, 123, 0, 35, "Text",ExpressionUUID->"7fcaa290-98c1-4c38-906b-a7e74dcefc5b"],
Cell[CellGroupData[{
Cell[406191, 8310, 315, 9, 31, "Input",ExpressionUUID->"aa983cdb-c3ef-45bc-a930-2da3561ec018"],
Cell[406509, 8321, 539, 13, 35, "Output",ExpressionUUID->"d6b29b8d-62ba-4453-a068-2638f0119f79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407085, 8339, 248, 5, 31, "Input",ExpressionUUID->"643cefb3-fa3a-4176-8714-8428add6253a"],
Cell[407336, 8346, 96668, 1617, 408, "Output",ExpressionUUID->"52ef19b3-4418-472a-ae71-a45653e9c2a4"]
}, Open  ]],
Cell[504019, 9966, 185, 5, 35, "Text",ExpressionUUID->"3fce4af2-d374-4f27-81da-43d41f4ad5fd"],
Cell[504207, 9973, 949, 22, 150, "Text",ExpressionUUID->"bbd25819-6d38-42ac-9419-c0692ac9c14a"]
}, Open  ]]
}, Open  ]]
}
]
*)

