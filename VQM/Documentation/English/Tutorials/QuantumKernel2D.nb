(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     37677,        894]
NotebookOptionsPosition[     26347,        738]
NotebookOutlinePosition[     26783,        755]
CellTagsIndexPosition[     26740,        752]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Numerical solution of the 2D Schr\[ODoubleDot]dinger equation", "Title",ExpressionUUID->"828cf8df-c59f-4cd0-ae63-5222172d5b1f"],

Cell["Bernd Thaller", "Subsubtitle",ExpressionUUID->"59255906-777f-42f8-9467-e8eb6191779c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$starttime", "=", 
   RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"$Version", ",", 
   RowBox[{"Date", "[", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.392472511078817*^9, 3.392472526374078*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"1e13a822-3338-4df6-ae70-5bd453aeda9d"],

Cell[CellGroupData[{

Cell["Preparations", "Section",ExpressionUUID->"1d74a6a2-c2c2-4d76-8348-7faef8bf5a6e"],

Cell["\<\
For the numerical calculation we need the external application \
\"QuantumKernel\":\
\>", "Text",ExpressionUUID->"aae016de-2c8e-4f09-9515-81befc852666"],

Cell["Needs[\"VQM`QuantumKernel`\"]", "Input",
 CellChangeTimes->{{3.3917591140531864`*^9, 3.391759119383085*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"05514f8e-3fcd-4290-805a-1493beba32af"],

Cell["\<\
For the graphical representation of the complex-valued wave function in two \
dimensions we use the package \"ComplexPlot\".\
\>", "Text",ExpressionUUID->"111f281b-e174-4682-83b9-0f024fc55eff"],

Cell["Needs[\"VQM`ComplexPlot`\"]", "Input",
 CellChangeTimes->{{3.391759131168256*^9, 3.391759133997322*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"744b4e17-637f-4721-99c4-92b8e77ba1e3"],

Cell["\<\
The following command helps us get rid of unwanted error messages:\
\>", "Text",ExpressionUUID->"a0c0b132-2e33-4d57-aa17-8ec07cc3f3a5"],

Cell["Off[Arg::indet];", "Text",
 CellLabel->
  "In[174]:=",ExpressionUUID->"d1901ba3-2b3b-401f-87f1-7130278081c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The initial function", "Section",ExpressionUUID->"15a39576-29bf-4b8a-8c79-fc0ac0cc6531"],

Cell[CellGroupData[{

Cell["Definition of a Gaussian function", "Subsection",ExpressionUUID->"fb39a045-af64-4d68-9dd3-0f7d7122a866"],

Cell["\<\
Our initial function will be a Gaussian wave packet. There are several \
parameters describing the physical properties of the initial state:\
\>", "Text",ExpressionUUID->"2da13dad-4b41-49b7-b3e4-722c416f8be3"],

Cell["\<\
pos = {-3.,-3.};    (* average position at t=0 *)
mom = {4.,4.};      (* average momentum *)
a = 1.;             (* parameter for uncertainty in position space *)\
\>", "Input",
 CellChangeTimes->{3.3917591779650745`*^9},
 CellLabel->
  "In[157]:=",ExpressionUUID->"3c402901-5c3d-45e8-b698-a4b1f0c10c12"],

Cell["We define the Gaussian function as", "Text",ExpressionUUID->"f1804b30-2152-46a7-864a-e483850c18f9"],

Cell["\<\
Gauss[x0_,y0_,kx_,ky_,a_] := Compile @@ 
   {{x,y}, Simplify[(a/Pi)^(1/2) Exp[I(kx x+ky y)]*
          Exp[-a ((x-x0)^2+(y-y0)^2)/2]]};\
\>", "Input",
 CellLabel->
  "In[160]:=",ExpressionUUID->"4e1180ec-244c-400c-addf-6be82254b5f4"],

Cell["and obtain a compiled version just by calling", "Text",ExpressionUUID->"220007b3-a77a-4614-8646-4c4c98b933eb"],

Cell["f=Gauss[pos[[1]], pos[[2]] ,mom[[1]], mom[[2]], 1];", "Input",
 CellChangeTimes->{{3.3917592012228117`*^9, 3.391759214070836*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"aaf2408f-c284-4f6c-b732-662a1105315d"],

Cell["\<\
Next, we produce a table of complex values, representing the initial function \
through the values at a grid of space points. The grid is a rectangular array \
of points defined by\
\>", "Text",ExpressionUUID->"f5fd4c0f-c8cb-428b-a19c-3b7fba06df74"],

Cell["\<\
numleft  = {-7.,-7.}; (* lower left corner *)
numright = {7.,7.};   (* upper right corner *)
dx = 0.14;            (* step size *)\
\>", "Input",
 CellLabel->
  "In[162]:=",ExpressionUUID->"eac82bc8-dfaf-4636-bd7f-b7319d000841"],

Cell["\<\
The following command calculates the matrix of values. Note the order in \
which the x- and y-arguments are calculated:\
\>", "Text",ExpressionUUID->"caff783e-baf2-40be-a387-28b44041fdba"],

Cell["\<\
psi0 = Table[f[x,y],
   {y,numleft[[2]]+dx/2,numright[[2]]-dx/2,dx},
   {x,numleft[[1]]+dx/2,numright[[1]]-dx/2,dx}];
   Clear[f] (* otherwise the f will stay around *)\
\>", "Input",
 CellLabel->
  "In[165]:=",ExpressionUUID->"ec0332d3-6b66-4509-a8df-b020f19a4057"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot of the initial function", "Subsection",ExpressionUUID->"f51e1c4c-1415-487b-bcfc-286d8792b056"],

Cell["\<\
We can make this array visible using the package ComplexPlot:\
\>", "Text",ExpressionUUID->"7708e8d0-9d17-4b47-80b9-3bf8cd765785"],

Cell[BoxData[
 RowBox[{"QListComplexDensityPlot", "[", 
  RowBox[{"psi0", ",", 
   RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"QSphereRadius", "\[Rule]", 
    FractionBox["1", "3.`"]}]}], "]"}]], "Input",
 CellLabel->
  "In[167]:=",ExpressionUUID->"0a8bc1d3-f581-40f8-b928-acb0afc8d8e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Passing values to QuantumKernel", "Subsection",ExpressionUUID->"11a4128d-466c-47a0-89cf-5c816bf0b413"],

Cell[TextData[{
 "The next step is the initialization: The package QuantumKernel provides the \
command QNewFunction for the purpose of passing values from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to the external routines. "
}], "Text",ExpressionUUID->"23dee349-c3ae-446a-899c-17044e1c53c2"],

Cell["psi = QNewFunction[Re[psi0], Im[psi0]]", "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"92d5117a-284b-435a-a0d6-a289e72013f0"],

Cell["\<\
The array of values which represents the initial function is passed to the \
\"QuantumKernel\". The quantum kernel returns a \"function object\" which is \
referred to as psi.\
\>", "Text",ExpressionUUID->"771ddc7d-e40f-4f48-8358-2f41504b01d5"],

Cell[TextData[{
 StyleBox["Attention",
  FontWeight->"Bold"],
 ": Only numerical values can be sent to QuantumKernel. You have to be sure \
that psi0 contains only numerical values (no integers or symbolic \
expressions)."
}], "Text",ExpressionUUID->"752c173d-77b7-4be1-8343-e2cc3ed8e0f5"],

Cell["\<\
Note: The result of the numerical calculation will be stored in the same \
function object \"psi\". Whenever we want to repeat the calculation, we have \
to reissue the command above.\
\>", "Text",ExpressionUUID->"c3eeef97-753a-41cb-9fdf-d615aa6d18b9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumKernel commands for function objects", "Section",ExpressionUUID->"963bafd8-e15e-4290-8a21-542e5b3f1716"],

Cell[CellGroupData[{

Cell[TextData[{
 "Some ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " commands provided by QuantumKernel"
}], "Subsection",ExpressionUUID->"2d68e32c-6783-465b-a098-62e72c45dc26"],

Cell["", "Text",ExpressionUUID->"a60ea02f-0663-4515-862a-037b8903ef88"],

Cell["QNewFunction[arrays]", "Program",
 Evaluatable->False,ExpressionUUID->"a7b74012-5166-4be4-8313-e908eeb9bea2"],

Cell["\<\
Generates a function object in QuantumKernel by passing the values from one \
or several arrays of real numbers.QuantumKernel returns a reference to the \
function object to Mathematica. Here every array is a one-, two-, or \
three-dimensional table of real numbers.
\
\>", "Text",ExpressionUUID->"7d792e7d-1675-40a3-93a5-37a7093e9f2a"],

Cell["QDisposeFunction[ref_]", "Program",
 Evaluatable->False,ExpressionUUID->"8e3a2cf0-564f-4344-96b6-85664f381909"],

Cell["\<\
Disposes the numerical data contained in the function object which is \
referred to as 'ref'.
\
\>", "Text",ExpressionUUID->"549929cd-b7e8-4e09-a073-f76f30ddfe22"],

Cell["QGetFunctionInfo[ref_]", "Program",
 Evaluatable->False,ExpressionUUID->"cd1d29b7-13f4-424c-8962-89d799a177fa"],

Cell["\<\
Get information about the function object with reference 'ref'.
\
\>", "Text",ExpressionUUID->"d41e40b8-d63c-47af-94eb-5febc80a4e81"],

Cell["QGetArray[ref_]", "Program",
 Evaluatable->False,ExpressionUUID->"f232fab2-4aee-4826-91b8-c34d531091f7"],

Cell[TextData[{
 "Transfers the numerical data contained in the function object 'ref' from \
QuantumKernel to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".\n"
}], "Text",ExpressionUUID->"ebdd8715-c3b6-4bf7-8014-bf895c2b1114"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples:", "Subsection",ExpressionUUID->"908114d6-6d23-45f1-a5e9-6856bd7651bc"],

Cell["\<\
Above, we have defined the function object psi, using QNewFunction. This says \
that psi is a function object consisting of two arrays of 100x100  numerical \
data:\
\>", "Text",ExpressionUUID->"68b9a6c5-5b9b-4538-9174-1fbd11dc041b"],

Cell["QGetFunctionInfo[psi]", "Input",
 CellLabel->
  "In[169]:=",ExpressionUUID->"24287a1d-2f21-436c-b9f7-3a68ca442d22"],

Cell[TextData[{
 "This gives the numerical values stored in psi back to ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"]
}], "Text",ExpressionUUID->"67d3dd40-54d1-46fe-a268-174a32159b00"],

Cell["psi1=QGetArray[psi];", "Input",
 CellChangeTimes->{3.733737649474394*^9, 3.733763713563529*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"7698cfa2-9b52-436c-b7aa-208f1d647fc3"],

Cell["\<\
psi1 is now a list of two arrays. We can make a single complex array out of \
these values:\
\>", "Text",ExpressionUUID->"b4173acb-debc-4c37-9c64-c5d09517dc5c"],

Cell["psi2 = psi1[[1]] + I psi1[[2]];", "Input",
 CellLabel->
  "In[171]:=",ExpressionUUID->"1b1bed34-ce44-4b28-ad99-498179f2e570"],

Cell["\<\
Apart from numerical (finite precision) errors, psi2 is identical with psi0. \
Within QuantumKernel, the numerical values are stored with single precision. \
We can check this as follows.\
\>", "Text",ExpressionUUID->"1e9762a4-f7c2-40a3-9ab2-6e8b07a3e495"],

Cell["Max[Abs[(psi2 - psi0)]]", "Input",
 CellLabel->
  "In[172]:=",ExpressionUUID->"0353c38c-d53d-4885-84ae-8396ddfdedf7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The potential", "Section",ExpressionUUID->"74b7e7d6-4cbc-4874-8551-545342ba0f90"],

Cell["\<\
The potential, like the wave function, is passed to quantum kernel as a table \
of complex numerical values. For our example, we choose a smooth potential \
barrier along the main diagonal of the square region. The height of the \
barrier is determined from the kinetic energy of the wave packet.\
\>", "Text",ExpressionUUID->"af358da5-c46c-453b-a472-a68d4054d47c"],

Cell["\<\
Emean = mom.mom/2;
potfnc[x_,y_]=Emean/Cosh[2(x+y)];\
\>", "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"42a42736-b4c2-4da0-ae16-892be6de038f"],

Cell["\<\
The shape of the potential is best visualized with a contour plot:\
\>", "Text",ExpressionUUID->"77b41789-783c-4912-92f2-9b71dc6a6165"],

Cell["\<\
ContourPlot[potfnc[x,y],{x,-7,7},{y,-7,7},PlotPoints\[Rule]100,PlotRange\
\[Rule]All, 
Contours\[Rule]3,PerformanceGoal->\"Speed\"]\
\>", "Input",
 CellLabel->
  "In[175]:=",ExpressionUUID->"9ada945b-63d3-4c24-a2d4-9ab7bc8b88a3"],

Cell["\<\
As before, we generate a table of numerical values by evaluating the \
potential at the grid points:\
\>", "Text",ExpressionUUID->"19555013-4258-4aa2-8b99-e49bea267f55"],

Cell["\<\
V0 = Table[potfnc[x,y],
      {y,numleft[[2]]+dx/2,numright[[2]]-dx/2,dx},
      {x,numleft[[1]]+dx/2,numright[[1]]-dx/2,dx}];\
\>", "Input",
 CellLabel->
  "In[176]:=",ExpressionUUID->"e6ec4a44-d74a-469d-9694-b545bdacc335"],

Cell["\<\
Finally, we send these values to QuantumKernel by generating a function object\
\>", "Text",ExpressionUUID->"7038ea9a-b75e-4fbb-b7b9-2361a81d3db9"],

Cell["V = QNewFunction[Re[V0],Im[V0]];", "Input",
 CellLabel->
  "In[177]:=",ExpressionUUID->"2729ac96-7de3-458d-a1d8-22af87634f4b"],

Cell[TextData[{
 StyleBox["Attention",
  FontWeight->"Bold"],
 ": Since QuantumKernel accepts complex potentials, the values have to be \
passed as an array of complex numbers. In our case the imaginary part is \
equal to zero."
}], "Text",ExpressionUUID->"381e24d6-7062-485e-84d2-794a78727200"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Schr\[ODoubleDot]dinger operator", "Section",ExpressionUUID->"f1133360-ecc2-4da5-818a-82e60f5f17c4"],

Cell["\<\
Now we can define an operator object, which defines the generator of the time \
evolution. In QuantumKernel, we can generate several types of operator \
objects. Here we discuss the Schr\[ODoubleDot]dinger equation in two \
dimensions\
\>", "Text",ExpressionUUID->"2650dd7c-5653-4774-bbd0-3fcc9c1b83d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", 
   FractionBox["\[PartialD]", 
    RowBox[{"\[PartialD]", "t"}]], "\[Psi]", 
   RowBox[{"(", 
    RowBox[{"x", ",", "t"}], ")"}]}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", "m"}]]}], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["x", "2"]}]], "+", 
      FractionBox[
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["y", "2"]}]]}], ")"}], "\[Psi]", 
    RowBox[{"(", 
     RowBox[{"x", ",", "t"}], ")"}]}], " ", "+", " ", 
   RowBox[{"e", " ", "V", 
    RowBox[{"(", 
     RowBox[{"x", ",", "t"}], ")"}], "\[Psi]", 
    RowBox[{"(", 
     RowBox[{"x", ",", "t"}], ")"}]}]}]}]], "DisplayFormulaNumbered",Expressio\
nUUID->"6c6adcc0-cedd-4056-9e12-26117f32de55"],

Cell["\<\
where m is the mass and e is the charge of the particle. Here\
\>", "Text",ExpressionUUID->"ca2f78f9-fa43-4073-9103-4ecf1b57968f"],

Cell[BoxData[
 RowBox[{"H", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"2", "m"}]]}], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["x", "2"]}]], "+", 
      FractionBox[
       SuperscriptBox["\[PartialD]", "2"], 
       RowBox[{"\[PartialD]", 
        SuperscriptBox["y", "2"]}]]}], ")"}]}], " ", "+", " ", 
   RowBox[{"e", " ", "V", 
    RowBox[{"(", 
     RowBox[{"x", ",", "t"}], ")"}]}]}]}]], "DisplayFormulaNumbered",Expressio\
nUUID->"f68d1b13-75be-4969-995e-fca6a0e6779e"],

Cell["is the Schr\[ODoubleDot]dinger operator.", "Text",ExpressionUUID->"66cb0206-23c2-4afb-8efe-b15d360a27c3"],

Cell["\<\
The QuantumKernel command for defining a two-dimensional \
Schr\[ODoubleDot]dinger operator is
\
\>", "Text",ExpressionUUID->"1d60f3ce-69ec-4dfb-a2ae-9d26faee4d8d"],

Cell["\<\
QSchroedinger2D[scalar_potential, vector_potential, domain_mask, mass, \
charge, step_size]\
\>", "Program",ExpressionUUID->"2c61713a-1555-4c19-929e-3aa93edf9c43"],

Cell["\<\
Here the arguments mean the following: scalar_potential is a reference to a \
function object representing the scalar potential in the \
Schr\[ODoubleDot]dinger equation.
Similarly, vector_potential represents a magnetic vector potential which can \
be used to describe an additional magnetic field. Insert \"None\" if there is \
no vector potential. domain_mask is a function object describing a domain \
with Dirichlet boundary conditions. The domain mask is a function object \
defined by a single two-dimensional array of real numbers. In this array, \
positive values define the region of the numerical simulation, with a \
Dirichlet boundary condition at the border of that region. The solution is \
always set equal to zero in the region where the domain mask has, negative \
values. This can be used to describe particles in a region surrounded by \
infinitely high potential barriers. If there is no domain mask, insert \"None\
\". In this case, Dirichlet boundary conditions are assumed at the borders of \
the rectangular numerical domain. The parameters mass, charge and dx can be \
used for scaling purposes. Here we always assume that mass = 1., charge = 1., \
and for the step size we simply insert dx.\
\>", "Text",ExpressionUUID->"3686855b-042b-4fa2-8ad4-76992330f1c0"],

Cell["For our example, we define", "Text",ExpressionUUID->"0661e290-266c-4010-8dae-a05ff6fedc8f"],

Cell["H = QSchroedinger2D[V,None,None,1.,1.,dx]", "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"1c024e13-a3f3-4b2f-aec6-9ada31e2a603"],

Cell[TextData[{
 "QuantumKernel returns an \"operator object\", which gets the name \"H\" in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". The data structure in QuantumKernel represents a space-discretization of \
the differential operator."
}], "Text",ExpressionUUID->"b67f2470-32f7-4b75-b526-fde6d65ae1a3"],

Cell["QGetOperatorInfo[H]", "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"857d9307-3cf7-465c-9bcc-875101189697"],

Cell["\<\
The above command provides some information about the just defined operator \
object. We can also obtain a summary about the state of QuantumKernel with \
all objects defined so far:\
\>", "Text",ExpressionUUID->"cb9ec379-4296-46b5-9291-5cbd4381b0f7"],

Cell["QInfo[]", "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"61f4666d-7cfa-41e1-8a6b-24649f89bf86"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The time evolution", "Section",ExpressionUUID->"7b3ce524-ea34-4db1-9094-7d26cd2a1699"],

Cell["\<\
Having defined the generator of the time evolution, we can now calculate a \
time-step. QuantumKernel provides the command QTimeEvolution, which needs \
several parameters.\
\>", "Text",ExpressionUUID->"a2454060-c807-4093-b0c6-a773917a1159"],

Cell["\<\
QTimeEvolution[operator_object, function_object, time_step, order, \
repetitions]\
\>", "Program",ExpressionUUID->"4738a9d3-82fd-48eb-8632-13f05822c9bd"],

Cell[TextData[{
 "This command performs the time evolution generated by the Hamiltonian \
operator \"operator_object\". It evolves the initial function \
\"function_object\" for the time repetitions*time_step. The parameter \"order\
\" is a positive integer describing the order of the method. The continuous \
time-evolution exp[i(dt)H] for a small time interval dt is approximated by \
discrete steps giving an approximation of order O(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", "dt", ")"}], "order"], TraditionalForm]],ExpressionUUID->
  "865443a9-0614-430a-b187-9afcec7ee02f"],
 ") for the continuous time-evolution. Higher orders of course mean a better \
approximation, but also take a longer time to execute (because the time step \
dt is subdivided into smaller units). Note also that the accuracy is likewise \
limited by the spacial step size dx."
}], "Text",ExpressionUUID->"c7a4e8f7-b347-4eae-948d-72fc0d60e093"],

Cell["For our example, we define", "Text",ExpressionUUID->"7a4539e2-4a50-4a5d-8981-beb367bc150d"],

Cell["dt = 0.01; ordr = 4; reps = 20;", "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"226bc316-b6c2-4007-9a29-216191e5a70e"],

Cell["\<\
Now we perform the time evolution of the initial wave function (=function \
object, referred to as \"psi\") for the time t=reps*dt:\
\>", "Text",ExpressionUUID->"54c03dcd-daf8-4db0-b737-fa7aa5352014"],

Cell["QTimeEvolution[H, psi, dt, ordr, reps]", "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"eb7952b2-c3b2-4deb-9435-70f20e339a7a"],

Cell["\<\
After performing this command, the function object \"psi\" contains the \
numerical data of the wave function at the time t=reps*dt = 0.2\
\>", "Text",ExpressionUUID->"6b7b9441-fa8a-4a16-922e-270de6f841a8"],

Cell["psi1 = QGetArray[psi];", "Input",
 CellLabel->
  "In[183]:=",ExpressionUUID->"5f1aa860-2396-4c1d-9d07-14c027b958ea"],

Cell["psi2 = psi1[[1]] + I psi1[[2]];", "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"7cda2259-7953-4790-8ddb-7d0e8a968acf"],

Cell[BoxData[
 RowBox[{"QListComplexDensityPlot", "[", 
  RowBox[{"psi2", ",", 
   RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"QSphereRadius", "\[Rule]", 
    FractionBox["1", "3.`"]}]}], "]"}]], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"12cc9e13-7aa1-470b-8e87-a9007da370c2"],

Cell["\<\
Let us perform another series of time steps. Now the intial function \"psi\" \
is the wave function at time t=0.2\
\>", "Text",ExpressionUUID->"398154ad-2760-4a3b-ac83-d7c3d9dc50ed"],

Cell["QTimeEvolution[H, psi, dt, ordr, 80]", "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"9363fad8-7f41-4288-b0a4-9d986995e59a"],

Cell["psi1 = QGetArray[psi];", "Input",
 CellLabel->
  "In[187]:=",ExpressionUUID->"d9332238-ea1b-49f5-ad31-205cf25927b0"],

Cell["psi2 = psi1[[1]] + I psi1[[2]];", "Input",
 CellLabel->
  "In[188]:=",ExpressionUUID->"92e5b382-1811-4a06-80ab-802c3f2f48f4"],

Cell[BoxData[
 RowBox[{"QListComplexDensityPlot", "[", 
  RowBox[{"psi2", ",", 
   RowBox[{"Mesh", "\[Rule]", "False"}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"QSphereRadius", "\[Rule]", 
    FractionBox["1", "3.`"]}]}], "]"}]], "Input",
 CellLabel->
  "In[189]:=",ExpressionUUID->"0b4d0b25-4eef-4365-b16c-6a2a92252a66"],

Cell["\<\
This image shows the wave function at time t=1. It has already hit the \
potential barrier. The transmitted part starts to emerge behind the barrier.\
\>", "Text",ExpressionUUID->"7b4162c0-c7c7-4042-8e39-b82767baede8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the solution from QuantumKernel ", "Section",ExpressionUUID->"264acd3e-a153-4dc3-9d61-c667ccdb0466"],

Cell["\<\
If you don't want to use the nonstandard package ComplexPlot, you can plot \
just the absolute values of the wave function using a DensityPlot command. \
Here it is the fastest way to get just the absolute values of the wave \
function\
\>", "Text",ExpressionUUID->"140060b4-1fd4-4597-8456-952bfb0572f6"],

Cell["abspsi=QGetAbsArray[psi];", "Input",
 CellLabel->
  "In[190]:=",ExpressionUUID->"47549671-3225-4b45-b702-80698cb51de8"],

Cell["ListDensityPlot[abspsi,Mesh\[Rule]False,PlotRange\[Rule]{0,.4}]", \
"Input",
 CellLabel->
  "In[191]:=",ExpressionUUID->"bfc29af4-abc4-4ec1-8572-92a7ec2db8b9"],

Cell["\<\
With the following command you can obtain a density plot of the position \
probability density, i.e., of the absolute square of the wave function:\
\>", "Text",ExpressionUUID->"bd5f670b-0c0e-4ff8-9663-eed1d5d2667e"],

Cell["ListDensityPlot[abspsi^2,Mesh\[Rule]False,PlotRange\[Rule]{0,(.4)^2}]", \
"Input",
 CellLabel->
  "In[192]:=",ExpressionUUID->"12e5b32f-dfd9-40cb-88ae-874f47495ee3"],

Cell["\<\

For the next examples, we restore the initial function. We multiply the \
initial function by 3. This makes the wave function appear brighter in the \
following images.\
\>", "Text",ExpressionUUID->"8d520bd1-8128-4167-9c85-264699a6eb50"],

Cell["psi = QNewFunction[3. Re[psi0], 3. Im[psi0]]", "Input",
 CellLabel->
  "In[193]:=",ExpressionUUID->"00ff63f7-7487-44ee-a7d1-389c90b8c661"],

Cell[TextData[{
 "A fast method of obtaining a color picture in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is to import the color information directly and generate a Graphics \
element using Raster:"
}], "Text",
 CellChangeTimes->{
  3.391774231625*^9},ExpressionUUID->"eb69f4c6-fd36-4b3c-b12d-790d58c2f487"],

Cell["\<\
RM: 25.6.2007:  Vielleicht sollte QGetColorArray direkt RGBColor->List \
beinhalten.\
\>", "Program",
 CellChangeTimes->{{3.39177433559375*^9, 3.391774383609375*^9}, 
   3.391850330015625*^9},ExpressionUUID->"0748941a-24b0-46df-a07a-\
81465653673c"],

Cell["colors = QGetColorArray[psi];", "Input",
 CellLabel->
  "In[194]:=",ExpressionUUID->"5469b03d-bb6c-4862-9b22-e54c4981b3fc"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Raster", "[", 
   RowBox[{"colors", "/.", 
    RowBox[{"RGBColor", "\[Rule]", "List"}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"ColorFunction", "\[Rule]", "RGBColor"}]}], "*)"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.3917741233125*^9, 3.391774176703125*^9}, {
  3.391774208078125*^9, 3.391774211375*^9}, {3.391774391125*^9, 
  3.391774393484375*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"cb07d3f4-db53-4d55-a15d-9b68ce20c171"],

Cell["\<\
If you need proper tick marks, you can use the command QColorArrayPlot \
provided by the package VQM`ComplexPlot\
\>", "Text",ExpressionUUID->"828846a4-f447-4e92-afad-7c2957f52e87"],

Cell[BoxData[
 RowBox[{"QColorArrayPlot", "[", 
  RowBox[{"colors", ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Mesh", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->
  "In[196]:=",ExpressionUUID->"6758d864-4855-471d-be27-bc3db78432ae"],

Cell["\<\
We can also obtain an array of gray values representing the probability \
density using the command\
\>", "Text",ExpressionUUID->"679fb8a0-2ecf-4ab4-a02d-e596dc77d551"],

Cell["grays = QGetGrayArray[psi]/.GrayLevel->List;", "Input",
 CellLabel->
  "In[197]:=",ExpressionUUID->"044abde9-ca2c-4f13-948e-95a816182b38"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Raster", "[", "grays", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.391774456859375*^9, 3.39177446565625*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"50618e68-a072-458b-9c84-7592fc7c5dc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AbsoluteTime", "[", "]"}], "-", "$starttime"}]], "Input",
 CellChangeTimes->{{3.392472533259429*^9, 3.392472539142517*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"08868ec1-d1b3-40a3-8ca6-eb8c574f63ba"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{81, Automatic}, {Automatic, 89}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (January 23, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 133, 0, 160, "Title",ExpressionUUID->"828cf8df-c59f-4cd0-ae63-5222172d5b1f"],
Cell[703, 24, 91, 0, 32, "Subsubtitle",ExpressionUUID->"59255906-777f-42f8-9467-e8eb6191779c"],
Cell[797, 26, 369, 9, 55, "Input",ExpressionUUID->"1e13a822-3338-4df6-ae70-5bd453aeda9d"],
Cell[CellGroupData[{
Cell[1191, 39, 86, 0, 68, "Section",ExpressionUUID->"1d74a6a2-c2c2-4d76-8348-7faef8bf5a6e"],
Cell[1280, 41, 162, 3, 35, "Text",ExpressionUUID->"aae016de-2c8e-4f09-9515-81befc852666"],
Cell[1445, 46, 197, 3, 31, "Input",ExpressionUUID->"05514f8e-3fcd-4290-805a-1493beba32af"],
Cell[1645, 51, 203, 3, 58, "Text",ExpressionUUID->"111f281b-e174-4682-83b9-0f024fc55eff"],
Cell[1851, 56, 193, 3, 31, "Input",ExpressionUUID->"744b4e17-637f-4721-99c4-92b8e77ba1e3"],
Cell[2047, 61, 145, 2, 35, "Text",ExpressionUUID->"a0c0b132-2e33-4d57-aa17-8ec07cc3f3a5"],
Cell[2195, 65, 115, 2, 35, "Text",ExpressionUUID->"d1901ba3-2b3b-401f-87f1-7130278081c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347, 72, 94, 0, 68, "Section",ExpressionUUID->"15a39576-29bf-4b8a-8c79-fc0ac0cc6531"],
Cell[CellGroupData[{
Cell[2466, 76, 110, 0, 55, "Subsection",ExpressionUUID->"fb39a045-af64-4d68-9dd3-0f7d7122a866"],
Cell[2579, 78, 219, 3, 58, "Text",ExpressionUUID->"2da13dad-4b41-49b7-b3e4-722c416f8be3"],
Cell[2801, 83, 314, 7, 69, "Input",ExpressionUUID->"3c402901-5c3d-45e8-b698-a4b1f0c10c12"],
Cell[3118, 92, 105, 0, 35, "Text",ExpressionUUID->"f1804b30-2152-46a7-864a-e483850c18f9"],
Cell[3226, 94, 243, 6, 69, "Input",ExpressionUUID->"4e1180ec-244c-400c-addf-6be82254b5f4"],
Cell[3472, 102, 116, 0, 35, "Text",ExpressionUUID->"220007b3-a77a-4614-8646-4c4c98b933eb"],
Cell[3591, 104, 219, 3, 31, "Input",ExpressionUUID->"aaf2408f-c284-4f6c-b732-662a1105315d"],
Cell[3813, 109, 259, 4, 58, "Text",ExpressionUUID->"f5fd4c0f-c8cb-428b-a19c-3b7fba06df74"],
Cell[4075, 115, 238, 6, 69, "Input",ExpressionUUID->"eac82bc8-dfaf-4636-bd7f-b7319d000841"],
Cell[4316, 123, 198, 3, 58, "Text",ExpressionUUID->"caff783e-baf2-40be-a387-28b44041fdba"],
Cell[4517, 128, 276, 7, 88, "Input",ExpressionUUID->"ec0332d3-6b66-4509-a8df-b020f19a4057"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4830, 140, 105, 0, 55, "Subsection",ExpressionUUID->"f51e1c4c-1415-487b-bcfc-286d8792b056"],
Cell[4938, 142, 140, 2, 35, "Text",ExpressionUUID->"7708e8d0-9d17-4b47-80b9-3bf8cd765785"],
Cell[5081, 146, 556, 16, 87, "Input",ExpressionUUID->"0a8bc1d3-f581-40f8-b928-acb0afc8d8e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5674, 167, 108, 0, 55, "Subsection",ExpressionUUID->"11a4128d-466c-47a0-89cf-5c816bf0b413"],
Cell[5785, 169, 305, 6, 58, "Text",ExpressionUUID->"23dee349-c3ae-446a-899c-17044e1c53c2"],
Cell[6093, 177, 138, 2, 31, "Input",ExpressionUUID->"92d5117a-284b-435a-a0d6-a289e72013f0"],
Cell[6234, 181, 254, 4, 58, "Text",ExpressionUUID->"771ddc7d-e40f-4f48-8358-2f41504b01d5"],
Cell[6491, 187, 289, 6, 58, "Text",ExpressionUUID->"752c173d-77b7-4be1-8343-e2cc3ed8e0f5"],
Cell[6783, 195, 262, 4, 58, "Text",ExpressionUUID->"c3eeef97-753a-41cb-9fdf-d615aa6d18b9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7094, 205, 117, 0, 68, "Section",ExpressionUUID->"963bafd8-e15e-4290-8a21-542e5b3f1716"],
Cell[CellGroupData[{
Cell[7236, 209, 186, 5, 55, "Subsection",ExpressionUUID->"2d68e32c-6783-465b-a098-62e72c45dc26"],
Cell[7425, 216, 71, 0, 35, "Text",ExpressionUUID->"a60ea02f-0663-4515-862a-037b8903ef88"],
Cell[7499, 218, 115, 1, 51, "Program",ExpressionUUID->"a7b74012-5166-4be4-8313-e908eeb9bea2",
 Evaluatable->False],
Cell[7617, 221, 346, 6, 104, "Text",ExpressionUUID->"7d792e7d-1675-40a3-93a5-37a7093e9f2a"],
Cell[7966, 229, 117, 1, 51, "Program",ExpressionUUID->"8e3a2cf0-564f-4344-96b6-85664f381909",
 Evaluatable->False],
Cell[8086, 232, 173, 4, 58, "Text",ExpressionUUID->"549929cd-b7e8-4e09-a073-f76f30ddfe22"],
Cell[8262, 238, 117, 1, 51, "Program",ExpressionUUID->"cd1d29b7-13f4-424c-8962-89d799a177fa",
 Evaluatable->False],
Cell[8382, 241, 143, 3, 58, "Text",ExpressionUUID->"d41e40b8-d63c-47af-94eb-5febc80a4e81"],
Cell[8528, 246, 110, 1, 51, "Program",ExpressionUUID->"f232fab2-4aee-4826-91b8-c34d531091f7",
 Evaluatable->False],
Cell[8641, 249, 235, 6, 58, "Text",ExpressionUUID->"ebdd8715-c3b6-4bf7-8014-bf895c2b1114"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8913, 260, 86, 0, 55, "Subsection",ExpressionUUID->"908114d6-6d23-45f1-a5e9-6856bd7651bc"],
Cell[9002, 262, 243, 4, 58, "Text",ExpressionUUID->"68b9a6c5-5b9b-4538-9174-1fbd11dc041b"],
Cell[9248, 268, 121, 2, 31, "Input",ExpressionUUID->"24287a1d-2f21-436c-b9f7-3a68ca442d22"],
Cell[9372, 272, 190, 4, 35, "Text",ExpressionUUID->"67d3dd40-54d1-46fe-a268-174a32159b00"],
Cell[9565, 278, 184, 3, 31, "Input",ExpressionUUID->"7698cfa2-9b52-436c-b7aa-208f1d647fc3"],
Cell[9752, 283, 170, 3, 35, "Text",ExpressionUUID->"b4173acb-debc-4c37-9c64-c5d09517dc5c"],
Cell[9925, 288, 131, 2, 31, "Input",ExpressionUUID->"1b1bed34-ce44-4b28-ad99-498179f2e570"],
Cell[10059, 292, 266, 4, 58, "Text",ExpressionUUID->"1e9762a4-f7c2-40a3-9ab2-6e8b07a3e495"],
Cell[10328, 298, 123, 2, 31, "Input",ExpressionUUID->"0353c38c-d53d-4885-84ae-8396ddfdedf7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10500, 306, 87, 0, 68, "Section",ExpressionUUID->"74b7e7d6-4cbc-4874-8551-545342ba0f90"],
Cell[10590, 308, 375, 5, 58, "Text",ExpressionUUID->"af358da5-c46c-453b-a472-a68d4054d47c"],
Cell[10968, 315, 160, 5, 50, "Input",ExpressionUUID->"42a42736-b4c2-4da0-ae16-892be6de038f"],
Cell[11131, 322, 145, 2, 35, "Text",ExpressionUUID->"77b41789-783c-4912-92f2-9b71dc6a6165"],
Cell[11279, 326, 239, 6, 50, "Input",ExpressionUUID->"9ada945b-63d3-4c24-a2d4-9ab7bc8b88a3"],
Cell[11521, 334, 179, 3, 35, "Text",ExpressionUUID->"19555013-4258-4aa2-8b99-e49bea267f55"],
Cell[11703, 339, 234, 6, 69, "Input",ExpressionUUID->"e6ec4a44-d74a-469d-9694-b545bdacc335"],
Cell[11940, 347, 157, 2, 35, "Text",ExpressionUUID->"7038ea9a-b75e-4fbb-b7b9-2361a81d3db9"],
Cell[12100, 351, 132, 2, 31, "Input",ExpressionUUID->"2729ac96-7de3-458d-a1d8-22af87634f4b"],
Cell[12235, 355, 295, 6, 58, "Text",ExpressionUUID->"381e24d6-7062-485e-84d2-794a78727200"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12567, 366, 110, 0, 68, "Section",ExpressionUUID->"f1133360-ecc2-4da5-818a-82e60f5f17c4"],
Cell[12680, 368, 313, 5, 58, "Text",ExpressionUUID->"2650dd7c-5653-4774-bbd0-3fcc9c1b83d7"],
Cell[12996, 375, 924, 29, 55, "DisplayFormulaNumbered",ExpressionUUID->"6c6adcc0-cedd-4056-9e12-26117f32de55"],
Cell[13923, 406, 140, 2, 35, "Text",ExpressionUUID->"ca2f78f9-fa43-4073-9103-4ecf1b57968f"],
Cell[14066, 410, 636, 20, 55, "DisplayFormulaNumbered",ExpressionUUID->"f68d1b13-75be-4969-995e-fca6a0e6779e"],
Cell[14705, 432, 111, 0, 35, "Text",ExpressionUUID->"66cb0206-23c2-4afb-8efe-b15d360a27c3"],
Cell[14819, 434, 174, 4, 58, "Text",ExpressionUUID->"1d60f3ce-69ec-4dfb-a2ae-9d26faee4d8d"],
Cell[14996, 440, 173, 3, 51, "Program",ExpressionUUID->"2c61713a-1555-4c19-929e-3aa93edf9c43"],
Cell[15172, 445, 1296, 18, 196, "Text",ExpressionUUID->"3686855b-042b-4fa2-8ad4-76992330f1c0"],
Cell[16471, 465, 97, 0, 35, "Text",ExpressionUUID->"0661e290-266c-4010-8dae-a05ff6fedc8f"],
Cell[16571, 467, 141, 2, 31, "Input",ExpressionUUID->"1c024e13-a3f3-4b2f-aec6-9ada31e2a603"],
Cell[16715, 471, 318, 6, 58, "Text",ExpressionUUID->"b67f2470-32f7-4b75-b526-fde6d65ae1a3"],
Cell[17036, 479, 119, 2, 31, "Input",ExpressionUUID->"857d9307-3cf7-465c-9bcc-875101189697"],
Cell[17158, 483, 261, 4, 58, "Text",ExpressionUUID->"cb9ec379-4296-46b5-9291-5cbd4381b0f7"],
Cell[17422, 489, 107, 2, 31, "Input",ExpressionUUID->"61f4666d-7cfa-41e1-8a6b-24649f89bf86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17566, 496, 92, 0, 68, "Section",ExpressionUUID->"7b3ce524-ea34-4db1-9094-7d26cd2a1699"],
Cell[17661, 498, 251, 4, 58, "Text",ExpressionUUID->"a2454060-c807-4093-b0c6-a773917a1159"],
Cell[17915, 504, 163, 3, 51, "Program",ExpressionUUID->"4738a9d3-82fd-48eb-8632-13f05822c9bd"],
Cell[18081, 509, 946, 16, 127, "Text",ExpressionUUID->"c7a4e8f7-b347-4eae-948d-72fc0d60e093"],
Cell[19030, 527, 97, 0, 35, "Text",ExpressionUUID->"7a4539e2-4a50-4a5d-8981-beb367bc150d"],
Cell[19130, 529, 131, 2, 31, "Input",ExpressionUUID->"226bc316-b6c2-4007-9a29-216191e5a70e"],
Cell[19264, 533, 210, 3, 35, "Text",ExpressionUUID->"54c03dcd-daf8-4db0-b737-fa7aa5352014"],
Cell[19477, 538, 138, 2, 31, "Input",ExpressionUUID->"eb7952b2-c3b2-4deb-9435-70f20e339a7a"],
Cell[19618, 542, 216, 3, 35, "Text",ExpressionUUID->"6b7b9441-fa8a-4a16-922e-270de6f841a8"],
Cell[19837, 547, 122, 2, 31, "Input",ExpressionUUID->"5f1aa860-2396-4c1d-9d07-14c027b958ea"],
Cell[19962, 551, 131, 2, 31, "Input",ExpressionUUID->"7cda2259-7953-4790-8ddb-7d0e8a968acf"],
Cell[20096, 555, 556, 16, 87, "Input",ExpressionUUID->"12cc9e13-7aa1-470b-8e87-a9007da370c2"],
Cell[20655, 573, 192, 3, 35, "Text",ExpressionUUID->"398154ad-2760-4a3b-ac83-d7c3d9dc50ed"],
Cell[20850, 578, 136, 2, 31, "Input",ExpressionUUID->"9363fad8-7f41-4288-b0a4-9d986995e59a"],
Cell[20989, 582, 122, 2, 31, "Input",ExpressionUUID->"d9332238-ea1b-49f5-ad31-205cf25927b0"],
Cell[21114, 586, 131, 2, 31, "Input",ExpressionUUID->"92e5b382-1811-4a06-80ab-802c3f2f48f4"],
Cell[21248, 590, 556, 16, 87, "Input",ExpressionUUID->"0b4d0b25-4eef-4365-b16c-6a2a92252a66"],
Cell[21807, 608, 228, 3, 35, "Text",ExpressionUUID->"7b4162c0-c7c7-4042-8e39-b82767baede8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22072, 616, 114, 0, 68, "Section",ExpressionUUID->"264acd3e-a153-4dc3-9d61-c667ccdb0466"],
Cell[22189, 618, 314, 5, 58, "Text",ExpressionUUID->"140060b4-1fd4-4597-8456-952bfb0572f6"],
Cell[22506, 625, 125, 2, 31, "Input",ExpressionUUID->"47549671-3225-4b45-b702-80698cb51de8"],
Cell[22634, 629, 165, 3, 31, "Input",ExpressionUUID->"bfc29af4-abc4-4ec1-8572-92a7ec2db8b9"],
Cell[22802, 634, 225, 3, 58, "Text",ExpressionUUID->"bd5f670b-0c0e-4ff8-9663-eed1d5d2667e"],
Cell[23030, 639, 171, 3, 31, "Input",ExpressionUUID->"12e5b32f-dfd9-40cb-88ae-874f47495ee3"],
Cell[23204, 644, 248, 5, 81, "Text",ExpressionUUID->"8d520bd1-8128-4167-9c85-264699a6eb50"],
Cell[23455, 651, 144, 2, 31, "Input",ExpressionUUID->"00ff63f7-7487-44ee-a7d1-389c90b8c661"],
Cell[23602, 655, 320, 8, 35, "Text",ExpressionUUID->"eb69f4c6-fd36-4b3c-b12d-790d58c2f487"],
Cell[23925, 665, 259, 6, 51, "Program",ExpressionUUID->"0748941a-24b0-46df-a07a-81465653673c"],
Cell[24187, 673, 129, 2, 31, "Input",ExpressionUUID->"5469b03d-bb6c-4862-9b22-e54c4981b3fc"],
Cell[24319, 677, 509, 13, 31, "Input",ExpressionUUID->"cb07d3f4-db53-4d55-a15d-9b68ce20c171"],
Cell[24831, 692, 191, 3, 58, "Text",ExpressionUUID->"828846a4-f447-4e92-afad-7c2957f52e87"],
Cell[25025, 697, 473, 14, 31, "Input",ExpressionUUID->"6758d864-4855-471d-be27-bc3db78432ae"],
Cell[25501, 713, 178, 3, 35, "Text",ExpressionUUID->"679fb8a0-2ecf-4ab4-a02d-e596dc77d551"],
Cell[25682, 718, 144, 2, 31, "Input",ExpressionUUID->"044abde9-ca2c-4f13-948e-95a816182b38"],
Cell[25829, 722, 246, 5, 31, "Input",ExpressionUUID->"50618e68-a072-458b-9c84-7592fc7c5dc0"],
Cell[26078, 729, 241, 5, 31, "Input",ExpressionUUID->"08868ec1-d1b3-40a3-8ca6-eb8c574f63ba"]
}, Open  ]]
}, Open  ]]
}
]
*)

