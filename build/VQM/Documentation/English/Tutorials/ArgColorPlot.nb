(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    506088,      10588]
NotebookOptionsPosition[    477808,       9998]
NotebookOutlinePosition[    485254,      10157]
CellTagsIndexPosition[    485080,      10150]
WindowTitle->ArgColorPlot
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["V Q M TUTORIAL", "PacletNameCell"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox[
       InterpretationBox[Cell[TextData[{
         "URL",
         StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
          StripOnInput->False]
        }]],
        TextCell[
         Row[{"URL", 
           Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
       StripOnInput->False], {"\<\"VQM/tutorial/ArgColorPlot\"\>":>
      None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["VQM/tutorial/ArgColorPlot"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/language/VQM/tutorial/\
ArgColorPlot.html"], StandardForm]], "Input", TextClipboardType -> 
             "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
            If[
             TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$9033], 
             "http://reference.wolfram.com/system-modeler/", 
             "http://reference.wolfram.com/language/"], 
            "VQM/tutorial/ArgColorPlot", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic,
      MenuStyle->"URLMenu"]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["ArgColorPlot", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Introduction and implementation"],
      "paclet:VQM/tutorial/ArgColorPlot#1892760991",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Examples for using the ArgColorPlot package"],
      "paclet:VQM/tutorial/ArgColorPlot#559656922",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["The package VQM`ArgColorPlot"],
      "paclet:VQM/tutorial/ArgColorPlot#1933453141",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TutorialJumpBox"],

Cell[TextData[{
 "The package VQM`ArgColorPlot provides methods to visualize complex-valued \
functions of one real variable. This package is part of the VQM packages \
which can be obtained here:  ",
 ButtonBox["https://vqm.uni-graz.at/pages/software.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["https://vqm.uni-graz.at/pages/software.html"], None}],
 " (free download). The VQM packages are part of the Visual Quantum Mechanics \
project, see ",
 ButtonBox["https://vqm.uni-graz.at",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["https://vqm.uni-graz.at"], None}],
 ". In particular, these packages are distributed with the book ",
 StyleBox["Advanced Visual Quantum Mechanics",
  FontSlant->"Italic"],
 ", Springer-Verlag New York, 2004."
}], "Text",
 CellID->1534169418],

Cell["Available functions in the VQM`ArgColorPlot package.", "Caption",
 CellID->1891092685],

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<VQM`ArgColorPlot`*\>\"", "]"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->2058623809],

Cell[CellGroupData[{

Cell["Introduction and implementation", "Section",
 CellID->1892760991],

Cell["\<\
Here we describe theoretical background and the practical implementation of \
the main function in the package VQM`ArgColorPlot`.\
\>", "Text",
 CellID->958712726],

Cell[CellGroupData[{

Cell["FilledPlot", "Subsection",
 CellID->514982441],

Cell["Filling of a graph can be obtained by ", "Text",
 FontFamily->"Times",
 CellID->950788477],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->476115612],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnVtbE9max/uZuZnL+QrzLeZ2X87tnmduN+KhPEFsBYPtllbOCKiAKNig
cpAGWkEbyYGEkADhkECAcAgkhCQSiICEg0Zl2xDnrSqCUQjHqlqVyvt7/nbH
gseqWuuft9ap3vVfJy/9nfq3n376Kek/4D9/j0/525Ur8b/873/CX/5PlnT+
rOzM6f+RJZ85e+bKf5/8dzj4GP6swh/681eEfyiKIn0JCMIZVAjSF4IgHIBO
RqQE+hkRP47mTHm19ftj68aKVKZlkWqYCWwfRT8j4iZgqcukXdtoCz+6Zq2m
qArf+lefsYKS1a2FjqOfETETcDSm5teBo+V13/nZVi2TVTNHNmxySmYNRWj0
MyJ+XI3yLfeGsFWnlpr8zMe1almqJfB12LGg7Jmmwgh8/kLkahFkb2x1P/rZ
Wi1n/Tzhcf5C/Sy7q/9HmgIENmY/gOLSFTfLjb2jc5ubQUIXjiC7EO7ngN8f
2Pi6YCyirjRUqcepm3cpKinhTltZ05CKic/tA29Arzoc9+r6qRw1GPvne7rB
yXmyt4Ag20AjOuTnAPQDq20Bs82ReOkC2664/XzINbfi9q2C4K/sB1aOGX+9
duJ8ngZcnVdj+ogtEER8tBidp7JUJzNV1a8tEzMr4Qb+wc+sJjxLRQ0DbKD2
LrwnffkI8o1n6nHWmX1jczutu6ufWcG34HSW6ky22uZeIn0TCELz5PUImPlG
Wee4692upt3DzyDoG17I05zMVFqnFknfChLr1KjGwMy3KozQKo7k2O3Buki/
YJl8m1igBUuPuzBKI8Ro1NvBzKmPuvYw877xOWTp+Yv5Wmh4vJlf2//ECMI1
7QOeE+mKq/f10LPb26sH8TPb8AA/JxRoVz+sk745JLYYtM+fzW2Fdu+wY2Ff
ox7QzyCtyR3HBPyNzU3St4jEClPe5ZQSQ3yGsnNo5iAuPbifQVWKUWjD1Lba
9r8OBOGCkucWsFxD28QBLXooP7vmVrIqe+HfN437SN8oIn3UvS4wW05V38Et
eig/u5mplkt3dVSOemn1E+nbRaTM6PTi+dsa6LLZ3Pv0AX/w897jdTvVNeyF
zmZOVW8wiMuWEL4Ag0Fw1vV7DhVvDxufWbHTNBqTm/RNI9KkxegEg0Hj+bDO
PJqfnbPL8hLDqSzVuxVsdSAcAw2M83maxDttk2/2mjrh0M+gnpHZuHRFQa2Z
9N0jUuPO72b26X8EWx7Zz6DSpiE4b98YjnUgnPFcN8GuODqaJ4/jZ/sbPzwU
LuRpcJk0wgnBYDC5uB2e+z2js0f282HHN8LV2ufCGRaEK/7snAI7VbaMHjnG
Hic+s0p/3H0iXTnvD+x/uQgSGceMP7FAm1Cg3XsFHd9+No374AFRWD9AujyQ
6AbCMgRnCNHfGcwzXpLENCCSHvZ6wo3nrb+TzPwg+Vmnh0M/g+7/QU+y42ss
yJEZcS6ezlL98rBj+81WVprS5IQ7Grtv8WVxYkKpefu4raeSogrM3lVLSxFF
Vdo49fOY692ZbDX0STdxxhA5Evfq+iEk7lhE5yujqJJOH3y20wauHP3Ozw8t
vtVhfTmVwLGfQexbih2DM6QLBok+6LkMJp/ADl95y5KSXzuYz9OdVxK++dk9
PXgDvJtANzmuVH6L21z5ecq7fOmu7kKe5vO//iJdPEiU8etvXSczlUO7LNf3
liSE/OzQX0ko3/azrhSaHz2Msc0pVKJy+pufjzlkty1l9zSE6Oe6SdLFg0QT
7JBv+Z/W3Uzlf5lBpTwbgc/G+lvUtSY7tDQmPDbvqqE8mSpm5lw8g+BnTZif
OYnPrG486jqVpVoL4DtZyIEIBoMpJQYqRx3xxUCHOW0r3GZr6EDtK2Fb1I7B
/KTQD+rNTq7bG6z0ljf09Ip6nHQ5IdGBgnmmVynH9vSV3zbtc+72I/u0z/bd
IB7HfgbdqjBCW2j5/WfSRYWIHWZ2W3/udusR1tFFEud+7hr20t84xRjp0kLE
TnMXPbv9TD3Oof049zMo40lPfIYSX8hC9mBzM3i5sP1CnuY4s9u7+pmTwY1w
9YzMwvfucfMI6TJDxMtLgwNMUqexcRtL+YjPoJyq3hPpClykhOzKxubmpbtt
CQXaKe9yVPi5b2wuLk1R1jREuuQQMfJcN8lOVXBuPJ78DMp/ZopLV8y9+0C6
8BBxAcFZdqdNdrfNOctxcObVz/02eh3pwxeDpMsPERdNTKZQPoIzr34GFdSa
wdJvl7AVjWyxGQxeLtTx0XIWwM+mcR89Nf/Kuv99IrEBO+bM+bBGuJ85H68L
V05V34l0JabpQL6GJgTP3+Z4zFmw+OwOjUVXtoySLkuEPMoeerVGjWrv1Rqi
9rM7NF2IKzqQlAeGs7lcrtYg4ufOIS8uukM0JjfY4GnLCK9mE8DPoJvlxlOZ
uC46pvlnaSe7958E/Nw+8IbNsk66UBEytA94mJGuYb6dJoyfQTfKOk9nqwOY
GSwmucU8oMcibILJrZ95Ha/bFtt8etXhIF20iNAYrXQH6uGLQQHCpmDxGSQv
MZzLbV3/skG6gBFByaYXWyoPsttadPmZTbqu7nWRLmBEONg54sL6/iPaJmK+
L7/mWQHbtChp+faGi5B+np5buVyou3RX99cG7mAYK9ypNcelKfptb4/mmcj5
vmop6pbBs2o3wYfrRi8BP4PYXZgNmEYpNhi0z59IV9yuOcSGa98rYr4vXWly
Wv2g2WTWdA72jnp5ylewr5yzywkF2qv39ZjpLhZgE3X2jBwxOfke+b4MlXSm
r+zSyvxrFHWtdjjMz4INcbCq09hwl4pYYNS5eDJTmf64+xhuiZzvqzyRusPk
+/I5s6lkJT/5kQ4i+4z/XG7rjbJO0uWN8Mtvr4bptqXlzTHcEjHfV+8L+GsD
nVbU0ZnAW76vA6qS2Qd82LFAusgRvrC5l9gUysd1S6R8Xz7vs9xE9gf5r76t
CSHiZ/ZmM570kC51hC+eMsn2j7bn2s4ovUe+L7v3uyNE/AxiH0YTHj/pgke4
x/7Gfza3NaXEILyvSPl5dBo6C6q8GhPpske4p5ZJbq/odsaOn0EPXgzCXbvm
VkgXP8IlU97lC3maK0XtP+yEIpifhRysCxf0B0+kK4sacGMsSfFHG73B68sO
B5EgSTA+gwrr6V1gvAvvSVcCwg10rpi7bK4YAsGZuJ8HJt7GpStKGzEtmERg
syxCiCblKLJ+BkGXECy9sPyRdFUgx2UzGIRm88V8vnLFRIWf+8bm4Bv95DUm
1416FN1O9sVngnYi7mdQ1tPe+Aylfw0TGkQxwWBQXkKnI7DzmY7gIH4mNb6x
LXaLimolblERxbC5Yvbb2UcIP5O9AFbpj7txF6Gohg3OvOaKiSI/szlnalQY
oqMSlTiCs3j8DEqroEP0ygfMORN9bAXnSHtixqSfO4Zm2N27SFcOcji2grNi
lLiFROVn99ZenKpVDNFRRYpogrPY/NwxSIfo2lYb6SpCDoqqlw7OleIIzm5x
jNeFCzM3RheiCs5ukcVnkIHZ0f53DNHRgNiCswj97GZCNLSicSxa5ASDwav3
9RCcJ3gNzhHzI7E/NadQ17dfhhWnn9npwqe4okPcvOpwcL6b/E5Fyo/EaPHZ
r+DfZJ24/QzKxu2SxY1zdpndsNgxw+tSuoj5kdxbGQyK0pJuiTw+u5mN3uLS
FA9wL06xUq+lX0J50c7LnphhipgfyW5poqgCi89fmXRdE9YOEaefQXd/N0OJ
ed6uka465Efsb/zn8zSXC9uneX8JJVJ+JDpuU7+W17+oTaESs8ubLSFLC5/v
64AatM/HZygLas2kaw/5ETYdUItRgNe3I+VH8vd2dr5W65VqZVpCYsmLnlFC
+UUPJfYFcIgGpCsQ+ca4692ZbPW1Bx0C2SBifiT2FxYroP0cDe0NN5Oj41SW
CtMoiYqypiEIMm39HgGdEDE/0k6J2c+gimYrlN6QHTPdiYIh+/zJTOXNciNx
Y0Spnyc8S2dzW5OK2jc2MaU/eXKr++KOlc851v0MamDyk2hMbtKVGevomaUI
RQ0DxC2xt59FOLgRrunZleRiel71w6d/ka7S2GVzk57dhp7g2DTvewge08/E
r2FfQe8DX5glC5vFq7aVZC4CyfjZzeQ0OJGOmcHIYHMvncttvVLY7pwllihG
Yn4emHgbn6G8jfl1SfCQmQjgKDk5+nlLj17SKdAHJ+dJV29sYR73wZMx40kP
cQNIzM8TnqXztzU/38PtOAXlVoURnozwfCRuAIn52R3ajrNJbyddybECmy/0
t1fDxKv+4H4W+XhduFxzK6mPuiBczC5ix5B3RqcXz+a2wgOR50XOHPuZ+DUc
Sv22t+wujUHcYZZn8mpMEJz1x9pAEP28v9j1im1mD+kKlzLqXpf4ZwOl4Wfn
7HJyMT1XhSl2eQK63hfztSB+33VFP4fUNeyNS1Pcq+8nXfPSpLhhAIKzqnea
eEXHiJ/dodX+pnHc155jdMzqgts1fcSr+Gh+jqLxjXBNvvHL7rRBB9y/9om0
BaTD2PS7C3ma83ma0elF4lV8ND8Tv4Yjq2NoJi5dkVXZu4ljHVwQDAYznvSw
fW3ilRuDfgax+57/2TlF2gtSoLZ1XHSzJ5HyI3ntFRmJbNOipOXbqr9o9/M0
M8NyIl0xNbNM2g7RTbd1Nj5D+cvDDlEtoouUH8n84jqVUDnsXR3taaCoW8Zo
eL/7gBp2LEArGtrSHz9/IW2KaAU6Iz/f053JVg9OzhOv0DBFzI803KN52cM0
ijydFJW4nSJJAn4GKbrpRJeYT+nI5D+jpwKbu6aIV+X3ipgfKSRnWRKVUKzf
fvtbGn4GsUOmun6cNDw0lUwfpFiMU4GR8iPRsg/rb1BUSqk+PJWBaPMjHVaO
GX9KiQEa0uOud6QNEk287qI3df31N6Ooms0hRcqPtGq3NNM9QSa7qdP7bZO4
aLdxuKxTCxfztVSO+u3SB9I2iQ66hr0nM5WXC3U2t1jntXfPj+SpzwiPxNcl
1n7eltEKFaSCCgp8wr7hPgw5Fs7naaArLfq1+tLJj3QEtRjpB+jNciOmoNmD
Sc9ScrE+PkMZXctB95X0/OwOTbI8wQz/EZjyLt8qN9Jv+hgcxCuLW0nSzyB2
AOpFO76Z9SPQ72MnteFbT7yaOJc0Bjd2CkJQ2uNuqLXXRidpB4kIMHNOVa/o
JrW5k/ScvC37jD/1URebeZu0j0QBfMezntJmftg4SLx2eJKE/exm1pSylsZX
wic8SzeZNnNZ0xDxeuFP0vazm4nStyroeqzT2GL2Fdphx0JysZ7e+1KKbeZw
Sd7PbqYtzT5nC2rNMZiLpntk9mK+9kS6UnqjGTsVC35206/QrhTW0ws8bjzq
iqnNwV91OE5mqs5kq3WC7hBBTDHiZ1bVyrG4NEVCgRbsTdpovOOY8bNrtK4U
tvfbRD4DyJmkOl4XSRqTm8pRx2coFZIe9IA2BtgYzJxXY5qMtpwDx1HsOHlb
lsn55Pt05yixQPv+o9Ry/jtnl5+8HoHW8ulsdSw0mH9QDPoZNOFeuspY+tzt
1p7ROdIe5Iz2AU9SER2WUx91WcT1polAik0/s4Iu0qW7bVD7GU96FpY/kjbj
sRiYeJtVSY/hQGvqD92ka47vnYhFqlj2s5sZnS5tGopLV0CL+tHL4UAUvoE4
aJ8vahg4ka4A3f/DMuYS9X49fCvG/cyqb2yOXW8Gwa1SMfppPTpc3TMyW1Br
BhvDlWdX9ZrHfXwXlPiFft6WxuROKTGwri5/NSzaZI/wTIGO3j9LO+FS4cly
u6ZPzBtcCqxYG6/bV+pe13XGKhD3cqv7RqYWRZJ86ctfG3BtEJBPZ6ng8s7m
tpY1DYksvQB5oZN3VeeQN/+ZCRrV4JyL+VpoY095l4ks/7BMzj/XTUJzgrUx
uzVPc9cUXA/xUhKh0M97aNz17neN7dqDDjAS6EKeprC+v8Xo/MDRqDUU/s6D
61824NtUp7HBFyqhQMue+lSWKutpb6PePn6M7p7wdY1nFOcZLZNva1RjN8o6
45jOFyi5WF/cMNCkt3sX3m9u/hi3dzXqrn5eef+5Y2jmpcFR8ac1p6rvcmF7
XNrWKU5mKm886oLjun4PJ9E4Gksez8jrGW3uJUX3dMlzy9X7+nDjQUfyTq25
SjEK0Zs9475mhqYv/No/Qv8I6Ey2+nppBxxsaJswWr0/eHjXu4h0a8f/ZTyj
NM548F+e8CxB5ITj0DAAe7ONbVZ0BztHvXMynUIQSXCQ5gdyfLCoESmBfkak
BPoZkRLoZ0RKoJ+JstCcL2P6i5lGnxBvNW4sWLZOCGecCQhwRhZHc6a82irA
iYT3s2C39pVE9W34rUXsGVPrZvZzqE+bSVHVfvhgKKJkjfxf34Y2lZLVWTeY
WqDkSkFeDA5Y6jLp8mi0CXAyYQeUBL01EtVHn5Gqtnz9um7Ih1Pvc5uBBZfD
R7vYZyyl5EL42WE02Pwb9KmtpXChAnzDA47G1Pw6qHb5fqXBCULGZ4FvjUT1
bSy4bIxD142lMnmjI/xn636fy+WaYYAP/sAGe1hZJKe/483cl4nfNxM6I/zf
t3VC+iFiga9dhWlBsDO6GuWyamEqXWiEvzX+qm931h1sk6PRsRZ+2KWERoWc
RUbJmh3g+1B9r1nhiIXj71tAWyQPnVAuk+XbmH/fZ6mDa6s28bFP9O5nBGx1
kvWzwLfGZ/XtxsaWRdes1XDatT1/11Eno0pNzG9bZJTcyv/zYwYa6pTcxDxC
NkKXKgDoZ04QvPoCjbRD6QeB31JBUXX7ODTgKKXbGnQ0rzC4eL+6DVd++By8
vHHvrxuHQEtTqn4W7tZIVF/ApQ05NNXgOlDADQQC68JFSgQ5LBtgUXQogiAI
giAIghyH/wdoiawl
    "], {{0, 157}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[13]=",
 CellID->970927824]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"FillingStyle", "\[Rule]", 
      RowBox[{"Hue", "[", "c", "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", ".42", ",", "\"\<color\>\""}], "}"}], ",", "0", ",", 
     "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->1079990870],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0.352, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`c$$], 0.42, "color"}, 0, 1}}, Typeset`size$$ = {
    360., {115., 124.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$2470$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0.42}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$2470$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[E^(-($CellContext`x^2/2)), {$CellContext`x, -3, 3}, Filling -> 
        Axis, FillingStyle -> Hue[$CellContext`c$$]], 
      "Specifications" :> {{{$CellContext`c$$, 0.42, "color"}, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {161., 167.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 ImageSize->{407, 330},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->874767646]
}, Open  ]],

Cell["In that way one can produce neat looking graphs. ", "Text",
 FontFamily->"Times",
 CellID->546778960],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "2"], "18"], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"1", "\[Rule]", "Axis"}]}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GrayLevel", "[", ".3", "]"}], ",", 
      RowBox[{"GrayLevel", "[", ".7", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->631455207],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HSrKZiKI6jBwxeCQUZpq+uxp9EnEwbs2nT1u/iBn4ZiWLscvqwi3yAhcFeO/
DiQX6rtx8O2fmhhhunwrVftb2U1hl+uWxANrwFH/kY8Kcz97YUHIisF33WRV
k9vOb4KT1ibXIFkmnjUPSV7jG7CZ47R9akmmwmDYunl/sz98I2g7tQ6dIeaM
FegfnDxZxTMF6uqxxHxsl2KkDwLmEqGxJaoZrpxtOYdXwlMeZNOePw/cY2rA
6t1uX9vZ2U6tSj1NpGJ/q5nE42i/Pc5/7dWkz4jiVR83H+jr0KcMHn5bInJW
gghTa83CBKvB/TKY09yphji4bANhx5ZawgmTqs15JzZ87O9TXwjTpk6MJRcq
x6wDkvACk5xKNBUPx63wfH+SNx+k8nPq0uSANaBt1dVHhfVUiHk8/h7WdZHL
If4BVVeGW8jf92h7IVevbyC0AOFBwBDIX+foquZmtcEWfhfgrglVQ2QyKDeJ
hq221IuxlCKMG6NclvbULOmIc2JvLz5qRSi5IeaLQO+vNKw2KmyooZ4J/Ny2
iKOWQ7HbTs2HIF/DuBri5MPxayE2SBGZQWzMdtQortABrz1fRxasIOLwtr8u
U2EuigCfnFKoHBzxT8BzzpjQrHtVSMTw+H6QjYLkb2O/AKenVX1RYUmt9EzA
89x8TRGBwGNF9qJF9fl9D25OEKIui9C0NaT65BmBUDyuAl3xWMaq19JnVBiN
RCBOTh5V8v4EtHX77FAyhnHdvr6SuAxkcDN9CbT+dKgpKuypOn6eCYadbcKB
tY9yF0AEAk3FaR01+OFjGatBVxDfgufU4X51hmVvc4i/DkJ0eChcuh1Nhd30
R1SHJeQr42RQck7prFEyFPRC7OdQ9RBjZAauYjF0bAFRYVUdxDwGNAEgXoJf
KDQYB99OmBYCAga3DHKCUJnJ0r3Fpw/e+zdDhAM/qLD01SbVTjxXiyYR+UQr
W3y5s0jJih4MCC2ILjium15uigrb6qNngtSDq//IR3cn/eP8iCJnDVpkoOT4
CgsPvy16nlxPmPY2gTHriIj6r141oZEBqDyHUlN3KvqTA5NnTd/FGEHeX93L
WgieuTDEimlno2ftUGFh/fUM7HO3vpW+GH6zZSfMw7NQJ8bxnJXUtfu0Zec+
68Sz5uCr7z4VUWFDTThdhYUqRqvhdTR91vQnjwER5qkjK0HJoOfDPpr2YKiG
CjvrFj9PxcF+e2WC2SnRl2l1yw9Hr7XTNaaiCGiKRhWhro+g2HWGnAcyNDQM
4cShZOSQwS0fz8IrZssY3zg4LBuc/yX4q4uxn7s5kNaop8LgpIjZDgWr1sk1
ZtmSlTfOLLolWOzrauRIYypMlk1o2hri2fGh/zUVxhxPbT2WWoTtjVOmjcSe
mlXzLsYBraTrKUtBzEVHrRjTDfPpDBVmJ0XPe0M2QcBc/B3j1buO908vPj41
/2HugiM+uvThUA0R28eWWr5+16XeOjoBQXJUjrK5B3pOK8LqZuFcOAJ/D+u7
WYva8+fF+q8jvS6oML7eerYN5KMGl/Cq13vZK+Kc/S/vt2QiI8RQYAT9IR4l
CUKLntetqo2jFUPDw/nlxFKHypyRvLLZ1HExlVDfjY/z5rfmLAjcSU7APAkN
jCprLIwglnm+0jVhfo7q/a10Kw+DaRuahnqYJU1Bk4aY5e974CHVUTAv7eBq
co1ACu67tkALManavOtFk/5KrqlD6xwSoYV3FH4ye/ZMhJuZqL3rwSM1Cxb7
uHxDUS2oNWxfC1p9v1s20t1YODGFUNX+VroVhsmyJboyfrybODw8NLUwQ/1v
f0hA40d5R1aQawdScPHcGl9hkSIya/vzks5KLq7EwjOU/W/+8XhKEWastZTJ
JYm3BnzRL6lLdjhspa4K1Jq3tZTHU8wOHZG3BnN5n/IEVe5vpUNJWPY2x3PR
NLnrrVkqyjM0+OGCYsClNMxy2hmDxsXRdVvMGSsIp+911GolY3DIKYWYv2L3
HK9IPFSAFtSa1aHFeLKCVhFjZM5santcNdBzRG5Tr+JtXykvonlUz6r3t9K2
GCy2zck8JOamR0VqizQ8NFAXiaYwVR83J7d1TApsx+1RhWgetSZd00NDKEIO
EygdMgQYiQWYgfccoZrCECuorO/iPuew9B0uUYtag7eUBo/qubeQG9z8KbBQ
tb+VViG0vQMSAIj5tycVasujlPTw0D/XjpqspO05NpEKSbc8rZnpFirOoTwR
bqyyG/lYxpxyyGMQYsb5X9ozKReznQZ67mkUcIMlMmgWdjVAu69drtH+VpoX
AKpeIWZzbQfahoeHCUmfNVlJFygk3X5ufLFralEfcoBilU548RJR59vciJCn
kh+8ghCzzvOLtEUD4fRJkniEvxW1Iketyf5WGl4dwgxidrFuo8bgpUHMYLGq
CHMTjKXHJH2n/WxdPZZ9BgtJI1JQz4Nb5ufOhS4LFZw6spKYjW8wMdtp3P88
XVoVQsX+VmovzbS3OaGIme/8UaWDmMckXa2QdGW4hQHMpS32Doyo4vVoTmBm
FMjYJxoPz0RThuZeXDGJnMNIzBdivzBMmDGGzkJSgUZiZtkSvRm3HpfpeTmQ
dM0JM7Be8VErA1hMIxgstscBF166x/E67+iamMptqXXmmZXxRt8uxzCkH1pN
TMwwsJjtjKRnBsP2WOYqDXszNGF4SC6JRpNbsoNWGsZu08Nksz0PugQIQMbg
jT1OSFwP5XB2BnFcWPzTVim1ZlWSFGNrjXLi9q+FiricsIxtcDHbGUfPtiEp
aA5P4wNV/czaMiyXfRf3OVgyibfGQLYbhcF24fiEuAbmgoAVMha7KGTMYHHG
PuPgvD22zDK5xqxakmlsxVHI8d0bnhbM+yn5M0d748zsJVFRY6iOn4Ni0dyM
72/zSb/u0ID0auJnHQXzovauN4DpWM4+jrsj3YJPEz0V4JMhwGB7BkDDYNrP
O7lti6+0SKo2PyfJM7buKCF416b2/Hk305aoXVWAOkgX1YhK/8w7sQHEjN8M
nnY4W3/kstc3UpeCVcP8NlJhLoa9I8cr0JmX5h5eQ8h4R5jQaV+8vdseOwZT
7dddPLcmnjVPEFqIJKeNrT6S4Xlufnxq/u2MRR6OFA5nq4UKUc2k570hm0DM
ouv75FSuYid//6JZsPhx3nywMDk2YrBArk57+OCKPU7iysA4KN/BN5zp6Knt
ydx9t0DUEVtqWSeZDfs3aIav65bWnAX3sxfucjHyHHUqFDX9el8869Q6M+FV
z4HBD1RcdDwDfR1gW7Cwn5uu5mUw7V39HLknQLcQDytdcWiFs38i233/TBGF
hnj7W6fWmkUVrRBLzhlbiSTg7rj1TuaitlPztV0rgwqokNPU+NnDb0uKyKzk
EuvD6HxmqpG9uAsWBjtr8fhjsu137IWQeLyG3cPPuQQION5HmBxXEs3ODfqK
yGqRSGb30KCT/XYiwNNtuQzSoUJLk8RMBI15F75+I9Vo7Uey+PDsGtj5l9Ql
TjO3tZkO7hAPO/knKGIJTKnhY9WgYQefEKajB3WW3x++ESRdIPaQzNrBFXum
zeX4ZQZrgGsCFUIar2cHl23xFRZZ+Nqe1w+puJZqpI/rwNpg87GOfQbbhe1x
wHF31I6jZUQwjOLhk/iOo+XO+5M5O4OYHDeDGZ/o6ikW+xtbmDohERMLtQkO
mVB6BRUqGtOzPceGX2IlEFt19vxCxYXUMigfulJ2EGwuSbR2Dcwd65RATjii
Fv7qtC8OYozxHcWGxTYsHSXjlIlDja1OrTkTagmGPR1qaSTTTQ8VKiLiZwZT
OaL9sOs8FVeZSv+AvOwsllOK1rwKE+D7E5STf6rTd4LlK1K8QNLgmdkePPDS
xja8EibL9kTeStRSlsQbW6FakHYQjWjXRy03tZmNVOhK4Z9tjyoGAW8+Kqbo
EiDdU2Vo4cGT2fiRVHxPnDJplHh5R+MBSfjxTBw+UFguxvhozlJKgHZDh2Qt
vKD6EvYO22POWEF7uVqSRZH84Coknu347g0Qxf2QsGz89AwD2EqTq1AktoNR
60HMl+/Ejh2Z9mMqDg4ND/dJZV1/98GRjBLkckG3Ien4gUR8VzQOB8ekCzLe
HYsHpaCDqUVYQTlWVfNpAhtRlbhEdCVx2dOCeRHcDdPaRMOD+nxXxQkdXbcl
CC2g1SySFM8kv6kHNfwYuSc86LX5Sd58ODgpc4oiy2h7ULW6dNYziLn+RsCg
fBAiWNmAHI6AOP958+H5P+86n/c97npVWIEMlXUaSyvGEguwmFz8RBZKmoOD
ECf4xShDBTRV+JN00XHwumECpXTzyrGKaqxerFF1NIiFv6YvJurCwEbW5IRu
3t8knzOPLUPjLCarZ1/XLQ9zFtzLWmhIy2h+kOO8nRQ9c2loTA8yfPPIw84n
cKoCcWMJdvc0fq+04X7Ftw+qLj2s+eH3+quPG37+4/ubHdduP2t60H2nredR
Z2/n330vX394/3FgeHiYlAKoRtZz+3He/GbBYiPOmVHB7sNonOVY5qqh4enS
J4wHh2XzU/JnELAd9aVkYoyeOO3Ymlhlcarhq9dS8peoIuunQRHvOy5BvVxN
+oxNfbqxDgREoqaHSS2ZzmTYEotyx+9fa2zzTAPbcXtsqWWGZFV3710qbt/E
9Qy8fVAKtYNFf2lq3U0KbEOSUdfQL78XGNtOSirDLcBc+cGmuIYPk0WkoJo/
6f6RotsnMXqhjldNcVBH5cdMMeuQwbQldqB70Ckxtp1GsoNQJmDNCTMTzDi2
Y9gS+4/ok4KqFtMX84hiuQPRSZR1mBW0yti1Mg0stk10MUrR6uj52YhWivFf
RywFY8gcbc05HL8WxHztfjqlRqBez1JJBLe0Rd/tS4bl/ZcUKVr8fRPXLGVw
PH38iKeMl5sDRXXBYLsoL+Lr5TBdKgDHeXtcBcpn0Xvqi8JcrVqbK0SRb3I9
Zama5CmW86i1uL6ezgYz14EIlBvS8Gso1T0J1MYb0i6RYrlTUSsJmxEP9b/9
WTHdcfzK0hx3X66fF5thZ+/kweXucmRQUj9wEa6XCwSAO3zgatPLwMVzK+g5
vtLizfu/dL7H9gY+mEuopbn8PazbFPkm7uom3LKcveAGHNhsNofDYbMosBW6
iKcf19fDCd54+HH9PByICbc1jbspzQ0hoNQ/t4mSkoRooV6h9g5nWgalz4np
6PvcldPR2U5ubk5s9I7pwuX6uVBSRQy2ozMHnZnp5u3n5+k00+eIqeMxZ6x0
mzou65JwufzCpGCtHmfezt/cz174MGeBJnsiOHr4cnd5urq6uTpzKPnpAywX
P66PE5vj7OLi5OjgvW9Laq1Z+Q8usoF3OthEW6iPN2Qini4P0Jnof9X2UJEu
NHFdYrYXuIKdrlTVEcB0Ip6hnk6qEl58DqDUHmjFa53aI2+HH/6V3pEuEb+0
Vabhl9wctt0SoIHUAC9NEtYYbj7wo/dxd3dH9+LjRom5mM7ITn4+Xl7e8P/D
2euLLtpIP77QuqZ1wgDxs5BUPQOyv289zpv/W8Zi4vHK5LjuQpEalWJmKM9t
7+IFkYfqDK49wSj1MjxrlVaP1zYwE5ffcKUhN4IXLBC29KiXNITKEDA/LZh3
TOOEYgZzNPpHXpSa8IyF9AwPSmf3rTHJnntO2Pe+fap7ZWsJ9f115OsZ+ND5
AwTSEE47O7uhlqAragkyGBQpGgWE3q4oqmG77ISrqQ1qiNT4hl/DNG/+9HW1
Njc3NTU3CZN4/NJLXX1qxhztmTbfx6MGsjY7m0y+Eb1SK2eC4QAPAS93W2gg
R0f67c/H9K5tLTCAfxYFk69n4F1bbUfB0qz942cB+FITP9uxHN0Vz1B0iR2O
Gl2D6J76oSVB2/tqE0aUqmsPMuxsiTWmMgK168C0d/p0I24OFLUH7Rx37NhN
VEhQbDsJPQFaMCv6n2ei724h1Ol5/pdMQ/S4MlgslhYPAIZycxnVWxjoAPj8
qghzPdYAZLDstbkRLWGxiUWVV959fIHcG9eEWa1n4PXNJJR8EWlyyRd2iqHD
cMXSf7+2nSbxlkvDLImVtE1wEHBs6U5tt/CYAR33tyLj0kaj9/pJqN9zJjnI
O1a/d9qrSblZYgn9OpP9/WaR+fvVbX8rUi5tROD5K1Q8fytMcllpYh341Dqz
1i5czzvNVSzUjBsovtIOxuj0jOut2aRU64iu+1uRdXUjgpaVVkzwKDGdZaXH
Yc9BEzxSa80ePmvQ+R4FioWavzX4quOaAGImkt/1mZ4h6+1ub2/vUgBveqVy
3fa30rkAJsXw0CCxxIQJrZQ+Drbjdn4JknSrThn0RI725fhlpjgPnGF7NBVN
mr1yN1mfGmxvEHB5wQQ8Lk/SJtVnfyt9SmIiDMv7iV4s09zuECSNvHSd2YNO
7bpkMwPRhoA/JCxzMNJCzSpgjIr5cks86RWq2/5WpBfDiICXJrY7VMTSpivp
+51iDe+IiJkvxRtiQ0BtgQYgETNfvhNHzcQ5Xfa3oqAYxmR4SE7E0lURprg3
HNthe1SR1dS94aalQLGHGsTMRtkPQjVMlk1E9ioDTGnWdn8rSgtjFNAOnleO
EIsCmWDryd5hO7Hz3Y2HeTPdAvwSy45ZEqNFJngLLLZyvzMVt2AU5kzwPAmQ
dO/PUcRmNyrWLDUWLHulc4Owc+r2ByBgom0LsZMJJptwnOERs4KU/c5IZ06K
eYy+lryOArQMr3E3VpgWCD6JlhT8OX4mnhN7OzT9UN9jqJUJNgFcPLfGVVik
iy3vddQZsWZnYm7reUSxDG97/rw7mYu4bl8bWwtTsSWW4T1xauV7RQqAp9PW
prQl8BtMO2hCC9uO4bXn66Rq82x8nXEzJVUw5/UMfPjzp0e5C+AVzt1gbEVM
g3/YRmgexpVbhgSsv5+98I/8eSf3mMqS4+PZffirlFqzgm+3vexrM3aVzshc
jZ8n0d/7sFmwGPxe3pEVJtjpsXPv16k1Zhl1y78vWqJZpolBgdAoKA49R8p/
dH33wUCZJrrxbxAzwZDszYXYL4hd102qhchm2YhOmt0vWZBTvRw0E3Byg0mF
zY6u24jeGPxmSP/ge2NXoxr+PXoeUXR6EPNLf89dEL1X87QOCvF13fJzylIo
Uu9Pxz5+/Kf2uj+x9xDH2SR+cTv3WSeeNReIrW5TuQgMifxL4o3xvL1/BgKP
pwXzMgNXGTf2SDiw9nHe/K6Spe9+P0uUDX5xNx6eSq01S6yy2MUz5pZqTJZN
YMw6COwLL25//uqecatMc/5tYib4+PzX5xIn8IrXkj7bbYx+D0+nrd8qgp/u
WtuBV5ObV3/+0xxbZom68lLWsB2M4Kjdd22JOYMKIGkK+tj/xih1pBv/Tj2P
KDxh390icI/t+aiRaLB5ayyGbUbgqrZT8zuLFkDwMyzvn7Z4EKleuh0Nikqo
suAGfWWwiNqeY3M4fi245Rx8vf4Ttg3Pv1bPBAN9HX+f3wF+8k7moki0MR+1
sgnz23gzfQlc7nk9u//lfbXF63zRRPhJaJG5+1K7PTEEGPtCN0K0DJfDbh4x
2IoZ5PIvjJ+nIn2C3c5YBDKDppmij5p8VR/x2USM+j0rt4JoWfPZaIPy/qZH
hUnnkMyOZaxy8/5G/cW0hMGwBSWn1JrBJUovO3X03KDU2toibZNMTLZCdDUW
EtItbJywKDotZoLhQVlfS/6D7IUguaa0JfH715IyP9OeaRO1d/1PyZ/BabtO
f/76VupQ/1sdiif9+M/llvgUkRnR++Htb21HxrwOiC78wzbGlaNHQIZk5Xe/
RU2dTGJcupuFSLXBognZsH3NwVxeY7dM1t3I4wa3TMyHNXQRTZihAWlfS8Gf
lWtBfo9yF1RFmINf1SFZj2Fne9Brc2mY5YMc9AN5Vmb5ulkgl73Ws3jvPvRc
uZtM+Or4CouDUetdd+rirpksW/hFHE1dQ/xATn9vf/epyACLJWqNrDUpWCAR
8sE/j9ezFE2DJo4oVpObu/P5SWF4aPB9e0PPhZ1PC+YRndXiqOWpAat5nptV
rEYLLUp/D+vEA2tqI5cTfh5ef2Mu79pqwfmTWDzZwLs7f1SV/+gKUiSEHZy4
FtqMrl5bGcwZf3rgij38tvgf2xietSq5Bn1RILbCmg4/7blumN1w1DI1f5A4
Lm8XjqpXCeg5OLeZeN9SGDEpP4UOoWdC/v7F29bynou+ECoQ+oTX/eyFjclL
L8Z+/kvaEmhFfhv7BYQTd7MWdRQoP9BZsqSnwbPvXvHgO90XztWE3rftEFqf
veaTLrYktE3MA4EmZEKVeUTOSoi3ITiJLrYiWnnEK+f8BmjuPejEPg7oEvlQ
x9T8QeK4Irtqop5bSnm5TcT75tzgOZxvRRHgsftf3n/3UPjqRnTPRb/uOsaf
VRs7S5Z2Fi38s2pDd61dz7c+vddPvH1QJuv5bVhOpjfWhIHBD89e3mp+Un7p
Nl90fV/BxW3pYovc85vyLmwp/o5RecVd8kvg1Xup9zvFL/sem4g31hxp6yc9
E/mDIz1XuFx+mwz5bj6X29D1yeC0nmlMHFmbaCx+Hs0fHGkdXR+JL2od/2Fa
zzSzFPl0iYV08Ewzl6DFTDOXoPVMM5eg9UxDQ0NDOv8P+pflGQ==
    "], {{0, 138}, {240, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 138},
  PlotRange->{{0, 240}, {0, 138}}]], "Output",
 ImageSize->{244, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[15]=",
 CellID->1803188062]
}, Open  ]],

Cell[TextData[StyleBox["Again, it is only possible to plot real-valued \
functions.",
 FontSlant->"Plain"]], "Text",
 FontFamily->"Times",
 FontSlant->"Italic",
 CellID->515965556]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filling with an x-dependent color", "Subsection",
 CellID->294133106],

Cell["\<\
In order to visualize a complex-valued function f[x] of one real variable, we \
use the following idea. We plot the curve Abs[f[x]] and fill the space \
between the curve and the horizontal axis with a color determined by \
Arg[f[x]]. Since the argument of a complex number is a real number modulo 2\
\[Pi], it appears natural to choose Hue[Arg[f[x]]/(2\[Pi])].\
\>", "Text",
 FontFamily->"Times",
 CellID->2135240795],

Cell["In order to be specific, we define a sample function", "Text",
 CellID->392816548],

Cell["f[x_] := Exp[-x^2 + 2 I x]", "Input",
 CellLabel->"In[16]:=",
 CellID->702991358],

Cell["\<\
We proceed as follows. First, we define a set of positions on the x-axis and \
calculate a table of function values at these positions.\
\>", "Text",
 CellID->1868211759],

Cell["xvalues = Table[x,{x,-3.,3.,.1}];", "Input",
 CellLabel->"In[17]:=",
 CellID->676630726],

Cell[TextData[{
 "(The semicolon serves to suppress the lengthy output). Observe that the \
boundary values and the increment are given as real numbers. This guarantees \
that all generated values are real numbers. and when we calculate the value \
of f for one of these x-values, then ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will return a numeric expression. The function values at these points can \
be calculated just by applying the function f to the list xvalues:"
}], "Text",
 CellID->1206701017],

Cell["yvalues = f[xvalues];", "Input",
 CellLabel->"In[18]:=",
 CellID->188430451],

Cell["\<\
The variable yvalues now contains a one-dimensional array of complex numbers. \
With the command Short we can look at an abbreviated form of this expression \
(The parameter in the command Short describes the desired length of the \
abbreviated expression). :\
\>", "Text",
 CellID->1559694279],

Cell[CellGroupData[{

Cell["Short[yvalues,2]", "Input",
 CellLabel->"In[19]:=",
 CellID->1596351871],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.00011849442696537264`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.000034482611891511404`", " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{"\[LeftSkeleton]", "59", "\[RightSkeleton]"}], ",", 
    RowBox[{"0.00011849442696537264`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.000034482611891511404`", " ", "\[ImaginaryI]"}]}]}], "}"}],
  Short[#, 2]& ]], "Output",
 ImageSize->{460, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]//Short=",
 CellID->1372693926]
}, Open  ]],

Cell["Next we generate a table of absolute values", "Text",
 CellID->449994561],

Cell["absvals = Abs[yvalues];", "Input",
 CellLabel->"In[20]:=",
 CellID->1768665640],

Cell["and a table of arguments", "Text",
 CellID->494769706],

Cell["args = Arg[yvalues];", "Input",
 CellLabel->"In[21]:=",
 CellID->537767558],

Cell["\<\
From this we want to determine a table of color values. We could try to apply \
Hue to the list args, but this does not work because Hue is not \"listable\"\
\>", "Text",
 CellID->1648160730],

Cell[CellGroupData[{

Cell["Hue[args/(2 Pi)]    //(Short[#,2]&)", "Input",
 CellLabel->"In[22]:=",
 CellID->245826457],

Cell[BoxData[
 TagBox[
  RowBox[{"Hue", "[", 
   RowBox[{"{", 
    RowBox[{
    "0.045070341448627975`", ",", "0.07690133006700708`", ",", 
     "0.10873231868538617`", ",", 
     RowBox[{"\[LeftSkeleton]", "55", "\[RightSkeleton]"}], ",", 
     RowBox[{"-", "0.10873231868538591`"}], ",", 
     RowBox[{"-", "0.07690133006700695`"}], ",", 
     RowBox[{"-", "0.045070341448627975`"}]}], "}"}], "]"}],
  Short[#, 2]& ]], "Output",
 ImageSize->{562, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]//Short=",
 CellID->1994209618]
}, Open  ]],

Cell["\<\
We have to use the command Map in order to apply Hue to each of the values in \
the list. Map has the shortcut /@\
\>", "Text",
 CellID->903770997],

Cell[CellGroupData[{

Cell["Hue /@ (args/(2 Pi))    //(Short[#,2]&)", "Input",
 CellLabel->"In[23]:=",
 CellID->527311348],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.045070341448627975`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.045070341448627975`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.045070341448627975`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.045070341448627975`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.045070341448627975`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.07690133006700708], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.0769013300670071, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.07690133006700708`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.07690133006700708, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.07690133006700708],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.10873231868538617`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.10873231868538617`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.10873231868538617`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.10873231868538617`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.10873231868538617`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.14056330730376512`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.14056330730376512`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.14056330730376512`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.14056330730376512`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.14056330730376512`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.17239429592214423`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.1723942959221442, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.17239429592214423`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.17239429592214423`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.17239429592214423`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.20422528454052333`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.20422528454052333`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.20422528454052333`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.20422528454052333`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.20422528454052333`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.23605627315890243`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.23605627315890243`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.23605627315890243`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.23605627315890243`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.23605627315890243`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.2678872617772815], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.2678872617772815, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.2678872617772815`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.2678872617772815, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.2678872617772815],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.29971825039566047`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.29971825039566047`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.29971825039566047`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.29971825039566047`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.29971825039566047`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.3315492390140396], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.3315492390140396, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.3315492390140396`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.3315492390140396, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.3315492390140396],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.36338022763241873`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.36338022763241873`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.36338022763241873`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.36338022763241873`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.36338022763241873`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.39521121625079775`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.39521121625079775`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.39521121625079775`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.39521121625079775`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.39521121625079775`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.42704220486917693`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.42704220486917693`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.42704220486917693`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.42704220486917693`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.42704220486917693`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.45887319348755595`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.458873193487556, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.45887319348755595`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.45887319348755595`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.45887319348755595`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.490704182105935], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.490704182105935, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.490704182105935`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.490704182105935, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.490704182105935],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.477464829275686], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.522535170724314, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.477464829275686`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.522535170724314, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.477464829275686],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.44563384065730693`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5543661593426931, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.44563384065730693`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5543661593426931, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.44563384065730693`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.41380285203892786`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5861971479610721, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.41380285203892786`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5861971479610721, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.41380285203892786`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.38197186342054884`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6180281365794511, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.38197186342054884`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6180281365794511, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.38197186342054884`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3501408748021697], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6498591251978303, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3501408748021697`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6498591251978303, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3501408748021697],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3183098861837907], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6816901138162091, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3183098861837907`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6816901138162093, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3183098861837907],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2864788975654116], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7135211024345884, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2864788975654116`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7135211024345884, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2864788975654116],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2546479089470325], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7453520910529675, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2546479089470325`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7453520910529675, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2546479089470325],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2228169203286534], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7771830796713465, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2228169203286534`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7771830796713466, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2228169203286534],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.1909859317102743], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8090140682897257, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.1909859317102743`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8090140682897257, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.1909859317102743],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.15915494309189535`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8408450569081046, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.15915494309189535`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8408450569081046, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.15915494309189535`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.12732395447351624`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8726760455264837, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.12732395447351624`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8726760455264837, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.12732395447351624`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.09549296585513713], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.904507034144863, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.09549296585513713`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.9045070341448629, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.09549296585513713],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.06366197723675805], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.936338022763242, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.06366197723675805`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.936338022763242, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.06366197723675805],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.03183098861837896], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.968169011381621, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.03183098861837896`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.968169011381621, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.03183098861837896],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0., 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.`", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = Hue[0., 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.031830988618379095`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.031830988618379095`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.031830988618379095`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.031830988618379095`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.031830988618379095`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.06366197723675819], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.06366197723675819, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.06366197723675819`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.06366197723675819, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.06366197723675819],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.0954929658551373], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.0954929658551373, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.0954929658551373`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.0954929658551373, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.0954929658551373],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.12732395447351638`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.12732395447351638`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.12732395447351638`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.12732395447351638`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.12732395447351638`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.15915494309189535`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.15915494309189535`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.15915494309189535`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.15915494309189535`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.15915494309189535`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.19098593171027445`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.19098593171027445`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.19098593171027445`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.19098593171027445`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.19098593171027445`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.22281692032865355`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.22281692032865355`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.22281692032865355`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.22281692032865355`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.22281692032865355`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.25464790894703265`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.25464790894703265`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.25464790894703265`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.25464790894703265`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.25464790894703265`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.2864788975654117], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.2864788975654117, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.2864788975654117`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.2864788975654117, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.2864788975654117],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.3183098861837907], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.3183098861837907, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.3183098861837907`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.3183098861837907, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.3183098861837907],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.35014087480216993`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.35014087480216993`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.35014087480216993`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.35014087480216993`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.35014087480216993`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.3819718634205489], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.3819718634205489, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.3819718634205489`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.3819718634205489, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.3819718634205489],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.41380285203892786`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.41380285203892786`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.41380285203892786`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.41380285203892786`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.41380285203892786`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.4456338406573071], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.4456338406573071, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.4456338406573071`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.4456338406573071, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.4456338406573071],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.477464829275686], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.477464829275686, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.477464829275686`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.477464829275686, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.477464829275686],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.4907041821059348], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5092958178940652, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.4907041821059348`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5092958178940652, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.4907041821059348],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.45887319348755584`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5411268065124442, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.45887319348755584`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5411268065124442, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.45887319348755584`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.4270422048691766], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5729577951308233, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.4270422048691766`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5729577951308233, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.4270422048691766],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3952112162507976], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6047887837492024, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3952112162507976`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6047887837492024, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3952112162507976],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.36338022763241873`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6366197723675813, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.36338022763241873`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6366197723675813, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.36338022763241873`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3315492390140395], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6684507609859605, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3315492390140395`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6684507609859605, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3315492390140395],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.29971825039566047`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7002817496043395, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.29971825039566047`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7002817496043395, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.29971825039566047`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2678872617772812], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7321127382227188, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2678872617772812`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7321127382227188, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2678872617772812],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2360562731589023], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7639437268410977, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2360562731589023`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7639437268410977, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2360562731589023],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.20422528454052333`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7957747154594766, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.20422528454052333`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7957747154594766, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.20422528454052333`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.1723942959221441], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.827605704077856, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.1723942959221441`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8276057040778559, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.1723942959221441],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.14056330730376512`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8594366926962348, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.14056330730376512`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8594366926962349, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.14056330730376512`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.10873231868538591`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8912676813146141, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.10873231868538591`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8912676813146141, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.10873231868538591`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.07690133006700695], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.923098669932993, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.07690133006700695`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.923098669932993, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.07690133006700695],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.045070341448627975`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.954929658551372, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 
           1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification])}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.045070341448627975`"}], "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.954929658551372, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.045070341448627975`],
     Editable->False,
     Selectable->False]}], "}"}],
  Short[#, 2]& ]], "Output",
 ImageSize->{449, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]//Short=",
 CellID->2004298314]
}, Open  ]],

Cell["We can achieve this in one step by writing", "Text",
 CellID->813276556],

Cell["huevals = Hue[Arg[#]/(2 Pi)]& /@ yvalues;", "Input",
 CellLabel->"In[24]:=",
 CellID->5663537],

Cell["\<\
Next, we are going to plot a graph of the function f. Let us first plot the \
graph of the absolute value, which is represented by the list absvals. We \
shall convert this into a list of points which can then be joined to form a \
line. The coordinates of these points can be obtained from the lists xvalues \
and absvals. We just apply the command Transpose in order to obtain the list \
of (x.y) pairs. \
\>", "Text",
 CellID->697785891],

Cell["graphline = Line[{xvalues,absvals}//Transpose];", "Input",
 CellLabel->"In[25]:=",
 CellID->279273770],

Cell["\<\
We can look at this by converting the graphics primitive graphline into a \
graphics object and by applying the command Show:\
\>", "Text",
 CellID->1502483695],

Cell[CellGroupData[{

Cell["Show[Graphics[graphline]]", "Input",
 CellLabel->"In[26]:=",
 CellID->2130740439],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1:eJxVk29IU2EUxq9zeSMZBSKF9SERTcjEyMyoPDeQiKB/6qxQC8IiFzEtrRUS
YhJBKCUhaUskYoETiYQwP/jeCrLFktGCGhSTDFFmbWtjKtNRu+e5HzowxuV9
z++c95znyT5rrThnkCRp379f8p9jtVpTlZf7p2Az7dBCVu8Pj8/uKtxG57VI
U3duePHM6d5Nfb3JWKU2HIub39ccoI/uZBjVH+9WvuYnKoh5RnUiYDk5N3AG
vFTVllWXX+tpAM+gPvf6S5yOZvBS1INN1z93b28DT1ItLXsuen7eAU9So3uz
R82vu5GfEN9tp17eGHlE2nX3sgg5y/cfMj1Fvbio3lJMrc1DpOF7l8Smx3JV
2YcR8BbFwomOrqb4GHgxce2SPcMhvwEvKlIS7VFz/wR4EZERub3eUTkJXljk
ZI6tGcz0ghcSpcGCkuq7X5A/L652XF7otH2jh9r9OeEp6ql94J+ieq3ejFiU
Y4NP+qapSONPiyv1LYfrKmfAmxLp7UP9wcAs8n3ieGGO6W15APe9Ii8rbJ8v
+0X3tHOX6EpvvOka/01t2vcrkbBvXWkdDpL0X4RogM9JP+dvF3Uiv5T5lAs+
n/voCOqjP9L7K+b+yYr+L/D7KIL32fn95Mb7PTwfsmI+el/6/Ph+mDZivsyP
0FrMH/shfT9cL0aN2B/2S/p+mbdE67B/5sXpKPTB/SyTH/phXoI+QV8YnKLr
b5L1qZyGPqFfRdcv5xuUHuib66UqFugf/lB0fzDPqPjgH/hL0f3FvDTFBP8x
T1ZuwZ/wr6L79y/i1byD
   "]]]], "Output",
 ImageSize->{244, 48},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[26]=",
 CellID->2064744548]
}, Open  ]],

Cell["\<\
In fact, this line is a polygonal curve, but the corners are too close to be \
visible at this magnification.\
\>", "Text",
 CellID->973366363],

Cell[TextData[{
 "The colors will be obtained by generating polygons which are filled with \
the appropriate color. Assume that we are given n+1 function values f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 "], f[",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "]"}], ",", " ", 
    RowBox[{"...", " ", 
     RowBox[{
      RowBox[{"f", "[", 
       SubscriptBox["x", "n"], "]"}], "."}]}], " "}], TraditionalForm]]],
 "From these n+1 values we can generate n polygons, where the k-th polygon is \
given by the points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 ", f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 "], f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]]],
 "], and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]]],
 "(k=0,..n-1). In a conventional programming language, one would think to \
generate the list of polygons with a sort of do-loop. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " it is much more effective to apply list operations. We first generate an \
auxiliary list of zero values"
}], "Text",
 CellID->1985523742],

Cell["nullv = Table[0,{Length[xvalues]}];", "Input",
 CellLabel->"In[27]:=",
 CellID->949141061],

Cell[TextData[{
 "The n-1 points (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 ",0) for k=0 .. n on the x-axis are obtained by"
}], "Text",
 CellID->705282311],

Cell["xpoints = {xvalues, nullv}//Transpose;", "Input",
 CellLabel->"In[28]:=",
 CellID->1717553184],

Cell[TextData[{
 "Next we form the list of points with coordinates (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 ",f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 "])"
}], "Text",
 CellID->441180514],

Cell["ypoints = {xvalues, absvals}//Transpose;", "Input",
 CellLabel->"In[29]:=",
 CellID->1807349354],

Cell["\<\
Now, this is a list of corner points for the polygons. The command Drop[list,\
\[PlusMinus]1] removes either the first or the last element of a list.\
\>", "Text",
 CellID->2111889510],

Cell["\<\
cornerpoints = {Drop[xpoints,-1], Drop[ypoints,-1], Drop[ypoints,1], \
Drop[xpoints,1]}//Transpose;\
\>", "Input",
 CellLabel->"In[30]:=",
 CellID->917276954],

Cell[CellGroupData[{

Cell["Short[cornerpoints,3]", "Input",
 CellLabel->"In[31]:=",
 CellID->2036147712],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.`"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.`"}], ",", "0.0001234098040866796`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.9`"}], ",", "0.00022262985691888897`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.9`"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "58", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.9000000000000004`", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.9000000000000004`", ",", "0.0002226298569188886`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"3.`", ",", "0.0001234098040866796`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.`", ",", "0"}], "}"}]}], "}"}]}], "}"}],
  Short[#, 3]& ]], "Output",
 ImageSize->{449, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[31]//Short=",
 CellID->1382680639]
}, Open  ]],

Cell["\<\
The list of polygons is formed by mapping the command Polygon on the list of \
corner points.\
\>", "Text",
 CellID->792955486],

Cell["polylist = Map[Polygon, cornerpoints];", "Input",
 CellLabel->"In[32]:=",
 CellID->2066823567],

Cell["\<\
Finally, we combine the color directives from the list hue with each polygon\
\>", "Text",
 CellID->1555700344],

Cell["coloredpolys = {Drop[huevals,-1],polylist}//Transpose;", "Input",
 CellLabel->"In[33]:=",
 CellID->1042279383],

Cell["Lets have a look at this:", "Text",
 CellID->565481502],

Cell[CellGroupData[{

Cell["Show[Graphics[coloredpolys],AspectRatio->(1/GoldenRatio)]", "Input",
 CellLabel->"In[34]:=",
 CellID->1432466139],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Gg==
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[34]=",
 CellID->892531570]
}, Open  ]],

Cell["We can combine this with the line of the curve:", "Text",
 CellID->1103895342],

Cell[CellGroupData[{

Cell["\<\
Graphics[{coloredpolys,graphline},AspectRatio->(1/GoldenRatio)]\
\>", "Input",
 CellLabel->"In[35]:=",
 CellID->1057786561],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SZRimPuGTRtYbwl5KSorK9U6NxC/Rp+f5zN83UcwaJ88ecJ6V8jPs2LlO3L/
cVRm9Pm5PpMo+biOK95ZwXpXyM/w4MEDhVoHiX9Bn1/sM/yln0KnonWx3hjy
IuKTU1z6JZpkRp9f5DOJckkKip85nfXGkOfy5ZdfcjpDT+M99PllfO55fx7n
JtDSWO8N+Qmqqqo6dvOFOR+GvEvQ55fxOYQshA/HdvT1otWx3h7y/1m8LE8e
+kv4iKDPjfCZ5Mh/6bM4bynr7SH/xMWLFzm1FjbfQJ8b6zPcSOW0PC2Q9Q6R
vxMSOaBN3DoqM/rcaJ9JTpt1w0IG4IvrWgp5K97WBvSBfdXoc9N8huoF2j7d
897Gh6PZc+TIEU7vFnaw1CQz+twUn0lO2K3/4Fy1tEzW+7Rrbty4wev0sPd4
/2KCPr+Kz/3JATi+jNdraaWst2qnPHv2rHtQSNsFq+EyQZ+bwWfyUdtVMd17
BdJiWe/WHolJSORGjKMyo8/N5TMNNzYiNimB9W7tjvTMDG1QCJy6jz43r89w
f4dTiP/srEzWG7Yj5i7Ikvf0D71ebpIZfW5On8lHoRUl8h7d5+fgi3W0BgsW
58r9fODu1Ygfn6HPLeFzBLkCd7+W+3VLmJHMetu2TF1d3fQZyXKf1+D2ZSAP
0OcW9Jlchh/+FwCmJSbik2dbggcPHrTv5NGGk8KTcioz+tziPtM8/bOmd/iQ
Uf+O3ybdvJw7d87g5SmdOdar+huTzOhza/hMLntVPJUmzHTr0pWugLUFtgD9
x27Hzh2cVpDsXACkyJucQZ9b02fvh7XwgEi27OKctDt27MRrj1fhm2++8Q8P
VoZ1hVPbqMzoMyuf6/PFKaV/mH9oOF0Kay+sj/Ly8mmpyZyLINk+QUKMJpnR
Z5Y+03vpIiLJ2M5pXabNSKULYu2IdXDq1KnxsROkgtwpdQjc+xUQI/psIT5D
UUM+uec0LlWqFMZPii0pKWHti4Vy+/btrVu39h4aybUX2qwMgYoJnmQ71JuM
PluKz5Iis9Ke9O3yijYjV8p17qF9h9DF4Sv/k4Zn/J08edKYb+zRN9BRJVVE
u3rtGwvVU4DE0qDPFu2zsSGrq72nfajoFu3IqXoE9zUa8+lC7efZiPSr+MSJ
E/TLOW1+mn+kv4PcQdVD5ZHkDQWd4JkfkB7hZJFJZvTZOnw2kvBNBGIJTH4G
gws8eiaptD0cHOX+AZFpafO3bNlC120Vd901NTWVlZWPHz++e/duaWnplStX
zp8/X1xcXFRUVFBQsG/fvo0bN+bl5aXPnRUdOzZsUFDH1wwKgeM0Updwdfup
cp+V7m2OQpuH0JbAADKemmwK+mytPjekfyqBHgR8H0Lnox08VioUcWp1uFSq
kXNCB8NrvYIGvT42Nm3WXCoG1eODDz749NNPqTBUGyoPVYiKRHV69OgRVYsK
1iyiToyOdtHr9c7OzjodjZNGI6jVGkFQKhRyjpM6Ojo6OABAG4mEvk8/pnFS
ubppO3Zy7dbdIyC4S1i/boNG+I6YEDQmKfDN7MDEVb2m7xg478gv8s6N2XQ/
YSkRTVlJMuOJaEo2WSmSXFMyyS6RbDMlnXwmkkKa+Pq3502ZTa6J5IkpWZVV
4m1iSvYlIhabk/EZEX9vTspmIhrrk5hPxDnmZOaSdNGc9dlkrWjOxwvI70Rz
iueSk6I55YmkXKzPnZQ6Ij41J+M+ES+ak32aiEfMydpPxO3mpK8l4pL/i2jO
/HSyRDRnWxbZLppzNJscEc25kEEuiuY8SSFPRZrap4nlRDTlJpl7koim/Iks
+B0RTdlLsulNmpJH5qUT0ZREkiGSOTQp9T0bTckge0Tye1OyyVd0aFOyyC2R
3DZldmWt+ISYEn+eiA1JP0fEQnMyDxNxmznZW4mYa05WDokXzVmScH/mmHMx
vzjy+sAdb/RaNTIwe1hg0uDgiX39okK69fPrEuzl0d3DtZOL1k2jclIqeEdH
qUTShmrm4OBANaPiUf2ohFRFKqTJTKoozcToCS/2uaKioqysrLy8/Pvvv7/b
AP3I/fv3f/zxR9MXTnV1NT6ojrQCVDMqG1WOikf1oxJSFU1OUjnLG6AfYX1M
BEEQBEEQBLFi/gZCzlXj
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[35]=",
 CellID->604822695]
}, Open  ]],

Cell["\<\
We combine everything into a single command. This can be done using a Module.\
\
\>", "Text",
 CellID->1205825801],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fillit", "[", 
    RowBox[{"xvars_", ",", "hues_", ",", "values_"}], "]"}], " ", ":=", "\n", 
   "   ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nullv", ",", "xpts", ",", "valpts", ",", "lines", ",", "fills"}], 
      "}"}], ",", "\n", "      ", 
     RowBox[{
      RowBox[{"nullv", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "xvars", "]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"xpts", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xvars", ",", "nullv"}], "}"}], "//", "Transpose"}]}], ";", 
      "\n", "      ", 
      RowBox[{"valpts", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xvars", ",", "values"}], "}"}], "//", "Transpose"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"lines", " ", "=", " ", 
       RowBox[{"Line", "[", "valpts", "]"}]}], ";", "\n", "      ", 
      RowBox[{"fills", " ", "=", "\n", "         ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"hues", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "\n", "             ", 
          RowBox[{"Map", "[", 
           RowBox[{"Polygon", ",", "\n", "\t\t\t\t\t    ", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Drop", "[", 
                RowBox[{"xpts", ",", 
                 RowBox[{"-", "1"}]}], "]"}], ",", " ", 
               RowBox[{"Drop", "[", 
                RowBox[{"valpts", ",", 
                 RowBox[{"-", "1"}]}], "]"}], ",", " ", 
               RowBox[{"Drop", "[", 
                RowBox[{"valpts", ",", " ", "1"}], "]"}], ",", 
               RowBox[{"Drop", "[", 
                RowBox[{"xpts", ",", " ", "1"}], "]"}]}], "\n", 
              "                          ", "}"}], "//", "Transpose"}]}], 
           "\n", "             ", "]"}]}], "\n", "         ", "}"}], "//", 
        "Transpose"}]}], ";", "\n", "      ", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", " ", 
         RowBox[{"{", 
          RowBox[{"fills", ",", "lines"}], "}"}], " ", "]"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "/", "GoldenRatio"}], ")"}]}]}], "]"}]}]}], "\n", 
    "   ", "]"}]}], "\n"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->511060668],

Cell["Let us test this command with a small list:", "Text",
 CellID->1609542723],

Cell[CellGroupData[{

Cell["fillit[{1,2,3,4,5}, Hue/@{0,.25,.5,.75,1}, {0,1,2,1,0}]", "Input",
 CellLabel->"In[37]:=",
 CellID->1880527849],

Cell[BoxData[
 GraphicsBox[{{
    {Hue[0], PolygonBox[{{1, 0}, {1, 0}, {2, 1}, {2, 0}}]}, 
    {Hue[0.25], PolygonBox[{{2, 0}, {2, 1}, {3, 2}, {3, 0}}]}, 
    {Hue[0.5], PolygonBox[{{3, 0}, {3, 2}, {4, 1}, {4, 0}}]}, 
    {Hue[0.75], PolygonBox[{{4, 0}, {4, 1}, {5, 0}, {5, 0}}]}}, 
   LineBox[{{1, 0}, {2, 1}, {3, 2}, {4, 1}, {5, 0}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948]]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[37]=",
 CellID->1514725244]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase-colored plot", "Subsection",
 CellID->1716024370],

Cell["\<\
We can easily use the command fillit to define a useful plot command for a \
list of complex numbers:\
\>", "Text",
 CellID->516207380],

Cell["\<\
ListArgColorPlot[list_List] :=
   Module[{xvars,hues,values},
         xvars\t= Range[Length[list]];
         hues\t= Hue[Arg[#]/(2 Pi)]& /@ list;
         values\t= Abs[list];
         fillit[xvars,hues,values]
         ]
\
\>", "Input",
 CellLabel->"In[38]:=",
 CellID->63501780],

Cell["f[x_] := Tan[x + 0.3 I]", "Input",
 CellLabel->"In[40]:=",
 CellID->2122527548],

Cell["yvalues = Table[f[x],{x,-5.,5.,0.01}];", "Input",
 CellLabel->"In[41]:=",
 CellID->1469638919],

Cell[CellGroupData[{

Cell["ListArgColorPlot[yvalues]", "Input",
 CellLabel->"In[42]:=",
 CellID->2011887486],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdYU9f///v8BAIBEnbYCSussKcMIaywQ25YKg4UJ4gstW5JcINbwb2o
/qy7FXG1Wlu31Fm1+lVxtfXbilvBwfmdgP+Wv0jIvOfG5v1EHiDk3Pf7c165
3ntz7jl2g0ZjQ//niy++KNWGX7DcceySktzxfAP4Q0Zh6YhhhUPyEgrLhgwb
UhI8qAf85VL47wn8J/oeqKWWWmqppZZaaqmlllqK07Vr11paWlC7ULyuX7/+
+PFj1C4Ur//85z937txB7ULxun379vnz5+Vs5OzZs1+06TND+tatW5okDZjr
M0P60aNHxjQKzHX37l3UXhSp169fu3gxYK5Lly7J006/3OzcKk/3KMu1a9cq
yBohNGZcSeYE1/CB9rPmzELtRZGqrJobP8Qxabxr8Zgi1F4UqQ0bNoSm0XtX
efYekClPO6YWBstvc3LX+3OzkhTljQhi+ThUnY4s3NOzZ3QAai+KVK+YgKl7
ek4+HensbY/aiyKFZSWVrvevbIw3MqfK3MiNGzcs6NRdAJt5J8HYwkCB9tCq
qalJl0La9Z637EWqjj7p3bt3qB0pRu/fvyfrkba/SF31nqdDIcGYqB0pTGYW
BuvvJKwDmAmdCrGUrZHa2tq4bDvI8wrAN7DQ+2wOyfbv3x8Ybf0NwFYDzNrD
BJ4joHakGDU0NDiyTOoAtgZgrtHWMCZqR4oRBM/UUr8e8CHPftl2EEvZ2iku
HZU/h9XOs0cKfdeuXYr1iUrTZ1T0LXNu5zlokMPKlStRO1KMVq9enZLr0M5z
RJlzxYwK1I4Uo7q6uvRhLu08J85hjS4rlK2diGj/eftC23lmT3KdJpimWJ+o
lNE7ufyrgHaekxd6Dhs1BLUjxSh/1JCShV7tPGd/FcDtnYzakWI0rXzq4Emu
7TwP2hcaHO0vWzum5tRvfkto5zlrc0BKdqJifaKSmydj44WYdp4HHQwLkrU+
RBPc/yw+GNbO8+gL0fYedNSOFCN+VsL0zQHtPE/8LcFIplO5x48f61O1jwOs
neeC81EMd1uFW8Vf8KRJW0fzaHNaO8/j7icY0CioTSlGpjTKt/cT23muaOZq
6WjCsKhNKUCuLNuvzkW18zwbYDpUbRk+NTh+/LhnAO1vnsvb6tPa2qoMw3gK
nh3b2BmcBPx2nmcATJtCevr0KWpf8gpG0KOQTgF+O8+zAGZsZyDzpQDiCCIH
9z/Hm7l/82wLsTx+XNp2NmzYwOvv8DfP02F9GNTbt28rwTKu2rt3b2SCbUee
bfxpp0+fRu1LXsEInv60jjwzE2xhWNS+5BVEzppBPQuwv3n26u8A4ZS2nYmT
xo8WuHXk2eGzuAS0YMGC/gVOHXlmyXEJiDiCEVKy7Try7FfAhGFR+5JXELnQ
aOuOPIcJ3MZPGi9tOxlZiVVfBXTk2WeE07Jly5ThGU/ljxoyZZFnR56DJ7tO
LZ+K2pe8mlY+tWCya0ee2Yu8hqr+pRuIXM4Ip448J30VkJQl9aUJv0Dnbaci
O/IcPoc1qqRAGZ7xFCcxZFVdSEee49b5pQ/go/Ylr/oN4M9d59eRZ15dSFhi
CGpf8qq4pGD8HFZHnnNOR7oEMKVtx9BI9+R/kzrynLwzOIYXpQzPeMqRabH/
SkxHnjOO9vIIcUftS171DGX97w+9OvI88EqsFdMCtS95xeVF1ewI6shz/p9J
uoZkqRqBJ8v6FNINgHXkue+FaHsvOyXZxk0kbY0rzdyOPA95kOAV54Hal7yy
sDI88SChI89FLTwNkgZqX/LKw8tu7/mojjyPkf6S1Llz5zy8zT7iecTTFJKu
lvKc46B79+7RLPRuAqwjz0WtvB5aPV6/fo3aneyC5jW1etxs5XXkuRTwKRZ6
MDJqd3KJrKt16WnKRzxbeJtBRCVvZPv27Ylc+kc8FwGMbKzz119/Kc+8svXj
jz8GhVp8xHMxwExdjK9evYraney6du2ak7PRLYB9xLNNmOXRo0dRu5NdEDYj
Y3IjwD7i2ZFLh4hK3s68efOGFzE782zha6bSl2pra2sz+tp15pkRZ6PSl2qh
+ag4m848O+fYb9y4EbU72XXmzBlPH7POPHsWM6uqqiRvp2DUkOnzPTrz7JjO
2Lp1q/L8K1vlgmklE5w78+ym4pciq6urBw5z7Myz10QXlb4UCXfCKRijM89B
CzzzCvIkbyclNeKr3cGdeWaVMOfMmaM8/8rWoMHZi1b5dubZd6Z7kSrfoDRm
bPGUGe6deQ5d7Zs9OBu1O9k1d+7c/GJmZ55jdgdHpEZI3g7Lg370fFRnnoOW
eEn1viCa2Gy/nQfDOvPca3NAkiqPHszKSly9OaAzz3EHw/yi/FC7k10FBUPm
LvbqzDP3XJSdJ0PydqhUncYnyZ15Zu8ODk8OV55/ZcvBwbzhRlxnnhNPRLj1
dEPtTnYFBbkeOhnZmWfsRpyFkzlqd7IrKSl88+7gzjznPEnRMdCRsBHRSFF9
UhPgdeY55UI0Q5r3BaHU2tqqqdnjj2ZuZ54zHyRQ5bjRErloNOrVBwmdee7X
zO2h1UN1R0V6eDBOXIzuzPMggJEoJAlHjZ4/f97Ly+yTPPd+nKxN0VZ2CiXp
wYMHlpb6jwHWmeeBANPQ1lDROUagbRJJ4wnAOvMMc+lb6cPgqD3KKD097XtP
Uj7Js5mX6YULFyRpZNeuXcnJ9E/yPABg2gbaT548UXYQZejYsWNBQRZd8Wzo
YHj9+nXUHmXRr7/+6uBg2BXPFsEWMDhqj7II7n4NDHSeAeyTPNOTbXfv3i1J
O4sXLy7IZ3bFs6mHqfzTLiHR5s2bszLtuuLZOtrm0KFDqD3KooMHD8ZE23TF
s322PQyO2qMsEn1I7WHaFc/MUcwlS5ZI0k5JccHsWayueKanMr755htlZ1GG
Zs6cOabUuSueHXMdV61ahdqjLFq5cmXuQMeueHYZ6wqDo/Yoi+DuNzWF3hXP
HnM8R5WOkqSddCzu6y1BXfHMLHCW8H1BNI0YPmDpYu+ueHYTsCZPnYzaoyya
PGli+RS3rnj2WeY7cMRA1B5lkeg4YSSzK56Dvw7mZHAkaSfAj3nqBLsrnlkS
vy+IpgROyLe7Qrri2W9tANYfQ+1RFvXry1u7yq8rnkP3hIUkhKL2KIvgccKc
mayueI46Fe0c6CJJO6Ym+r/dT+yK58CtPTmZ8crOogyx3GwvnYvtiudehyO9
IrxRe5RFEeFe3x8I74rn2MscWxYdtUdZlMHnfL0psCuek39P0Tfr/sb8169f
k3U037/FuuI58lS0k7/UdwcQQWQdrWdN3K545txMNGWYofYoi+g2Jjevcbri
Oe05T4uskqN8/X2dTv4U2RXP6SBDk6zZ7Sjfq1evMh2NxPCc+DCVQlO9jx5E
EyMbkVvf8Lvimfc2XUNbQ+UmrBBNJ0LSePMyrSue00GmjjEZxkftVGrRzCh/
3EsUw7MRs/tRvvv3749j24jhGQOZPUgar169wieUonT27FkfTzMxPPNBJsWa
qnIz20PD1paU1hZMDM9m3uYNDQ2onUonCBhJqwfMJYZnmzhGtxMO1NTUDOnv
KJ5nYxcTlRv9vmPHDiyZIZ5ny3CbH3/8EbVT6QQNhwVbiueZgTnC+KidSicI
mCvTWDzPjkNcIa7i25k44cvpk9zF82wdx1C50e/z5s0rHsEUz7N9X+f169ej
diqdNmzY0CfdTjzPzGKP+fPno3Yqnerr62MjrcXz7D7D78uJX4pvp3dm8saa
APE8Ow13r66uxieXolRYMGye0EM8z66TfMqF5aidSiehoHxisYt4nj3mBw4d
NQy1U+m0fPnyYQMcxfPsXxuRlN3NHKqhwe4/7Y0Qz7P7jICSsSX45FKU0lIi
d20MFs+z78qwzNws1E6l0+Dc7OVVPuJ5Dt4VHZHKRu1UOo0bWzp9gpt4niOO
J7uFsMS3Y0EzuHcpQTzPgf/LTuzufUE0ebozfj4cJZ7n8EMJ/qq2nEoM2//g
tjDxPEed49I9VGyiid6ZSZtqAsTznHA/i2oubu7clpYWLc0eoIkvnueI4yku
ga64RVOIKPraT2+niOeZ859MmoOKTcDiYEe7cSpOPM8pT3O0KZKOfieIgvxd
ju2JEM8zBgb1IIkb5Xvt2jVHhmG3PCf+0Uf8+4JoevToEVWfBB5h4nnmteT2
0OqhQssDQatw/9PyIE08z7DftQ1UbKIJczPqH5cTu+XZ0Encpba3b9++vFnQ
Lc8YyNPU0VShS9ANDQ0+LLNueeaDPIqtoQpdgr57966NJQX8iXXLs5mPpQpd
goZo6WhrgP9i3fKc/3IqhFZcW78XS8KzsYvZ5cuX8conr7Zu3cqLZ0jCs2U4
/fDhw6j9SqojR46EBVpKwjOd56xCE01AtFwcjSXhuQhM76YtyXi2TXKqq6vD
JZwCNHfu3NIhzpLw7DDQQ4VWwoVWB6Q7SMKzc5mfCk00AdFKirbFk2enfJ+F
CxfiEk4BGjksd6nASxKe3aYFT5g0AbVfSTV50sSpo10l4dlraWTuyEGo/Uqq
RYsWjeznhCfPHvN6jSzKxyWcAsSJDq5bEyIJz/61nLQclRkFndM7beN8f0l4
DtmbGhSnMnNBlxQVzJvkiSfPwTtTIlJU5hI908Hi1+9jJeE54liGe4gnar+S
KjSI9dO2CEl4jv21nwXTGrVfSZWaGLGjJhhPnqMv9qN7qMaK5+/fv9fU+J+W
62mS8JzwWx7FTGVGw5qZUH47nSAJz2kt+T20NFTlUqSHK/1ifQyePKe+LFCV
UeKNjY10KypoxCThGQOjNclaL1++RO26e0GTZG1NUS4JeMZAIZVuBEuB2rVE
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
vQ==
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[42]=",
 CellID->1214933614]
}, Open  ]],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 6 we can use ColorFunction to color the graphics as desired, however, \
antialiasing does not work (but should be possible to get it working)."
}], "Text",
 CellID->1935645851],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ListArgColorPlot6", "[", "list_", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intfun", "=", 
        RowBox[{"Interpolation", "@", "list"}]}], "}"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"Abs", "@", "list"}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"FF", "=", 
             RowBox[{"First", "[", 
              RowBox[{"ListLinePlot", "[", 
               RowBox[{"Abs", "@", "yvalues"}], "]"}], "]"}]}], ")"}]}], ",", 
          
          RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ColorFunction", "\[RuleDelayed]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", 
             RowBox[{"(", 
              RowBox[{"Hue", "@", 
               RowBox[{"(", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Arg", "[", 
                    RowBox[{"intfun", "[", "x", "]"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"2", "Pi"}], ")"}]}], ",", "1"}], "]"}], ")"}]}], 
              ")"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Antialiasing", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListArgColorPlot6", "@", 
  "yvalues"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[43]:=",
 CellID->170049354],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnW1sHMUZx6etXFW9Vqo/1P7QuqqBfEhVywoyrWWKOnDUtErA1EAxF2FE
iEkoJMR5UYgwlORs39lJ7AuOQ95wjsRgHwmJKSCOlMA1hFgtEQ6U5kQqcQG1
nBS1Na1MXVTBdPZmczj3sre7tzv7PMs+SizH8a32N/fb25n/zO7WLrm/9e4v
E0LWfI1/ab1z/dWrV9+54aZv8X/csnLNPctWdiz9xcq1Hcs6Vjcu+Qr/4TD/
+xH/q3zPvPLKK6+88sorr7zyyiuvvPLKK69cXR//93/Hpz44P/2x0zticXlc
uMoqrl1HTrdvfOHBx45bsldwyt1cnYPHnN4Ri8sSLn448I0siYzwr6eSaav2
zfHyuHAV/3DOcvFPadPbiU++x7ewLtnIv/IDxMI9dLZ4m3Ci1VN+jwtFCa41
ZXMNjr3Bt7CJkSXRkJtOYYIr6DoucVL2uIoVf+190RD3+a54B98g/9i3cCcd
LMHF22dpIsC5XDN68rg0SnRaHkoEuM9LM12OM6m/W76r8ivLFXQj1wPxjiyX
O7rQgmtD2Vz8Xeav7U82Kp/P6Vr+/eFX37V8b+WX4Oqd8vP2uWu6yuMCXlZx
8Vfx125P1yr9Z0b497zbafneyi8xyOVcQTdyDabqXMkVKZtLdMJHGRE+B6Kh
nn0nLd9b+XXgxXcEV/AClztSaI9Lu7i9K3cOZX1uG+/im7V8b+UX57onMpJt
n1snOj0uyGUV17JQfG00lPX5ZrcMmbNcQY8LQ3UOHsvnOpf+yOh2+Ku2JgJZ
n29wSxSQ5Qp6XBiKU4TiHWVyiUHl0GRL1udFqTr+E945t2m35dRcruAXgAt7
xCG45h6n5rhOJdP8VWOpuqzP12SGltjbZy5X0OMCX8LnfC4+SDS0HRHWvTBd
leMz9ohjLle2fRaHY+7gOpyu9bgKlgjrXmNkrs+t+CM7Ef4IruAcLuzRlru5
TpTNxb1dERnJ8fkG/JHdXK6g27laXMHVEY7l+LzQeGTXOXisKxrK8fnaTFSC
elXSXK6g27l+hp+Lfw5zrhNlcymD5XhHjs90sgV7BMT3f/NEZ8777lauqzIL
hrFzbZnoPFEel7jMYU8ikOPzFZmoBO+qrRyuoMcFu8TKur2JQI7PP8pw6b9Q
RYQkzycbc3xegHyVneA6NOXPed/dylWHfJVdlutEeVzi8pZjqbocny8zFf3B
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
lVdeeVW8/g9BLDBY
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[44]=",
 CellID->1114734822]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The package VQM`ArgColorPlot", "Section",
 CellID->1933453141],

Cell[TextData[{
 "The (non-standard) package ",
 StyleBox["VQM`ArgColorPlot", "InlineInput"],
 " provides additional functionality"
}], "Text",
 CellID->1971878030],

Cell["Needs[\"VQM`ArgColorPlot`\"]", "Input",
 CellLabel->"In[45]:=",
 CellID->1386409706],

Cell[TextData[{
 "All symbols defined by the VQM packages start with the letter \"Q\". In \
particular, the package implements ",
 StyleBox["QListArgColorPlot", "Input"],
 " which corresponds to the command ",
 StyleBox["ListArgColorPlot", "Input"],
 " defined above. But the command defined in the package accepts the standard \
options:"
}], "Text",
 CellID->1190358792],

Cell[CellGroupData[{

Cell["\<\
yvalues = Table[Tan[x + 0.3 I],{x,-5.,5.,0.01}];
QListArgColorPlot[yvalues, Frame->True, Axes->{True,False},PlotRange->{-.5,4}]\
\>", "Input",
 CellLabel->"In[46]:=",
 CellID->402561692],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 237}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 237},
  PlotRange->{{0, 360}, {0, 237}}]], "Output",
 ImageSize->{364, 237},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[47]=",
 CellID->700816926]
}, Open  ]],

Cell[BoxData["          "], "Input",
 CellLabel->"In[48]:=",
 CellID->1195827430],

Cell["There is a variant which corresponds to Plot", "Text",
 CellID->2119647384],

Cell[CellGroupData[{

Cell["\<\
Timing@QArgColorPlot[Tan[x + 0.3 I], {x,-5,5}, Frame->True, Axes->{True,False},
PlotRange->{-.5,4}]\
\>", "Input",
 CellLabel->"In[49]:=",
 CellID->307362805],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 91}, {203, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{203, 91},
  PlotRange->{{0, 203}, {0, 91}}]], "Output",
 ImageSize->{207, 91},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[49]=",
 CellID->1829755134]
}, Open  ]],

Cell[TextData[{
 "Further documentation is available via ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s Help Browser, provided the VQM packages are properly installed."
}], "Text",
 CellID->1132108964],

Cell["Moreover, you can get help in the usual way:", "Text",
 CellID->650245528],

Cell[CellGroupData[{

Cell["?QArgColorPlot", "Input",
 CellLabel->"In[50]:=",
 CellID->132309513],

Cell[BoxData["\<\"QArgColorPlot[f[x],{x,x0,x1},opts] is used\\nlike the usual \
Plot command. It gives a two-dimensional plot\\nof a complex-valued function \
f of a single real variable x\\nin the range {x0,x1}.\\nThe plot shows the \
curve Abs[f] with area between the curve\\nand the x-axis colored by \
Hue[Arg[f[x]]/(2 Pi)].\\nThe default options of Plot are changed to \
Axes->{True,None},\\nFrame->True. Package: VQM`ArgColorPlot`\"\>"], "Print", \
"PrintUsage",
 CellTags->"Info503734531893-7828141",
 CellID->1080410346]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options[QArgColorPlot]", "Input",
 CellLabel->"In[51]:=",
 CellID->1482449837],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "GoldenRatio"]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Compiled", "\[Rule]", "True"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DataRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "None"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelingSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#1", "&"}], "}"}]}], ",", 
   RowBox[{"MeshShading", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Opacity", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"QBottomLine", "\[Rule]", "0"}], ",", 
   RowBox[{"QBrightness", "\[Rule]", "1"}], ",", 
   RowBox[{"QPlotDown", "\[Rule]", "False"}], ",", 
   RowBox[{"QSaturation", "\[Rule]", "1"}], ",", 
   RowBox[{"QShiftPlot", "\[Rule]", "0"}], ",", 
   RowBox[{"QSquared", "\[Rule]", "False"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", "None"}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
   RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]}], "}"}]], "Output",
 ImageSize->{581, 377},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[51]=",
 CellID->429137965]
}, Open  ]],

Cell[CellGroupData[{

Cell["?QSaturation", "Input",
 CellLabel->"In[52]:=",
 CellID->1271691129],

Cell[BoxData["\<\"Option for QArgColorPlot. QSaturation->s causes the \
colors\\nin the plot to appear at saturation s. Default value is 1. Package: \
VQM`ArgColorPlot`\"\>"], "Print", "PrintUsage",
 CellTags->"Info523734531893-7828141",
 CellID->1555550159]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples for using the ArgColorPlot package", "Section",
 CellID->559656922],

Cell["This example shows a complex-valued Gaussian function.", "Text",
 CellID->175514194],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QArgColorPlot", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "6", " ", "x"}], "-", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[53]:=",
 CellID->1372011227],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQlYk9eagI8LFYttrZ3rUtu5tU4dre3V1tpSn/aO1paq9wgYtyAuuLC4
sS+JRNkhkB+JZaxKq2K9CmJVCi6hdaGIpBVaGVsRdYoU+8iIC6AiDipnDhxk
UjAQyPL/Sb73iT4xf8Dz/3n5+M45X74MW+Ij8uiJEAqwpX+JFodM8vdfLJ3Z
n/5jtnfAck9v92VTvQPdPd397Zf0og9upX9q6J+m+wQwPqWlpQUFBdevX+d7
IABgALKysiQSCVWa74EAQEc8fPhQl6dlNWPswQCAPpSUlGzYsKHNgwcPHoyI
iAgLC6usrGx9EHwGBM7JkyeDg4OVSqXmg7///jt9hAbtc+fOJScntz4OPgMC
R6VSlZWVtfH52LFjx48fZ/dpwtz6OPgMCB+aUbTxOSMj4/Tp0+z+unXr7t27
x+6Dz4Dwae8zlTY/P5/dl8lk127d3Xnk19BNeUsCEt2X+ygUim2pO+vuP+Bj
sADQCe19Pnv27FdffUXvVPxxNUAStjDiEL3JApODPYND3PwDVyQvCt3tGadS
qct4GjIAaKXV59raWpYtNzY20pSDS0xa7hPiFrpLycmqpAOJA8qaPC5r3FSC
Zpa8kiTzyqaSbzlQDIEaED7llTWecYepsXmqyWQfImuQps8ExRL0bYpzAX0C
zUNAaUDIUD+ppcvke34oe7PxMtLmcyO68c3YK1TppLRCvocMAFqhMjflEmcm
X2tEHfv8GyLrnIvpk+mEke9RA8AToGZSPyVqp8ME6eJzBiIrxEX0S4rOV3b+
3QHAhJRcvkHNXJAuiyLoiT57eHhkjVvaxudg24YFvsc941SQSAPCgdrol3TM
Vb5HVG+nzecnxudgRBxfuQGJNCAoWKYx/ry9M0Fd9XkyIpOmnIOsAxAI5ZU1
1EaH1PiXCOqez4P6NojX5NAID1kHwDsx25sWk/tVj+y2zwN6kuGTmpbv9p+4
wPfZAFYNmwaOyaXWDtLHZzScOPirYWII8EvopjyxPNOm3qlTnzk8t3SIawc+
D1pwA5ajAR7JO1PRHJyTEZmmv89oDnEIU9NvWFVdx/eZAdYIncGJ5dk29WG6
+NxpvkF9HhR1g5Uq8X1mgNXxODhTZdcaymeUQBy4phANWTRgYmK2F4jlh23q
DxjW50EZN2ChAzAxLcsaJwoQyTSsz+hoo8PGfFjoAExJc3DOsakrM4bPLx+9
BCEaMBlV1XXUtwlfF6NHFbr7LHVZeGrEIl18RheviRKbtgv5PlHAKthyoKlu
2e6/67rk8/b/cL7eb66OPg/Pb9pzpFNOvs8VsHBoWkuTW4cNanSVdMln3fMN
6jOqKRTLm96QxffpAhaOSl1GI+fLeyrfTjs4M3LtrHD//v8j1fQ58Jt3JPGO
CcppV04P0MfnMSea3jZLJ558nzFgydC0VhR1/IVdFdPilT0bLr9U8uWU/1zd
6rPo+rOrFY40PqtLXvzys0n6+Gx3KwP2VgCjUnS+kjo2Krbsjc+Ojc48wfKN
eVIvTZ9XRs3cX/P04byRevqMGndPTN8FeyuA8UhKKxSvy7GJaLCP3zv820Lm
85x1K2zq/9GSbzT08v3io6AokX/g/EsnB7eZD5YOEVe8EKG7z4Mux1GfofkM
YAxalukCilE4eTsx+98Pn2rxee1y1NgSn12Ojw74+j2ab5Tf6SMJnPfo656a
63UcXpz+fojuPiMSIFKmw8IdYAz2n7hAfX5+Xi31+V+3/vL3zV9Rn/vdSHOK
X9mab4jzRwbljKE+//G/vcNDZz3U8Lkb+Qb1eZRaCrNCwBjQOIn98hAm1GeU
3WifunfKZwmiqMC/lEv63sbzpPNb8o1tk6K2TeI+m1J45FU982fqc5/6aTAr
BAwOmwkOd7jy2GeCrpLe93974vpzdkNv/defmc89yUefpCfArBAwLHQmSKV6
aliDps9G3U9p9Xn0+VkwKwQMCI2N1KiJomL0IjG9z4PJa3OVO2CvEDAUbE9w
9KhKfXzuUj1SG58/Va2mAyivrOH7SgCWAI2NLr7Hh/Yg+vjcpXqkNj6/W/0q
vFUWMAhs2dlpyq96+qxPvvE2sXPZnOwZp+L7YgBmD+vlNbX/bX59nvnzZOgJ
BuiPX9KxhV65U1ADvz7PumMHC9GAnrBl52X2503kc7xWn2c/QB5f+8FCNKAP
7K0oPrY3heCzX7E9vGkF6DZs2Xm1+JQ/qunM56md+vzkfuZd8Tn8DloctwcW
ooHuwTrGRI8sNYjP+sdn6vOaTHdoCAZ0j5jtBUslR75AlcLxecv5YbAQDXQD
tuwc7nxKUD7vrUJ+yclQEQ10FVbtfGBwidB83qpygopooKvQGOjtm3MK/SY0
n0+VDISFaKBLsI9EybBXG9BnXfo/6+Lz+QrEbZXB3jegO2yP+1L/YmH6fFz1
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
ogAAAAAAAAAAAIBp+D92UTPY
    "], {{0, 157}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[53]=",
 CellID->728712098]
}, Open  ]],

Cell["\<\
Most of the options for ListLinePlot can be used also for QArgColorPlot. In \
addition, we can influence the Saturation and the Brightness of the colors \
for the complex phase:\
\>", "Text",
 CellID->230149189],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tmp", "=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"QArgColorPlot", "[", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "6", " ", "x"}], "-", 
        FractionBox[
         SuperscriptBox["x", "2"], "2"]}]], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "th", "]"}], ",", 
         RowBox[{"GrayLevel", "[", "0.5", "]"}]}], "}"}]}], ",", 
      RowBox[{"QSaturation", "\[Rule]", "sat"}], ",", 
      RowBox[{"QBrightness", "\[Rule]", "bri"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sat", ",", "0.5", ",", "\"\<saturation\>\""}], "}"}], ",", 
      "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bri", ",", "0.7", ",", "\"\<brightness\>\""}], "}"}], ",", 
      "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"th", ",", "0.025", ",", "\"\<thickness\>\""}], "}"}], ",", 
      "0.001", ",", "0.05"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Initialization", "\[RuleDelayed]", 
     RowBox[{"Needs", "[", "\"\<VQM`\>\"", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[54]:=",
 CellID->499371276],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bri$$ = 0.7, $CellContext`sat$$ = 
    0.5, $CellContext`th$$ = 0.025, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sat$$], 0.5, "saturation"}, 0, 1}, {{
       Hold[$CellContext`bri$$], 0.7, "brightness"}, 0, 1}, {{
       Hold[$CellContext`th$$], 0.025, "thickness"}, 0.001, 0.05}}, 
    Typeset`size$$ = {360., {111., 121.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`sat$5015$$ = 0, $CellContext`bri$5016$$ = 
    0, $CellContext`th$5017$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bri$$ = 0.7, $CellContext`sat$$ = 
        0.5, $CellContext`th$$ = 0.025}, "ControllerVariables" :> {
        Hold[$CellContext`sat$$, $CellContext`sat$5015$$, 0], 
        Hold[$CellContext`bri$$, $CellContext`bri$5016$$, 0], 
        Hold[$CellContext`th$$, $CellContext`th$5017$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      VQM`ArgColorPlot`QArgColorPlot[
       E^(((-I) 6) $CellContext`x - $CellContext`x^2/2), {$CellContext`x, -4, 
         4}, PlotStyle -> {
          Thickness[$CellContext`th$$], 
          GrayLevel[0.5]}, VQM`ArgColorPlot`QSaturation -> $CellContext`sat$$,
         VQM`ArgColorPlot`QBrightness -> $CellContext`bri$$, 
        PlotRange -> {-0.2, 1.2}, Frame -> True, Axes -> {True, False}], 
      "Specifications" :> {{{$CellContext`sat$$, 0.5, "saturation"}, 0, 
         1}, {{$CellContext`bri$$, 0.7, "brightness"}, 0, 
         1}, {{$CellContext`th$$, 0.025, "thickness"}, 0.001, 0.05}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {186., 192.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(Needs["VQM`"]; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 ImageSize->{407, 380},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[54]=",
 CellID->566943256]
}, Open  ]],

Cell["\<\
Next, we illustrate the usage of QListArgColorPlot. First, we create a list \
of complex numbers.\
\>", "Text",
 CellID->230361853],

Cell[BoxData[
 RowBox[{
  RowBox[{"mytab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "x"}], "]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[55]:=",
 CellID->1926131477],

Cell[CellGroupData[{

Cell["QListArgColorPlot[mytab]", "Input",
 CellLabel->"In[56]:=",
 CellID->1323239061],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQtcVNe18E/amvr78LtXr70Bv/t5L9Y+TFsutIdYSh5ONCEkIZHgIzAx
yURF8A2IOsgEBJVBAR2dJCoqjPgCVMQTTIcayAStkxpSqbkgpS3jI/2mFVLD
L6KFGM+3z6zDlPKcx3nsfWbWr83veBiGs/fZ+7/W2mutvacsXB235BsURa0Z
i/4T98b6J9PS3siYMx79Y96qNUuTViUufnZVemJSYlrEwm+im9fR/5MfoCju
mnVTWh3i7m/5xS9+8WVhHCL3U/jFL37BQu7du+fKx/zc8Itf/ALS0tKyc+fO
ATdrampycnKys7Ptdrvzpp8bfvGLX5CcO3du3bp1BoOh/81r166hO8gIaW5u
NhqNzvt+bvjFL35BYjab29vbB3Cjrq6uvr4errVarfO+nxt+8YtfQJAnMoAb
lZWVFy9ehOusrKw7d+7ANYJGSUlJa59I+ZA3b3Wbre1VH/we/Q9dS/mnZZeG
S9eh4Y1X7KN/WkFy1f4FNBy9+u6/fyX340gnqLHO0Y46Qe7HGVoGcwPx4fz5
83Ct0+nu37/vvI/Mj4I+kewJUe+9lnOm//8O/fJ/JPvrMgoaM6k76vo3PHN3
gy9gE02cHcc+7t/wJL0Z8VPu55JCUDNRY/u3fe+pJgyxOZgbly9fLisrQxcd
HR35+fnO+7L4KajTUNdFmT6YYL9OfX1vwu+7VCWN0JkSP4nEgsYPamay9kRD
2ByW+vbtCQFVL6phBmGrgwQRNEcQHlFLw80fBdy6SfXen/yRPWYnd0fx6IDR
rkve2xL8GPvAN29OfsiwUAf6Ajd09OdGV1cXsiiQgYFcFaPRmJuba7PZnJ+U
nhvIrkCdFlldR7FtFNuJuEF9zlJtbOSBJmVbHYgMiA+65AM3xz/GUpMQN9gA
ip1MXX18SrKuAhkhuI0iAWVL6QX0cqdeOk+x7RTbhbhB/YUd87vemO0cOhTs
rIGmKI7dcntsKEv9O+IG+68U+12qYfYsdB8ZYHI/oEvS09Mz4I7E3GixdaLu
UpW/R7HWAdygPmJVxkaljiLEBESGZG3V1SBkafykPzfYUKpxbgRBo8hdAZ/0
YWstxTb25wbVwo6x9Mbp6xFOFempIU3hsDRMt8c+yVI/7M8NNpw6nJiIfmq2
tsv9mJ6IlNyAuROfXzPm7pkhuTHm3d64vHpFal6YOw1h6Sz1xGBusDOpw8sT
FclMmDtRpncpdghuUOfYCRVdSmUmsrKStadujo9nqV8M5gYbRem0RkKZKSU3
YO5MvXScYofmBvUeO7nYjj6DPinNI0kjaGCgRuVpSlkqdjhu3J4fkKYrQcyU
+2EFFvBQAm5VDscN6jQbbmhGn0G2qNwPK6SAh1Kl0rNUzHDcuPr6FEKX9STj
BjIhEFqjTCcp9tAI3KAOsVF5VtSZJEJ4OIGVsZvjV4zADXYu1bBqlsKYCW5p
qOUYxR4bgRtjDvTG59Zm7m6Q+3mFFKQC0lKO3x67aARusAlU8bpUEpkpGTfA
2Ai07RuVG4HbO5W0QArGRnHsPpZaNDI32CQqLVtRJgcyNuLzmTF3d4/MDaqU
Dc1vU5KbBsZGQ1g+S702MjdurnyIRJNDGm70GRvlFGsYlRvUTjYqx4o+r4xV
jj5jQ+cKNxo2zFJMaLLP2DhAsW+Pyo0xhb3xObWIM3I/tTDiMDZOslTKqNxg
l1PFb6YSZ2A780U7OjrE+ytmazvqmclXdrrIjcCNncqw2BH6UEMM8UdYaq0r
3GAzqLQchZgckOU15m6eK9ygCtnQ7DYSLfbBgqwmLlAS8Y6L3Lj5JnkmhzNf
9MIFEVGPJkKc4QTFZrnIDSqbjcuuV8D0Ae+sJXin69wwb56tgOkD3llkNTI2
cl3kRoCum7jpM6Q4wijM7bFbXOQG+yZl2KQjy8CWwE8Be/Vh63a3uPHw+nYF
OLwOe7WapfSuc+P2tgAFTB8A5gR7luvcoDawqkwugYeg6TNY+pazjrHUJte5
0bg1giz/VAJugIM/5m6KW9wYs6qX9LB+n716yC1usAVU8dZU0qcPAmbMnqMU
m+IWNyan2slNhQKBdOirQcVucQNNi7TNJQRFlMTmBjj4qvJiRwe5wQ1qBRuZ
3kT09AFg3h67z11uNBojiJ4+fRZmnrvcoJLZOF09QdNnsCBg6pJRk952lxuH
i7jEP1LKlMTmBgSkJl9Z7wE3JifbyTLeBgjyWA3xyEkpdpcbbAmVlkeS9hkg
fRbmIg+4EZ7STND0GSAATHPEcQ+4cfPAQwSlH4jNDeRoxOdX9XWQe9yg1Gz8
m6SmA4GT0hB20jNuHDYmEhebcwoCpqr8HYp9zQNuTHiti6DpM0D6Yu7lHnCD
LaN0W42kxAJE5QY4KZHVRR5zI3JlE6HTp89JOeEZN64emUKoqwLAnHpprWfc
oOaxcRtIDaU56p1rWMpDbpj3zybF1hKVG31OynKPuTH5FSIXyvrSNlB7POQG
W02l5RPpqvQ5KXEecyM8mUhXpW8Z/IzH3Lh5khhXRVRuOJyUkxT7jMfcoKLZ
eF0tcVGVPiel1htuHN5HpKviSAzeTbHPe8yNCbFdJCoLiKTcHG/2mBtoWugK
yXBVROWGI5Ky3UtuRC4hL6rS56TUecONluoQ4qYPVM0/bE31hhvULDZuPXlR
FUckBUHjV95wo+qgmghbC0FjiUPOnj0r7Df3+blLvOTG1Dk3iEsAc0RSzrJU
vTfcYBuo5C0VZNlaoHMDbj3rJTfCNc1k2VoATHOExUtuXDWTsa4lnr3R5+c+
7iU3xkT2kpU/2ReMa/CeG8UlhCWAOdK99lHsL7zkxuTnCQvBQ37s1aALXnID
TYu0AgLWtcTjBhpCUaZdjg7yihvUI6wqsRFpcDEeUgzp83MbvedGw7uzCLK1
IMU63JzhPTeon7LxmSSta6GZnpZSy1KN3nOj2ESAshCJG31+7mJBuPHwi+0E
lXo5hhAaPL/znhu3L5FUqwJVzxPsMwXhhmoxV6sid5tcEgifFcc2CMKNxrME
1KqIxI2+ITRDEG4EhHaTUlYPQ+hwtFUQbrDNlG4XGQvsLB8+O06xPxSEG1Of
vkGKsoClvMZplwThxu1PCVAWInHDsdHT8b4O8pYb1FQ2bg0ZC+yQstI47VOh
uFF1Wk3KCqEjfLZZKG4E/LiblGQG8Exvj/2DINxgf0/pjLgrC5G44UgTzRCQ
G5EJZERj+yKwV4XiRktjCP5WK9u3Gjz1UpxQ3KD+kxhl4YjAonfdLhQ3qmpw
VxZicKNvCM0WkBtTHyMjGouGUJ4GTYYbQnHjvp0iYj8BCCgE3HpYQG5EvkyA
soDV4MPRjQJyo+US7qk7YnCjbwh9X0BujAnqxd9qhSFUpfpUWG5s2a/HP5yE
PNM4QynFfkdAbkz+mR1/ZQGeaXOwTUBu3L9JJeVjnbojBjeQbekYQuMF5AY1
no1Z2oC51QqrwS3BnwnLjfcsBJQ7OTzTdGG58eB3CFAW4Jneo24Jy40dR3Q4
KwtnvqhQ9ICAwqPVaYJz45HnmjG3WmEIsVS3sNz4459wzyHs80yfEZYb1DgC
lAWa3Zs1vxacG2casFYWgtsbMIS+d+lpwbnxXz/C3WpN3VG3RWMVnBs9t3G3
WsEzHXfr/wjOjenPYq0swDOtVLUIzo0/XsNaWQjODRhC/3IrSHBu/Ou/YR2Y
gyF0QvV7MbhRdAxrq3VL6YU5hpIH2G8Kzo0f/BTr9XBY3GgKtgvOjZ4erJWF
4NxAQ2iuoeRb7DcE58a3vsHOScE3MAdD6HfBnWJwg7mAtdWKnu2J6lQxuDFh
AtbKgg+7Uz0ObtiE5cYmE77r4YJzA3Xj0+U6kbihim3CNvcYhlA3dV8MbnzS
jm9gDjzTMOtsMbjx7QfYuRgrC+SZ5mqsInGj3IJvTb2w3IAh9DPrbJG4ERKG
b+4xGkI5GqtI3Pjiawrb3GPwTCfbp4jEjZm4KgvwTI+o2kTixsc2SVP+ampq
cnJysrOz7fZ/8gpPnz6dn59vMBg+++wz501huQGByCn2KSJx4/+Ox7RQha9s
im4WjxsbTXo8c4+RZ5qQXzGepUTiRhiuygLKUuqn2UXiBpoWkimLa9euITLc
u3evubnZaDQ673d0dGzbtg1dtLS07N+/33lfWG7sOPaxOr/iOywlEjfQoFRr
cTx9GIbQ2Wl28bhx0IJp7jHywZ8t14nHje8FdeGpLKAsxTa2VzxurNtjlMZH
q6urq6+vh2utVuu8j7iRm5v7xRdfnDt3TjxuoCH0okkvKjeei8exvBps9U/H
d4vHjdorERhGFmDDhCcsavG4EYSrskCPtDKl/i8UKx433jEnShOGrqysvHjx
IlxnZWXduXMHrnt6eoqLixE61qxZ84c//MH5eQG5Ae6eyqIWlRuPRbRjuFgE
Q+gGxYrHjda7ARiqXYgihdpCROVGTDyOGzehhhfFNonKjapLEm3chCBw/vx5
uNbpdPfv34drZIccP34cXXz55ZfIDkGOjPPzS/qJN38ahhBtCxGVGz8L7sSw
PhQ90qb4RlG5gQblCkMJbmoXokjf5d6PiNyYqWrDzUeDEMChiHZRudF46yFp
lMXly5fLyspYh2OSn5/vvI/cE7OZIzYyPLKzs/tzQyh7A9y9H90NEJUbP6BY
3CILYKubItrF5kZuuQ43Hw153/P2GMXmxnT8lAWEACxBXaJy4w9SKQtkYCBX
xWg0IpfEZrOhO11dXcjAQLg44BD0o8bGRufnBeQGah0aQqh3xObGvGS8ahZg
CL0X3Ck2N0qs2GV/oed51pwoNjdCxmJX4AaGVjPFis2NHAmVBaKEi/cF5AZq
3YvVqWJxY8I/uPF8NF41CzCEfkexYnPjXRte2V9gq8+8NEtsbvyYYucnN2Dl
o6XuqMvQWCXgxttYZn8JxQ0YQs9YZ0vAjacwC+gj4yc1uUECbnwiYUDfFYEo
0qP2KRJwYzZO2V+QrlMY3SwBN05Jm/3logjFDbDVVbYQCbjxBE4BfRhC26Kb
peHGepMeHx9tx7GPUdvR+5GAG89GYLSnPaTrHJlml4AbHzmUBVY+GiscN8BW
h94RmxsRjqVRTEoFwdDaH3ZDGm7kSxXQd0WQrT7fpJeGG7McS6OY+GhgaP1y
fLc03FgtVfaX6yIUN1C7EvYYR+TGCgG58bLGiknSNQyhk0Fd0nCj2BHQx0Ht
gqH1kjlRGm48jlMcbUvphUXa2nPc+5GCGznVqfj4aCBCcQO1a151qmTcmIPN
0ijY6vUUKw03Ku1TMPHRwNB64dIsybihxiaOlqQ3p2usknFjpyOOhoOycIog
3IAh9JJ1tmTciMVmaRSZPWs0Vsm4cZbFZXtzMLSes0+RjBvz8Vgahbzorao2
ybhRhlkcjXVwQ6vVFhQUXLjgeZALFkVftIVIxo0X8FgaBVs9N7pZSm6k4VEY
i9j1an7FM473Iw035uCxNAqLonum2Z3c6BaZG+9hFkdjHdwoKSlpbW11VrJ4
ILAo+nxf70jADTQoX9XKf+4wGFo7w25IyY2NeCyNIna9YtJLyY2XHMpCdrUL
htax8d1ScmPFHiNW6SuC+CnI61ywxygxNxZgsDQKQ6g0qEtKbmzHYGkUDK0E
i1pKbszGY2kUzd+F2trTFCslNzZgtjQqCDdQixZUp0rMjVcwWBqFRdETFCsl
N/ZhsDQKhlbClQiJufEqBlmjSXrzao1VYm7oMSsx8J4bMIResc6WmhsYLI0i
Q2uVxioxN8ox8HbB0EqwT5GaG3IvjYKhtVHVJjE33sIsa9R7bsCi6AJbiNR+
CgZLo+gBNkQ3S8+NlXJnjYKhlcBSUnPDUVAvo9oFLVk4zS4xN0yO3VfwyRr1
nhuwKIp6R+p1UbmzRmEI5US0S8+NtXJ7u6k76l436aXnxutyF9SDoWUM6pKY
G4dZKhGn3Ve85wZqi2aPURZuaDRWGdUuGFqFwZ3ScyNb7kQg9NffMCdKz403
HAX1MhqZYGih9yM9N1bjtPuK99xAbVmE1J8c3Fgoq7cL+xQVU6z03Ngmq7cL
htbiS7Ok58ZC9KWy7jWK9NRyjVUWbmzAqaDeS27AVleJqEVycCNR1kQgNHqT
khtk4cY7stZIgqG1xBYiCzfe0Fhl3GsUNTw9ulkWbuQ5lAUmG1N7mS8Ke4ou
Qy2SgxtLZfV20Z9eGd8oFzcWyeftworWcpaShRtLHEujssTfwdDaENEuCzcK
pNpr1BVx5ot2dHR48OuwTLTqboAs3FjtWBqVRe2CobVW1SYXN5bL5+1yiU97
jHJxY6l88XcwtHKDO2XhBpoWmvwKTJZGvfRTUCtez6+A3pGFG2+k1MvSk1Ck
kB3cKRc31sh3DBPnpJTr5OLGKvni77CiVeh4P7JwIxmP0iTWa26gViSa9DJy
I0mmkzXA0NoytlcubmxwHMMkvdqFatDlFrVc3EiXL9ucM7RS6mXkRopDWche
msR6xw3InVtlUcvIjZUynazBGVraWj3FysWNjTJ5u2BopdtCZOTGEpni76jh
yfGNMnIjHYPSJBBvuAHLRGmXZsnIjfRpdll6kjO0NFYZubFZpo04wNDKuPWQ
jNxYLkf8HQytVao2GbmhxWYjDm+4ActE620hMnIjQw5vFwytZdHN8nJjsRzZ
5pD4lMVSMnIjTY74Oxhaa6bZZeRGNgalSSDecAPicbl9vSMLN3Ll8HbB0FoV
dkNebiTJkW2OSLXUpJeXGxvkiL+DobV+fLe83FiIx0Yc3nCDS3zaY5SdG0sl
93bB0EoN7pSXG8vkSCDkPFNzorzc2CTH8W1gaG2gWHm5sRiPbHNvuMElPpXr
ZOdGiuTeLsTj1lKsvNxYJXkCIRhaWutsebmRR7GLJY+/I920UGOVnRtJ8sXf
+4szX/S3v/2tW78Iy0TrLWrZubFO8tpqLpiSUi87N1IkD6lAenCuLUR2biyX
PNucq8OKbZKdG8tkir8PEI/zRWGZKOdKhOzc2OLwdqVUu2jEvhHfKDs3UlG3
51dIGVLhE5/uBsjOjQxp4+98HVZEu+zcWI7Bbm+sF34KLBMV3XpIdm4Uju+W
sifB0FqoasOBGxppEwiRoZVoKDGwlOzc2Cxt/B0MraTgTtm5sRKPkIrH3IBl
ItQ7snPjLWk38AEff9E0OxbccOxtLk3DWYehtdKkx4EbhdLG30FLJo3txYIb
GIRUPOYGt7WmSY8JN1ZJGFKBIbQoqAsLbki4gQ9krWRZ1DhwY6+08Xc0T1/V
1qL3gwU35N7tjfWCG9yiaHUqJtxYL2FIBbJWFlEsFtyQcAMfMLT0l2Zhwo3l
Eu5tjpzBVzVWXLghTvy9pqYmJycnOzvbbv+npUKz2bx582a9Xt/c3Oy86Rk3
YJloo0WNCTc2ShhSQWN1QXIDJtx43bFdrTTmOmStGGwhmHAjPb5RMmWB/tCC
6GZMuPGqCPH3a9euGQyGe/fuITgYjUbn/T//+c+IGF9//fXnn3+OPuC87xk3
IJhitIVgwo1dEoZU0B96Jb4RF26gUSTVngwQTEHvBxNu5EoVUuFP+ohox4Qb
C0SIv9fV1dXX18O1Vqt13j9z5gz6EYLJZ5991v/znnEDfPwDtx7ChBv7pQqp
QDAlQdWGDzdekSqkguiUbCjBhxs7pQqpQDAlIbgTE26oRShprKysvHjxIlxn
ZWU5T309cuQIclKQC1NcXHz8+HHn5z3jBgRTjjl6BwduHJUqpAKqZ/40Oz7c
eFmqPRmS9OY0k34wN8Jl4sY+qUIqoCXnj+3FhxtqoUsaEQTOnz8P1zqd7v79
+3CNWHHq1Cl0gVyVzMzM3t5e5+cLCgqYPnHxr6BnXmPSY8WNNZKEVGAIzQ3q
wocb8yTZkwGCKXqLGh9uHJcqpMKtaGlr5zneDybceFnokMrly5fLysrQRUdH
R35+vvM+MkLgPrJA1q1b5+SJZ9zg4nHVqVhxI0uSkAoEU2IpFh9uzJFkTwYw
tHZdmoUVN1ZJElJBbmCCxooVN+YJXaWCgIBcFaPRmJuba7PZ0J2uri6tVovM
DGRvlJaWIm+lsbHR+XkP/BQIpmy1qLHixlZJQipolCYkN2DFjRckORMBgikH
bCFYcWODJCEVzsKMbsaKGy+JU6XS09Mz5H3kniCA9L/jATdA9Ry0hWDFDZMk
IRX0J+bFN+LGDbX4ZyKAg3bG8X7w4UaB+GciwGiPjWjHihsvyF2l4gE3YAgd
s0/BihsnxA+pgI8fq2rDjRvzTXqxi0MRlxbnV+DGjd3in4kAKQfPB3dixY1o
uatUPOAG+Piod7DiRq34IRVQPTFhN3DjxosOb1e8hrMOH3+dSY8bNw47jExR
13ZASz4zvhs3brwsa5WKB9xAT5u6x4ghN9ZrrKL2JPj40cGduHEjRvwqFfT9
28yJuHGjTvyDtyDlYBbF4saNeeIbmSOIB9zgginlOgy5kSXyKhkkTD5Bsbhx
42mRq1TA0NptnY0hN5aLvPFX5u6GuRorhtyIkfUsFXe5AQmTuyxqDLmxS+TE
YzQ+41PqMeTG4yJXqYCPf9wWgiE3tCJv/IUaPju2CUNuPCPrWSrucgNUz7Er
ERhy45jIicdofM7RWDHkRiRLvSJmlQr4+LW3HsKQG2+JGVKBlINnVW0YcuNJ
Wc9SceZ9tba2uvJ58PGrbCEYcuOMyInH3PqYqg1PbsSJeZYK+PjW+xSG3Dgk
ZkgFtOTjwZ0YcmO6JHk7w4m73AAfH3oHN258LGbiMQyhpyLa8eTG82Lu5YIs
mUyTHk9unBbzLBUwtCKDuvDkhlq+4+nd9VPQc640lGDLjXTREo+hKDIyuBNP
bjwt5lkq6Jtzy3V4cuMjx1kqIhmZkHIQRrF4cuMl+Y6nd5cbyMfXmfTYcmOz
aCEVUD2hY3vx5MbPRTtLBVbC936gxpMbTQ4jUyRlgb52TnIDttyIknZ32f7i
LjfQc+63qLHlxj7RVsnQEFJra39CsXhyI1S0s1TAQatuicCWG2+KVgrNBVM0
Vmy5MUPC3WUHiFvcgCF02DobW24cF22VDI3MFzVWbLkxTbTEYzC0LH+egi03
isQphYayApWqDVtuhEu4u+wAcYsb4OO/bwvBlhvvi7ZKhr42KrYJZ268JE7i
MayEt35NYcuNA+Lk7YCWfCyiHVtu/FDC3WUHiFvcANXTcjcAW240i7NKBnH8
J1RtOHPjBZNeDLWLWLTKUIIzN94TJ28HtGRocCe23JgqwoaBLopb3IA4fntf
72DIjT+JU90Gqidsmh1nbjwmTuJxkt6cXarHmRvWoC/EUBagJb87thdnbsSI
mbczgri7PWCOSY85NzaKUN0GQ+iHQV04c4O+9JQYapfba6VejTM3rlJfi5EB
BVryPykWZ27MkukMJmfe1/Xro68JoCc0Vqdizo38+I8F70nw8SdRLM7c+JEI
icdgaFX8ejbm3FidUie4skBf+PwbVsy5ESlm3s4I4nq+KMTxj1jUmHOjTNUq
+CoZGkJzU+sx58Z/iLBKBj7++T+GYM6NjZoLgle3cSvhCY2Yc+MHDmUhfSjW
dT8FVM+HVyIw50ZN2FXBexKNyefesGLOjYfQRBY68RgcNNuXAZhz45CqRVgj
E4Kwv5jZhjk3psi0YaDr3IAhdNEWgjk3fh38F8HNdfSF02e24c+N50z5wiYe
Iwol5Vf85SsKc26ciGgTVlmAlgylb2DOjQkyVbe5zg3w8btYCnNu/IW6KyyB
YQj9NLIdf27MqE4TVu1m7m7YVKrHnxsXgv+fsHk74KD94Hud+HNjjvi7Ug8W
17kBqocIbizRmgXsSRhCU6Z24s+NRywLhF0lQ9/2TlUq/txoHf+5sMoCrOug
f+nFnxvRclS3uc4N9GxbTHoiuJGjOSdgUBuG0IRxvfhz43tXHhXQXIeV8Io6
Nf7cuEl1C5u3A0HYid9m8efGdDmq21znBlf+UJ1KBDd2xf5GwJ6EITRuDIs/
NybZvy+g2gUH7cKnEURwI1dzTkAjkwvCJlqJ4EaYHKFYF7kBqufkB2oiuHFY
1SRgKBYNoWcWWYngxlh2jICrZLC3W1NbCBHcKIy3CqgsuCDsa41EcGOS7b+l
D8W6yA1QPR83RxDBjfppvxewJ9FXzXylkRRuxBlKhVK7sBL+979TRHCjXPU7
oZQFaMmfP9dGBDcm2qdKH4pF0CgpKWltbe3o6BjhY6B6Wv4UQgQ3rMF/EioU
C3H8sKfbSOFGlGmrUKtkiD9pO0pI4cb5aX8QSlmAlvzvx28QwY0H2G9IH4pF
3NBqtQUFBRcujKSkYG3wfi9FBDc6qL8I1ZMwhL7/8xukcCPcvEwocx3xJ++A
nhRufBJsE0pZgJb8XlgnKdyIM5gkDsW66Kegp0rWVxDEjSTtLwXpSRhCk6Z1
ksKNUMvrQq2ScXs0MYmkcOM21SmUuQ5acnwgSwo3okwFEodiXeRG5u6GvP16
griRq/lAkJ6EIfTAOJYUbgTapgtirsOWI1W1aoK4kSRQ3g76koTMWoK4EW5e
IXEo1kVuoKcqrkgliBsHoi8I0pPcGW0bagnixgT7TwRRu+CgtXwaQhA3tmg+
FERZIC353FIrQdwItSyUOBTrCjdgebnql2qCuHFU9RtBehINoaglVoK4QbH/
KsjaDhhaV9umEMSNPbHChGK5bUVfbSKIG4G2SIlDsa5wA1RP428iCOLGxeDL
gvQk+pLIhCayuBFnOOi9uQ5Hh7CfUwRx44TqE++VBWjJ6S+1EcSNCfYw743M
mpqanJyc7Oxsu33gaRrd3d1r1679/PPPnXdc4QYfhG0KIYgbnwZ96n1PwhAK
faGNLG5EmbZ7vxkFF4QtKiGLG/8T3Oq9sgAt+cMn7QRxg2InemlkXrt2zWAw
3Lt3r7m52Wg0Dvjp3r17U1JS3OUGmKyogwjixi3q996b6zCEJkfayeJGuFmA
qlhEnry9erK40R7U5r2yAC353Uc7yeJGnKHMGyOzrq6uvr4errVabf8fnT9/
/tSpU/n5+e5ygwvC5lUQx42UFG9X12EIBYZ3ksWNUEuy92qXC8JWJpLFjXvU
de+VBWjJ//0DlixuRJl2eLMmXFlZefHiRbjOysq6c+cOXP/1r3/dvn07skMG
cwPyRUGG/E4uCLtHTxw3Nmne93J1HYYQNZklixuBNm6DYm/OfARDy3xmNnHc
SEup9VJZcBG0zFriuBFuTvfGyEQcQHYFXOt0uvv378N1UVERMjbOnTuXmZlp
Npt7e3udn4d8UZAhv5MLwpalEseNkmiLl+Y6DCHiuBFw62demuuIOZzFciGE
OG7kaeq9VBZISz67wkocN0Ity71ZE758+XJZWRm66OjoQKaF8/4nn3xywSGI
G2fPnu3PjZH9FD4Ie1JNHDfKVQ1emutcEHa5lThuUCy356Q3Zz6CoXWz6SHi
uHE4+ryXygL9+oxFTcRxI9AW7c1oRwYGclWMRmNubq7NZkN3urq6+i90uLu+
wQdh6yKI48YnwVYvzXUuCKtpIpEbMXv2eWOu80FY9H5I40aV6oI3aheyZMMT
2ojjxgT7DO/XhHt6elz85Kjc4IOwDSHEcePq+N9405N8EHZ+G4nciDIZvQnF
IubodhhJ5EZLcKM3apcvY3zeThw30MyQsip2VG7wQdgWijhufEl97I25zgdh
n7GTyI1Qi1ehWC4I+5aeRG5cDfqtN8oCRvt/PdNJIjfiDIclq4odlRtcEHZL
BaHc2JDseVUsH4Sd2UkiNx62LvNG7XJB2LJEErnBUpe9UbuwVdH/eoQlkRtR
prckq4odlRtcENaoJ5QbmzVmj811UD1jwntJ5EagLc7jtR0wtKqOqQnlRlqK
58oC/eIcbT2h3Ag36ySrih2VG1wQdn8qodyoVP3K455EQ4hL3ghlSeRGwK2Z
HpvrfCWsOYRQbuRpaj1Wu+gXo1OshHIj1JIuWVXsyNzgg7CH1YRy492Isx6b
61wQdrWVUG5QLO3x2g5fCfv+FEK5URx71mNlgX4xYnEzodwItM2TrCp2ZG7w
QdjqCEK50RT8vsfmOldMvbyRXG7E7PHwGC/w8dmPKEK5UaV63zO1C0FY+o02
Qrkxwf6iZBsUI2gsccjZs2cH/5QPwtaEEMqNz8a/71lPwnbEoa+3kcuNKNNu
z9Z2uErY/BJyudE4rd4ztctH0OI6CeUGmhmShWJHtjf4ICzqIDK5cZfiuOHB
MV4whKa+fINcboRaMj0z17ntiA16crnREvyBZxsU82c7zu4ilxtxhqPShGJH
5gYXhN1cQTQ3MpNrPOhJOBM2MLaTXG48bE33TO1yQdjiRHK5wVIWz4xMcNC+
/TRLLjeiTHukCcWOzA0uCLtdTzQ3tsfXeKB2+SDs073kciPQpvFgbYffjviA
mmhuJGvPeKAsuCDshnqiuRFu3ixNKHZkbnBB2LdTiebGCdW7qBXdf//KrW6B
M2GpmSy53Ai4NccDtcuvhB+LIJobeZozHhwszgVh061EcyPU8qY0odgRuMEH
YfepiebGB2GMB+Y6Uj1R6VaiuYHGpQehWDC0WipDiOZGcawnRib6lZ8vbyaa
G4G2RdKEYkfgBq96DkcQzY1Pg0+jVjRcuu5Wt3BB2NRG0rkRZyh311znV8Lf
o0blxgqMuVHlMDLdOisWHLSfLm0jmhsT7K9KE4odgRt8EPZYCNHc6Bp7yt2e
5IOwyW2kcyPKtN/dVTJuJXxTBencaJx22l21C1sV/cdrnURzg2KfkyYUOwI3
eNUDHUQsN76iqtwNxfJB2EU3SOdGuHmbu+Y6txJeoCedGy0OI9OtUCyM9n9/
pYvjxnSCuRFnqJAgFDsCN6BAQwHc2KI57VZP8kHY1zpJ50aoZbO7q2TcSviO
VNK5wVIn3TUyYauib81lSedGlOmABKFYZ77oYHpwqmebXhnccEvt8kHY+b2k
cyPQttItc51fCX9LrQxuuKUs0IfjdPUK4Ea4uVCCUOwI9gb664ZCnQK4cVJ1
wq2e5IOwc1nSuTHBnuyW2uVXwosjFMCNPE21W9xI0puf0VoVwI1QS54Eodjh
uMGrnl1qBXDjlxGVbqldNN5iNjQogBsUG+/WKhm/Er4/RAHcMMRXuaUs0Ien
pzUrgBuBtlQJQrHDcQNUT8PbsxTAjZbgo25lTiLVE6W1KoMb8fmnXFe74KDd
PhigAG5UqSpdz/eDIGxYSpsCuDHBvkKCUOxw3OBVz94QBXDj5vgyt3qSC8Km
timDG1Emk+uZk+Cgce+HfG40hB1zXe2Clpy0tFMB3EAzQ4JQ7HDc4FXPgQAF
cOM+Vep65iQMoYdT2pXBjcjq3a6b68gyycvTK4MbLcGHXM/3g9E+MblLGdyI
MxwXOxQ7HDf4IGwppQxupKW4ukoG+T+ByzuVwY1QS5HrmZPcSrhepwxu3Bxf
6rqRCZWwDyxmlcGNKNNBsUOxw3GDC8Ju0SuGG3maEy72JKieCcu6lMGNyVc2
umiuQ5ZsVYFaNG78SkpusNQ+141M7kDP7FrFcCPc/JbYodjhuMGpnjydYrhx
OPqIiz0JqodKYpXBjUBbpouZk/xKeNEsxXBDl1zlopHJ7SWrsyqGG6GWHWKH
YofkBh+E3apWDDeqVIdc7Eku/ye7XjHcGHN3lYvmOmTJtuwIUQw38jTHXdwp
ETU8ckOTYrgx+comsUOxQ+4vyquebbMUw42W4L0u9iRyZ6LetCqGGxS7zMXy
HP4sacNDiuFGleqgK0Ymf6Cntk0x3Ai0ZXu2U6LrMqS9waueghCFccMVtYs+
Fp7ZrCRuRJmOuGKu82dJ76QUxo1RlQVfxrj+hmK4gWaG2CkcQ3KDD8IWBiiG
GyxV5EpPQv5P6IY2JXFDVe6S2uXOks4xKokbLcFvu8INvoxxXaeSuBGf714t
p7syJDf4/B/UQQriRrJ29J7kd8LPsCuJG6GWd1zJnOTOks7VK4kbV4N2uaIs
+DLG9F4lcSPKdNSDnRJdlyG5weX/5OgVxo08TfmoPcmfJZ3RqSRuPGw1uqJ2
uSmWq1YSN1hqqyuZk3wZYzqrJG6oyg+JGoodkhvoLyqPG8Wxo5vroHqoDFZJ
3Ai0bR21PIc/S1px3HDFyOT2kt1oVRg3Qi17XS/PAampqcnJycnOzrbb/2mo
HD16VK/XFxUVtbS0OG8Ox42qjWqFcaNKVTxq5iSX/5NTqzBuBNzaNKq5zp8l
nROiMG7kaY6NamSihiuPG1Mv7XIrFHvt2jWDwXDv3r3m5maj0ei839raWlxc
jC5u3ryJ6OG8P5gbMITM2bMVxo2GsNF7ksv/ybUqjBtoXI6aOcmfJb1xisK4
URxbOqqRya2E57QpjBuBtkLXy3OQ1NXV1dfXw7VWq3Xe/+KLL/72t7+hiy+/
/HLt2rXO+4O5AQUaLW+GKIwbLcEFo/Yk+oAqt1F53IgzjFJNz58lnU0pjBtV
qj0jG5l8GWNuu8K4EXBL71YotrKy8uLFi3CdlZV1586d/j+9e/cuskY+/PBD
553B3OBVj26Kwrhxe2z2yD3Jb2O+uU153IgyVYxcnsNtY76xQnncaJxWMLKR
yZcxbupUGDcoNsf18hzgwPnz5+Fap9Pdv3/f+aOurq78/HznT52fR2ZJQZ+w
TtUDHaQgbrBU5siZk3z+z5YbyuNGuLlsZHOdK2N8U688brQE60fOnAQtGbCl
W3nciNlz0vUUjsuXL5eVlaGLjo4ORIn+0Ni8eXNra+uAzyNulJSUtPYJ61A9
aVkliuSGLnmkc4j4/B99p/K4EWopHbk8B/20ODNVedy4PXbDyEYmZMly70dx
3IgyuVqegwQZGMhVMRqNubm5NpsNiIEsiqNHj6akpOT0SW9vr5MbA/wUZNDm
6fSK5Eae5tAIPcmrnq3dyuNGoG33COY6X8aYoVYeN1hq3chGJlfGuKlekdwI
tYxiZA6Wnp4eFz85mBuc6slIVSQ3qlQ7R+hJXvUUsErlxnBql9/GPD1CkdzI
05SNYGRyZYxbrArmhkjV9AO4wauedWoFc2M4tcttY76lQZHcoNgdI3CD30t2
TYhSuTGCsuDKGLc2K5IbgbZi8arpB3CDVz2pEYrkRkvwmyP0JLeNeZ5VqdyI
z393OLXLlzGuClAkN6pU24fjBl/GuK1NkdyYYN8jXlXsAG7wqiclRJHcuBqk
HaEnOdVT0KxUbkSZqobLnOTLGNH7USI3zBFbh1MWfBnjDrsiuYFmhmTc4FXP
sgBFcgONy+EKnXjVU9SmVG6oyk8Op3a5MsYMvVK50RK8YbjyHL6McWenUrkx
gpHppQzgBq96kimlciNZO3TmJKiewLc7lcqNUEvFcIVOXBmjcrlxNSh9OLXL
lzHuZZXKjSjTKZGq6Qdwg1M9Wr2CuZGnKR2yJ2EIKZgbUy8dHc5c56ZVilqp
3GCpxcMZmXDYh4K5EVk9rJHppTjzRS9cuABDSNncKI41DtmTvOopYZXKjUDb
4SHNdb6MceVsBXMjLaViSCOTq6DfZlUwN0Itx92tpnedG5Av2tHRAdyoWqlW
MDeqVPlDFjpxFfSbahXMjYBbh4Y01/kK+sQQBXMjT1MyZHkOV8ZY2Khgbky9
VCFSKLa/n8KrnmWzFcyNhrDMIXuSq6AvsCqYGxR7cMhCJ76MceEUBXOjOHaI
fD++jPGtNgVzI9BW7lY1vWfc4CvoF4YomBstwauH7ElO9RQ1KpsbMXuGWF3n
yxjVlIK5UaXaMtjI5Cvo32lXMDfG3D0qUii2Pzd41fP6FAVz4/bYBYN7klc9
77QpmxtRpncHm+tcGeOGEmVzo3Fa2mAjk6+gL+1UMDfQzHCrmt4zbvCqB3WQ
crnBUvMHFzrxFfT7byibG+FmZrC5zlXQp+uVzY2W4BWDq+n5MsYj3crmRsye
GjFSOPpzg1c9SueGLvnggJ7kK+jLOpXNjVALM7jQiStjXJmqbG7cHhs/2Mjk
yxiPs8rmRpSpxvVqes+4wVXQr9Ernht5muIBPcmrnopuZXNj8hVmgLnOlzEu
USubGywVN9jI5Cro9fWK50a4uUaMFI7+3OBUz/JUxXOjSpU1oCd51VPNKpsb
gTZmgLnOHwT8+izFcyNPs3eAkclV0G+3Kp4boZYaMarpndzgVc9itY9wo7/a
5SroCxsUzw2KrRlgrvMHAceH+AI3BigLroxxb7PiuRFoe0+MFA5nvujRU+9z
+YTxEYrnRkvwwgE9yVXQ77D6CDf6q12+jDEmQPHcqFLp+nODL2M80OYj3BA8
FOvMFz1cc5GbTXNDFM+Nq0HqAT3JqZ59zb7AjSjTL/tzgy9jjKYUzw1zxNr+
yoKvoK+wK54bFGsWiRvgp/Cq55kAxXODpZ7q35O86ilt8wVuqMrN/dUudwZ9
utEXuNES/Fp/bvAV9Cc7fYEb8flnBA/FOrnBqx7oIKVzI1n7jy3i+Qr66k5f
4Eao5Wz/QifuDPrVel/gxtWg+f2VBV/GiN6PD3AjymQWvJreyQ2ugn6V3ke4
kad5x9mTvOrxDW48bH2/v9rlptKral/gBkvN6F9Nz59B7xvcUJX/SvBQrJMb
XAW9z3DDEF/k7Ele9TSwvsCNQJvFWU3Pn0HvM9xI1p5wGplcBb3R6iPcCLXU
CV5N358bVa+ofYQbVaq1zp7kN2/xDW4E3DrnNNf5CvrnQnyEG3mat5xGJmq4
73Bj6iWL4KFY4AZfQT9/to9woyEs0dmTnOp5y+oj3KDYC85CJ76M8akpPsKN
4tjNTiOTWwk/2uYj3Ai0nRO8mr4/N1qiQnyEGy3Bc509yVXQ7230HW7EGcxg
rgM32EcoH+FGlWoNVNPzFfTH232EGwG3rIKHYoEbvOp5coqPcOPm+FnQk3wF
fXmb73AjyvQ+VNNzZ9BnVvgONxrC+Hw/voL+V50+wg00MwSvpkfQKCgo2Lqr
VLPhIPtTyke4gcYl9CSveqrafYcbkdUWMNe5Cvrlet/hRktwLBiZoCUnWLp8
hxtxhlphUziAG2tz3166rtinuKFLLkY9yaue+k7f4Uao5TyY6+i/hkSd73Dj
9thHwMiEfWaoJtZ3uBFlqhtyh1VvuIGEUz3L9D7FjTzNziS9ma+g/02373Bj
8pWPIRTLTaK5at/hBkuFQDU9V0FfWO9T3Ag3nxc2hQO4wVXQv5bqU9w4HL0W
EoE41dPM+g43Am2/henDGe3Rs3yKG7pkrpqe24N6t9WnuBFquSBsNT2CxoEy
btPjqji1T3GjSsXtHYdMDk71+BI3xtxtQQ1HViu3SPhYiE9xI09jQG8cNTzy
UJNPcWPyld8Km8KBuLF1Vymnep6e5VPcaJzGrZJx+T97rD7FDYpthYZzqxyh
D/kUNw5Hr4GGh55q8yluBNp+N3iHVS+5sTb3bY5FESE+xY2W4CgYQpFHmnyN
G1EmC7SdnUr5FDeqVMug4VPfv+FT3EAzQ9gUDsSNhWu4Yo3b3w/wKW5cnxiS
mMSNotDTbb7GjZjCLZoNB3Urjb7Gjfd/8viiVdxub4EfdfoaN5YsWSJgKNbJ
Da6DXOPGR9cn/rr7Qde58WB39MTrC9zixjhdx7jlHW5xo2Li9V8/2O06N1on
/Qz1JLd5y6/tLnLju+M66HEdbnHj+sTS7gffcYsbrbmT3OJGbMe4GR3jPOBG
3hK969w4e2WSW9wY1/HiuI7X3eLGxHXXH0zqdosbxya1usUNhp65eEUGeulj
/tjrIjd+PPE6GsFucaN10m63uNGd+eD1/IlucePF6xMjuh+UnRu6FUbXubGl
MKa6dZLr3JjU+kJM4WK3uEGnM3QS4xY3MmIK353U6gE3Ahs7XeTG4zTzPM24
xY3CmIzWSQVucQM9lVvceIWhX2RoD7hxOC7RdW6gp3KLGzQzn2YWu8WNmBWF
kxJb3eIGeirPuMF90DVuxMUUzpjU6hY3uDfoDjda100qTItxixuawhhV6yR3
ueFxKJYZJAUFBagn1yWuY2Y6ZsVcmnmVZpJoJoVmMmgml2YKaOYtmimhmWM0
U00fZ+i1GQkFpTMMDJ3H0G8y3BRfztALGTqeoWczdBRDP87QjzDhNPMozTxF
My/MKE1IyEikmaU0k0YzmTSzmWaKaOYdmjHRTAV9+jRdwdAmht7N0NsZejND
ZzIxKwtjlhTSGoZ+maFfYOinGPpR5pFwBs3cKJqZTTPxNPMGzSyjmXSaeZNm
8mhmdUJG4YzSg9xjVpXTxyrp0hP0nip6ZzW9jaFzGTqDoVM4GNGvMfQ8hn6+
dEYM6knEzIjSk/QBhn6LoQscH9Qy9GqGXsLQrzL0XIZ+jqGfZOhfML94hHkp
pjA+pjCOZl5BU4JmVtLMOprZSDNbaWYXzeyjmcM0c5JmGPokQx9m6H0MvSsj
YXXpDPSN6xh6JUMvZmg0y+MY+lmGnsHQ05kImnmSZp7r6/YlqBk0eqp/dPsB
mjlKnzpJHz9NlzH0XoZG3a5n6Cz0Fvq6HQ0hdWHMMwz9BEP/nHmEZiJpZhbN
xDhm7us0k0wzqTSzgWY29XV7aULG2kUpm7bFaxzvh2ZephnNP7+f7TSzm38/
p07Rx6q5p3qHoYv490OnMfRShn6doef/4/3QNPfS+VcUU/haTCF66cv7vSID
zeylmTKaOU5XM/Qxhi7p1+0ZTMLSjBmJpXy3P4+mONft02lmBs1E08xLNKPu
1+3ZNJOPOmzJEtTth+jT5fTJk3TFaa7b9zO0kaG3MvRGhl7P0KsYOpGhF0C3
F8bMTVy6esGGXX3vh6HzGTq77/0kMo+8ykyfx0S8yPwiinn0Ceax6cyChIy4
GaXO9zNgWhxwTIuT9KnTdCXT94q4N/hPMyOh38wI594PdHvf+yldNSNjRcI/
pkUpzZRz3d5/Wmzp1+1oWizKSJhTOqNftz82aGas6ev2HTSzh2YOwmgfTAA4
UN4DbqzPzN26q3Twj/ziF78oRozFh7K3FR+rPDngvivcGI4kHvyiX/ziF58V
Pzf84he/uCt+bvjFL35xV3yKG/fu3ZP7EfziFyWI73CjpaVl586dcF1TU5OT
k5OdnW2324e7oww5evSoXq8vKipCzYc7A1qq1IYjOXLkiN4hf/3rX1lfeulI
uru7165d+/nnn8M/BX/pFxwi2OPiKufOnVu3bp3BYEDX165dQxfI9mhubjYa
jUPeUYa0trYWFxeji5s3b6Lpww5qqVIbzjrUBLT9k08+OXDggO+8dJC9e/em
pKQAN3znpQsuZrO5vb0duFFXV1dfXw/3tVrtkHeUIV988cXf/vY3dPHll18i
7cMOaqlSG47k66+/7unpQf9FurW8vNx3XjqS8+fPnzp1Kj8/H7jhOy9dDEEm
GXCjsrLy4sWLcDMrK+vOnTuD78j2lCLI3bt3UcM//PBDdlDbkRej4IYjQcRY
s2YNsrt856Ujp2z79u3InHByw9deurDi5AbDMAjIcFOn092/f3/wHdmeUmjp
6upC48fZugEtPX36tFIb7hSwtQa3VKkvvaioCBkbyDHPzMxEZnZvb68PvnQB
xcmNy5cvl5WVoYuOjg40p4a8owxB0Ni8eTPSts47A1qq1IazjmWNM2e4cgzE
jezs7KamJh956ajhsGiJuHH27FnEDd956WKIkxsIsMhyMxqNubm5NpttyDvK
EGSRpqSk5PQJGkIDWqrUhiP56quv9u7du3v37p07d6KZ4jsv3SlOP8V3XroE
0tPTM+odpcqAliq44Xfv3u3/T/9LH+6ffvGLX/ziF7/4xS9+8Ytf/OIXv/jF
L6TL/wdpKUK0
    "], {{0, 226}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Output",
 ImageSize->{364, 226},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[56]=",
 CellID->364992245]
}, Open  ]],

Cell["\<\
If, like here, the complex values come from the discretization of a function \
of a real variable x, we want to have x-values on the horizontal axis, and \
not the index of the complex list. This can be done with the option \
QHorizontalRange which specifies the range of x-values on the horizontal axis:\
\>", "Text",
 CellID->576771656],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListArgColorPlot", "[", 
  RowBox[{"mytab", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[57]:=",
 CellID->60039834],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 232}, {360, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 232},
  PlotRange->{{0, 360}, {0, 232}}]], "Output",
 ImageSize->{364, 232},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[57]=",
 CellID->1211365883]
}, Open  ]],

Cell["Here is another method to achieve a similar result:", "Text",
 CellID->2071984284],

Cell[CellGroupData[{

Cell["\<\
QListArgColorPlot[mytab, Axes\[Rule]True, \
Ticks->{QNiceTicks[-2.,2.,0.01],Automatic}]\
\>", "Input",
 CellLabel->"In[58]:=",
 CellID->245041436],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JCQhCUlIQhKSkIQkJCEJSUhCEhIh5H8BjL+6Bw==
    "], {{0, 226}, {360, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Output",
 ImageSize->{364, 226},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[58]=",
 CellID->1281422021]
}, Open  ]],

Cell["\<\
We can also plot a part of the list, corresponding, for example, to the \
values in the sub-interval {-1,0} of the horizontal range {-2,2}:\
\>", "Text",
 CellID->1062714988],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListArgColorPlot", "[", 
  RowBox[{"mytab", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[59]:=",
 CellID->429311217],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
CILoPv8Lgsv1sg==
    "], {{0, 230}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 230},
  PlotRange->{{0, 360}, {0, 230}}]], "Output",
 ImageSize->{364, 230},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[59]=",
 CellID->1893894831]
}, Open  ]],

Cell["\<\
If the \"sub-interval\" is larger than the horizontal range, the list will be \
padded with zeros:\
\>", "Text",
 CellID->1952558424],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListArgColorPlot", "[", 
  RowBox[{"mytab", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[60]:=",
 CellID->951822361],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AwAAAAAAAAAAAAAAAAAAhPL/ATj0LRA=
    "], {{0, 232}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 232},
  PlotRange->{{0, 360}, {0, 232}}]], "Output",
 ImageSize->{364, 232},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[60]=",
 CellID->687808783]
}, Open  ]],

Cell["\<\
If you want to combine a phase-colored plot with an ordinary plot of another \
function, you can use QCombinedPlot:\
\>", "Text",
 CellID->152785513],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[61]:=",
 CellID->1623158826],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnW1sFVUax/EFXyIfSIhGjSEQEzURNyx+qVnjuxsEEgwqWTG7Aksv4guW
lpZbW29tBVu49AW7LFI3bRaxYN0AwW56s2yLQC1JgdRUeq1xt6XdD11axXah
rdTSu3/vE8ab3tvbuXfOnDln+vwyNMNhmJ45859n/ud15q5+c5nn2mnTpmXc
hB/LVm16PD19VfZzM/GXF9ZnrFu7PnXNM+s3pq5NTU9ZfR0Sd+JPP/78vB9S
ld0Hv/xD/t+dzoUY2sM4nQsBBDu/w0053tLtdEb0A4WGokMBOp0RARw+fNjr
9TY1NTmdEascOPoNbkrvD4NOZ0Q/UGgoOhSg0xkRAPRcWVnZ19fndEassqWq
aUNpvdO50BUUHQrQ6VwI4HAYp3MhAEQY+ECnc6ErrrHQ7tAzm2eLuMZCu0PP
bJ4t4hoL7Y76IJtn66AAc3YddzoXVnFHfZDNs3XIQg/++JPTGbGEC/zG6a97
2Dxbhyw0CtPpjFjCBXr+qO4sm2frkIVGYTqdEUu4QM9wfWyeheACCw0xezwe
fSUNv8fmWRRqWujq6urCwsLi4uJgMBiZXltbm5+fn5eX19Pzi0fSPT6zeRaI
gha6vb29oqICO729vVC1kd7V1VVWVjY6OtrW1lZeXm6k665nNs8CUdBC9/f3
X7hwATsXL17MzMw00uvr6xsaGmjf6/Ua6brrmc2zWNS00MPDw4jGx44dM1Jq
amqam5tp3+fzDQ0N0b7WembzLBwFLfTAwEBRUVFjY2NkIkRrpOTm5o6NjRnp
njB+v192Ri1D5lkpv6c7qlloiHnz5s3RQ/RbW1v37NmDnb6+PqjdSNc6PpN5
ViqY6A698tSx0NXV1WlpaflXgZcmt4yADMuBmmBBQUFnZ6dxvNZ6htNT0Ozp
jkalevny5XEp+upZtUjiGrR+6+mrZzbPNqF1k76+/YNahxGV0brVSN/4rGZL
qTvQdzy5pnpWsCfLTdB8n3M9/U5nJGE01bNr5rupCZSM4g2c7HA6IwmjqZ5L
951yx3xkZVlbGEAhO52LhNG0PqhpaWuEphFDx/is79tQIzR1dDrqWd/aikZo
uoKBjnrWtzVJL3RsEdVuvQKtW/v1QsGxo5Oi3XoyWvfG6oWOIwq08xvczS0N
HV+F2ulZR1OnL9pNZ9NLz5pWuvVFu4Uu9aoPBk526Ngoqi/qNPWPjo6aOUyv
+mDpvlNrCwNO52JqoUJXbDAY3LFjx7jE4uLizDDYMRL18hsqlO1Uw/FWuxMn
TmRlZZWVlUUmIlz7fL7ogzXSMy3Cr8K7b0rh+IzvQCDQ0dExTs/d3d1IaW5u
Rug2FisIaaVnXgrJEVRotevp6Rmn59bW1pKSktOnT3/88ce0IBhB9cH29nYI
Xno2E4Nb6pzC8QEG0Xo2QHDOzs6+dOkS/ZXqg36/f//+/RIzmDA8IcVBqFnJ
wQFg0XpuaWmpq6vDzuDgIIx05PpIWvgNx4t0KkOtdg42+xt6HhgYoPVkRkZG
doWBmKFt40hd9Mwtdc6iptkbHh6+cuVKZIoWelahSjLFcbzVziRa9A/ymDrH
0eUWaNE/qEtwcDe4Bep3ZmnhN1zztXSt0aIKo76e1RkSM8XRYjCY+nrm2a+K
oEUXAMTs9/uj1z9XB+2GlLsY9e+F4nrWIiZMHdQfQqO433B8cBcTifp1GcX1
rEWdekqhZkehgcp65m5BBVHccqjsn9lsKAh1FCprOVTWMy1xyd2CqqHyrDeV
/YbK5TaVUXn4gbJ61mUAzBRE5VujrJ5VDgKM/Fen+fU31PTPbDZURnK0ibn+
Rm1tbX5+fl5eXk/PLy0GaupZ5TcaE7ra9CTnBsVcf6OrqwspCNptbW3l5eVG
upp+g82G4sjsGoi5/kZ9fX1DQwPt04xCQk09w2yo3AnFhOR23UbP766pqWlu
bqZ9n883NDRE+wrqmddB0gKZvV3ReoZoGxsbQ+ERaxmZXrwptlQ14flanVGc
uu7NTTkFW9+v+qjuLLLn+Fte8R5VhpBpOWKuj7S19M94ib/s+3TN617kJPeV
8vdWFmb9MWvTyjeKVmzMeK0UibThVeLgNATFR7wwBtIsx7j1Nw4c/ebnUJy+
zfNa9oaVqZ//6qHQtGm0HX7wQWy0f+mmW07fl1Lx7AZSNXQlf+yE+iMSGQOZ
rRwEBAlZ4pemp1Uen//kyPXXG0qO1rOxQdgHHlvxivcT/EfYEplzndhsaAQs
h7RuAvwuGs8DWULJ4xQbX8+RqqZYLW2tJzYbeiGnZRXuFw8OftHehamQ5URi
Jj1nv/jiF/fcM9EBvTNvg83GqSAzu8Om4mMRmWgk9HzRhGiE5eCcB+Io2dBz
1aOP9s2YEf+wQMpSnBPPiK31RO5G0RGowqbVUaAEkgQiavywbMZvjNvO3T6X
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
P2WQIYk=
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[61]=",
 CellID->97744080]
}, Open  ]],

Cell["\<\
There is also a \"ListPlot\"-version of QCombinedPlot, where a list of \
complex values is plotted together with an ordinary function:\
\>", "Text",
 CellID->1668806187],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mytab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"QListCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mytab", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[62]:=",
 CellID->1489155089],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
c0IIIQT8HyOqWrw=
    "], {{0, 223}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 223},
  PlotRange->{{0, 360}, {0, 223}}]], "Output",
 ImageSize->{364, 223},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[63]=",
 CellID->2107246252]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mytab", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[64]:=",
 CellID->1308246759],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Cr1BCCGEEEIICZb/A4fWZy8=
    "], {{0, 214}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 214},
  PlotRange->{{0, 360}, {0, 214}}]], "Output",
 ImageSize->{364, 214},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[64]=",
 CellID->187451040]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mytab", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[65]:=",
 CellID->52239396],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/7hnHsI=
    "], {{0, 214}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 214},
  PlotRange->{{0, 360}, {0, 214}}]], "Output",
 ImageSize->{364, 214},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[65]=",
 CellID->131119131]
}, Open  ]],

Cell["\<\
Normally, in QArgColorPlot, the range between the x-axis and the graph of the \
function is filled with a color corresponding to the phase. But we can also \
use another horizontal line at height y=y0 by using the option \
QBottomLine->y0:\
\>", "Text",
 CellID->1296596866],

Cell[CellGroupData[{

Cell["QArgColorPlot[Exp[I x - x^2],{x,-3,3}, QBottomLine\[Rule]1/3]", "Input",
 CellLabel->"In[66]:=",
 CellID->1386960753],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 157}, {240, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[66]=",
 CellID->401012895]
}, Open  ]],

Cell["\<\
This is useful, if we want to combine several ArgColorPlots in the same \
graphics:\
\>", "Text",
 CellID->1483911894],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"QArgColorPlot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", "\[ImaginaryI]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"QBottomLine", "\[Rule]", "1"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}]}], "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"QArgColorPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"x", "+", "\[ImaginaryI]"}], "]"}], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Arg", "[", 
         RowBox[{"Cos", "[", 
          RowBox[{"x", "+", "\[ImaginaryI]"}], "]"}], "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2"}], ",", "1.7"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->1379609847],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
21UTNzF+A+PXMX6NmrzfqVZ+zfivGL+MUvhLzoZz9hvORqi2RquJHMPZn9Vc
3srZeM4mcHaPms4wzqZyNp2zSM7mcBbN2SLO4jlL5GwlZ2mcZXD2OGfr1XQ+
x9kLnL2k5nK3mshSLYu17P0PWG0V42+pmdvH+OM3H3hk9nY9RBQ3wo8gNOR+
JPqlSO/S7MnpUyV5iiSHSfIkSb5fku+V5HskeaIkT5BkaYIsTZSle2TpXlm6
X5YmydKDsjRZlh6SpamyFC5L02VphixFyFKkLM2SpdmyNFeWHpGl+bIULUsx
shQrS4tkabEsxclSvCwtk6UEWVouS0my9KgsJcvSSllaJUspspQqS2mytEaW
0mVJTpfkNZL8mCSnSnKKJK+W5JWSvEKSkyU5SZITJXm5JC+T5KWSHCfJSyR5
kSQvlORYSV4gyfMleZ4kz5XkOZI8S5KjJHmmJM+Q5L9K8jRJfliSH+pyHCrJ
D0jyfZIcIsnBknw3Ob5bloJlKUSW7vu+3Ye7vM5YOG/G3PiIWfNpopnIhfMW
dvlb1uUsucsTGXosXUrX3KSpVlapPh5VTSSoDuK7HNDux0hytOrgEXX3Z6u7
HynJEaqD6V0OpqomJqsmHlQzp/m4t8vKRM2NlkLN0z1dtiiRD8hSqGouTJam
dPnT0vlX1eXMrozOUTM6T83oAjWdC7+fTt0xJXK1lsV0ac0aKV1LnpY5R7sJ
k3X60g2//rwsqPPYdZN69A0A/K16yPo54AU+3rgU4QqE3yFco9q9FWGCejB+
GCEKYQHC/MJrFxdem4HwN4RNCPkIr6rmShEqVFv1qqcLfLzxFeCngHWA76l2
9wO+TpkLckqj4FnwLHgWPAueBxPPjs+nCJ4FzwPFsxnPWwmeBc/W5Nm1/s+C
Z8GzBccbvfZ/3rlzZ3JyclJSUlNT9/0hgmfBs8V57rX/8yeffEJLqGjX1NQ8
8cQTgmfBs7fw3Gv/53379hUXF2vzcXFxgmfBs7fwjL31F92+fXt5ebk2n5iY
ePz4ccGz4Nl7eaaPvfnmm9p8QkKCY79cx767wcHBICTkQRFyqL4/ol/9n6ur
qzdv3ozqU4dpaWnn/Y0Q6pdEGA1RX+qz1v+ZCjINOehMcMWKFQ0NDeddg1C/
JMJoiPobxhMnTri5BqFeJcJoiAy/f0PINYkwGiLBs0UkwmiIDOHZhX4yQmdJ
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
2ISEhISEhISEhISM0v8DkC57sQ==
    "], {{0, 156}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 156},
  PlotRange->{{0, 240}, {0, 156}}]], "Output",
 ImageSize->{244, 156},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[67]=",
 CellID->1020041979]
}, Open  ]],

Cell["Some more options for use with QArgColorPlot:", "Text",
 CellID->1664110834],

Cell["\<\
QSquared->True plots the square of the curve instead of the absolute value:\
\>", "Text",
 CellID->2031252157],

Cell[CellGroupData[{

Cell["QArgColorPlot[Sin[x],{x,-2Pi,Pi}, QSquared->True]", "Input",
 CellLabel->"In[68]:=",
 CellID->707466340],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXX9sXtV5jrqtqhT+KJq0DmmtViGxVaPaVvoH6qbBNKnqJqRNqSqhTlsD
IwHULZikNqFOE8V42CNLYpRpIVaKO6+BQiQMbqJ9LBiW2DgocQKidXCXKSlZ
IisxhliZgYQk3177WQ5n93znfufe8+s9X++rB+vj+sbfuee895z3x3Pe8/m7
H1i28hNLlixZ8yn6seyuh/549eq7Hv76p+l/vrFqzf33rlpxz5+u+s6Ke1es
vvXuX6KL36f/ztN/C5/rlbSiDA8PT01Nvf/++7EbUkklDmTlypWbNm06depU
7IZUUkmeXL582eQ20mffLamkEks5duzY448/nrm4Z8+ejRs3btiwYXp6Wlys
9LkS5jI6OtrR0dHX1ydffPvtt+kKTdqTk5Pbtm0T1yt9roS51Gq1EydOZPR5
ZGTk5Zdfxue1a9eK65U+V8JfyKLI6POzzz576NAhfF6/fr0IaFT6HF4m3pru
3H7grzfu3fr04Z9Pn4/dHC9y7OQ7eEb6SZ8t/5qqz8PDw2NjY/i8bt26q1ev
4jPiGyRHjx61/NKmQmNHI4hnpDH1/XU8ZcfQG9QDq9uefHR5z31rn7m3p9Z6
Kn3g9VP0jHf2vvjVHxykn/SZrtj8QVWf33zzzcHBQfowMzPT29srrpM+Ty0K
Xbf5xqZCo0ZjRyNI40ijSc9II+v1GxkKBrr/Lx78n08trS9Z8vNf/zxU+tx7
87Gb5kxooOkZ73jiwK98cGlJvU4/6TNdsZmlhT7Pzc3BWqYJmUwO8gS7urpO
njwp7gxjb9B4QZlpBGkcaTRpTO1f27Rk/sOPqBPW3bcNygxQh1A//P3AeOzW
OZMHt47QnLz0vXlSZoBUmq7QdeffdfHixcyVMPpM40WjBmUGaExpZGl8aZQD
NICDwNI49ptfFJ0APHf7Ny2nLz7y3Cs/o2e58fX/FsoM0BW6Tr/13YAA+kwj
tfAst38zM440sr84VgetULA0Mp2AV5tWrhaYorEALet7OaPMAF0PMH0F0Gca
KRoveZEVgNXRStajTjA5n/v0r6md0DJTNLwDdXKWp2jfFqZvfdZNzgCN7y/C
FI2Jixzhhp2AKRrhu9gttRKykHWTs5iifVjRsqxclKmpKU9/HwG6hpMzQKPc
8lY0Jq6J375V1wktsFRh4vrd//jPHH2m3/pehrzOzzlGowCNcssHOjq3HyCL
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
TNbZuBWhQccKVngkBwj1+HivY9GeVRQlQpvbG7FozyriEqEj0rEy8Pdex6I9
qyhKhDbXZw5BV4GI56V6PW+xKDwRoYNVezZBoYrQ5vrMxBkEYhGh49KxVHgK
9VDfhqn2bAJqiflYm+szE2cQiHVeaoDzFgvBh0sYstqzCQpVhDbXZybOIBCL
CB2djpWBD5cwZLVnExSqCG1Yz5yPMwjEOi81Oh0rAx8uIR9nECjkEhrOz6yc
QSDK3tiIe2B1cO4SsnIGAXOX0FCfWTmDQHiXkJszCDh3CVk5g4C5S2iozxwY
OBmEdwm5OYOAW5eQT2ZQhnmW0FCfWTmDQJg9dLLwyQzKcOsS8skMyjDPEpro
M95ZPs4gEN4l5JMZlOGWOIp3lo8zCMAlNHETTOrJMHQGgcBZwoiFGvLhkDjK
0BkEDF1Ck3pfDJ1BgLQrmEvIc5ECHBJHmdBEVRhW0DWxN6JUxzVBSOIoH5qo
Cld7CTnsGVTxpT17vt7V9Zcd3/3W956RM2hPPfVUT0/P5s2bjx07Ji421WcO
ewZ1CEkcZbtI1d3tJYRhGauATEP86qlTf9bX94nLl7/4ymv3rFov3AQykvv7
++nDuXPnSKvFIzTVZyZ7BhsCxNEwlTZZ0VcycOUaRy8go+LmkZHfeeUVfF5x
f5twE86fP//uu+/ShwsXLrS3t4tHaKrP3BgLGXjdcyQLw4ilDCfZ0ojVRHW4
dffuGw8fxue7Hmhv2/Ki3OAPPvigr69v//794kpTfebGWMjA354jWTgvUoC9
a8yNVgd86cc//q1XX8Xnv1rzkJxBm5ub6+3tFdWTIE3rI7Gir6vwXYYCwnyR
qrtwjXlmUj73k5/80eAgfbjunXe+seERkUEjZe7u7lZ5dPn16/jsZdYhTFaF
+SJVd5FVgcPLLZOy5OpVMjm+tm3bskceueFn//WtDc/93QNr6ovBjba2to3X
xLDeF9tMiowARDu2mRQZllkVckM4FNxoiF++9H9vGbUw313K12fOQSoB3+U4
OGdSZNhUaAx/6Hw5ND2qPl+fo1dfNIG/bfsQJlWhmsKGcAjqYMhD58sBR9Xn
kNBy9Jkn3VcFivb7q+S29enDzI1nwCa7BBrS0vfmo2tsPpYu6mROxiFHnzln
eDPwWtybeYRHRmkTmoxSnjQkFdTOHBM6Z/9gEsYz4I+YlIrxDJQzoVMxngEQ
k3QmdM78nITxDPgzoeOeY1UU5aLQMJ5jnWNVFDj3SmdC6/SZf+RZhr9zr2hp
Y8jhz++Hoq4E08izBuD268wqnT6n4tQL+OD2YyHmTNtQUcKVoIWYbeS5Iai1
OrNKp8+pOPUCIHK4PU+E5wZYk34wf0aeG2DzgXNVGppVDfU5xXkJRA6322Ox
EHPbAOu2HxhynpsCR202NKsa1n/GvMSZTqYCXGi35y8kFKkr3Q8JRepk6KJ2
DfU5xXmp7jpqx63EmY9+QMoslUidDETt1GRoQ3uDYVUrE7g9mhAvNWeOqA7m
JkeKxgaAqJ1qcqj6DGMjxXkJ3FFXJge91Gw3WOXD3ORI1NgA7ux9UTU5VH1O
d16qL26/cmJypOhByDAxOdI1NgBw7TImh6rPKTpBAq6iHNgZmpwHkemHfG4S
Up8pGhsAohyZJFpGn8FBSndewlJryU3CxJVWuFJF020ONHGllUZRQe3PLEMZ
PhL/jUVNgYSCTd3RtDgbOoDLofOOMXHxJzznA3RoeRmS52dEqFLhbOhgyeWY
//CjRMM7GcA71k3RD24dSdcTlEFPIee+ZX2mZ0/XE5SBUuflct9gtifB+m4K
1AFTp2iE6VKfnJdIU7QI3Al9xuScutEIYKdGibpJIDPAHZ657rpXb7op+rPI
GL7llkL3kzdB1iNNX/KrTZYYvexOJucbpqYI0VWanoWeCBYm9Jmel56anj26
Rz91ww0E+7+DTbKFmMB0M3ULdQJWKGrGP95xR/63mOj8/Cc/afJemOjqwmA1
u4e+i1ol/hdV30Usmga6c/uB5Wt3fu6nTYoumujqLcPDhPx7rpuZuelaQRib
e/B1Da8j0EHPRU8HfUbMWUcky3RR6XtMdJWGtenImmjRW79x410d20k/dSo9
MzMzdU3GXnt91/P779/4w+Xf/Zd///0/QDtfuvnmrmXL8FkHV/cQFrxyF/fQ
d9E3ylfW372BnmvNPzxDz0g/6fM93/7OzS+9BI3V4baBAYL9PfRFy7q67O8h
0OPrfvWHz4zgGekePCM9tXkXlbtn4LbbCPb3GGrRqr+5n56LtJTGkTRWaC/I
KuPj45uuyUOdXff87cMbH3l0U+sKnpF+xm6IR6GnI31u7WckLc2Mo66yWSUt
IObnw1ZSCX+p9LmSVpJKnytpJan0OV9qtVp3d3dPT8/k5GTstnws8/Pz7e3t
s7OzsRuyIA3PMYklrPSZVc+QnDlzhtpz5coV0py+vr7YzflYduzY0dbWxkGf
deeYxBKT89rCCLeeIdm7d+/IyAjNzKdPn47dlo9lbGxsaGiot7eXgz7rzjGJ
JcPDw03P0wwj0Xvm6tWrVyShK7t27SJjY8+ePfSi7d69m0OTzp49u2XLlsuX
L0fRZ7U9EPUck0ogEXvm4MGDXZIcP36cdJhmQvoVjV1nZ6coAh+xSWSMUZNG
R0epPWTbB26S2p665hyTSur8eubQoUODg4P0gdavjo4Omp1it6h+5MiR8UUh
fd63b1/4VywjunNMKmHYMzQt02Q4MDBADZuYmIjdnP8nTOxn3TkmlbDtGWqJ
bCtWUkkllVRSSSWVVFJJJZVUkrT8LxDpLao=
    "], {{0, 157}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[68]=",
 CellID->483587052]
}, Open  ]],

Cell["\<\
QShiftPlot->number performs a vertical shift of the whole plot by number.\
\>", "Text",
 CellID->1179701281],

Cell[CellGroupData[{

Cell["\<\
QArgColorPlot[Sin[x],{x,-2Pi,Pi}, QShiftPlot->1, PlotRange->{0,2}]\
\>", "Input",
 CellLabel->"In[69]:=",
 CellID->1670400663],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXV1sHNUZtaiQkHgJQoJKLRKIh4JaSlV4iPpEVQlBRVUU+hPlAQElITw0
OAGHuFmtsRuwhbVmxSKFWGqD3NoFRyLUcmqnkU0TrLgyBqMV3rhFYrEL2mCH
YCs2W7t2tif7yZPJzM54fu7MvXP5jg7RZDLYd+49893z3Z+ZWx57asuOq+rq
6p6+Bn9sefTZH+/Z82jjQ5vwl1/uevrJJ3Ztf/z+Xc9sf2L7ns2PfQMnj+C/
efx36bjCYDAYDAYjBHp6elpbWzOZTKFQMJ/v7+9vbm5uamoqlUqyysZg+MLU
1FRnZycOZmdnoWrj/PT0dDabXV1dnZyczOVy8grIYPjA/Pz8+fPncXDhwoWG
hgbj/NDQ0PDwMB3v27dPTuEYjEAol8uIxidPnjTO9Pb2jo2N0XE6nf7qq68k
Fe3ri6X//m9w9OPdLw093HzMzJf+8u74GX0c4KmJmf0HT1nuEWdwPtgPXFhY
aGtrGxkZMZ/s6+szzqRSqYsXL9Jxe3v7jipwQZi7cAfaC61muUe0LNoXrRzd
71UHqIEnWgdx13vq//jn+7aP37a5cPMdp37wk84Hd+/c9wbOP3/49CelednF
DIVC8Rw9rVuyw3cPTt468Z8bi+fwJ45xhloc1/j6mRDzgQMH4KIt5/P5fFdX
Fw7m5uagduM8lBz+RlyANkJL4V7Qamg7tCDaEa2JNkXL4jxaWafoVBOHjn5A
SsbtV+rqLFy85to379mG+kFVBA5i0vHm2//CPW5tOw4B11UqduI8/hXX4Erv
P7anp6e+vr55HfDS5JYRkGE5kAm2tLQUi0Xj+kj1jNZBG6Gl0F5oNXtTon1J
1Wjx6IohEeh9qPPFs1yzBgx+8s1bUjtzuDKJkqYH9t7XRq8ur9QUMxH/imsE
Nvfy8rLlTHR6Rrug5GgjtJRLO6KV0dZksTTzHoaYBzf/3KUGzFWRREmTmH/0
1gcuSjYTV0YXwSLSM4wxidk9KBlEi+snaUoZanoMbSTtV8xRSzoKPRuR2aOY
De9Byb7w8kjBnwY+xO0gTfBeAxZJq58eUkP7FbNZ0sIfW+F6RgIbQMxEtD7+
XyhBbJHiBzJc3Eh2a8pvDRBnN91A6aHKvRUeN9zjA6+ecvfMLl4a/y/uUexj
Cz23t7fPzIh5TFD/lAAGEDMRGkAtJXrEY/bLJVQC8tzAlQAWbr6DBvFk301t
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
3nIk3WwY9eC+7FDx1fteSF/9dtGzxHc7i2J4y5F0s2GuByfLQVNFyTUbRPsK
f/N6pKSbDWL4Ff6Kb8kRUg+qvTQmGO2Ww7xeVAOzQQyzmU6Ph5rostNBA7NB
tFgOs9/QwGwQw7zrW5uHuuK8qVAPs0G0WA5DzzrFpTCWQ5uHurK+qdBeD3qY
DaLFchh6prik+FZB7wxmOXR6qIk1LYc2ZoNothyGntXfwuyLwSyHTmaDaLcc
OpkNotlykJ7Vfy+BXwazHDqZDaLdcuhkNohmy0F61sxsEP1aDv3MBtFiOTQz
G0TDctB43c6WN3QyG0S/lkM/s2GvB/3MBtGwHNDzyD8nHm56SyezQfRrOfQz
G/Z60M9sEA3LAT3rGpcqfiyHHms2NqyH5JqNq9bW3C8gywE96xqXKn7Wcuix
ZsO9HihwJdFsfOvMmftfftly8of9/Q+1tPziuec2nT1bt245oGeN45L35aNJ
XyDqpR4QvpJoNr4zMrLt2Wd/ms2aT14/M4MzV62ufrtQuO+VV+rWLQfpWde4
VPG2fFRvs2HUA+4xiWbjzuPHbygWLXr+3tDQd99+m463NTbSAe4OetY4LlW8
WQ69zYa5HpJoNuqq7+e36HnzkSO3vvsuHf8qnb66XK6rWg7oee9v9vbdddfM
9ddLr/Mo6MVywFhG9CFsdVAonnv+8OkwLzyXiFKplM1mzWf6+vpGRkboOJVK
0fdTcHfQ8x+6Xse/Tk1NSShoLIBW4//yJkMg7HrO5/NdXV04mJuba2trM857
/94xgyELhp4XFhboe0AIyL29vblcrqWlpVgsGleynhnJxfLysuUM65mhE1jP
DJ3AemboBNYzQyfsqELjwTrG1wocnxk6gfXM0AmsZ4ZOYD0zdALrmaETWM8M
neDy/W4GI3Fw+X43g5E4sN9g6ATWM0MnsJ4ZOoH1zNAJrGeGTqj5/W4GI6Fg
PTN0AvsNhk5gPTN0AuuZoRNYzwydwHpm6ATWM0Mn8P5uhk7g+MzQCaxnhuLo
7+9vbm5uamoqlUrm85lMpqEKHBgnWc8MlTE9PZ3NZldXVycnJ3O5nHEeZ9Lp
tP161jNDZQwNDQ0PD9MxvfmZMDMzA52PjY0VCgV6OT+B9cxQGb29vRAtHSMg
GxsD8/l8R0fH+Ph4d3d3Z2encT3rmaEyan4nxQycaWxsXFxcpL/S/m7g/fff
j7WgDIYHOH0nZWJiYmBgAAdLS0uI24bOafAZ4CWjDAVh+U6K8f2UlZWVg1VA
zNC2cT37DYb6sH8nhVAul9fW1sxnWM8MncB6ZugE1jNDJ7CeGTqB31/H0An8
flGGTmC/wdAJrGeGTmA9M3QC65mhE1jPDJ3AemboBN7fzdAJHJ8ZOoH1zNAJ
rGeGTmA9M3QC65mhE1jPDJ3A309h6ATWM0MnsN9g6ATWM0MnsJ4ZOoH1zNAJ
rGeGTuD93QydwPu7GTqB/QZDJ7CeGTqB9ewE5BSqTZuqto1orgrZpbgCqulZ
nSqCeJBZyC7FFVCtsfqqkF2KK8BV5AQvehZ1TcVbQ3i5Br9rwzDu5RovDeHl
Gq6ieKoIv2UHg5F8KBL/GQwGg8FgMBgMBoOhMgYHBw8cONDa2jo5OSm7LJex
tLTU0NDwxRdfyC7IJfT09KB+MplMoVCQW5L+/v7m5uampqZSqSS3JAR1aobw
2WefoTxra2tQTjablV2cyzh06FB9fb0Kep6amqLPwc/OzqKuJJZkenoabbS6
uorIk8vlJJaEoE7NGDh27NjQ0BDq59NPP5VdlssYGRk5evRoW1ubCnqen58/
f/48Di5cuIAuQ2JJ0FLDw8N0TN9ElgvpNXPx4sU1E3Cmu7sbZgO9GB60I0eO
qFCkzz//vKOjA1FIip7t5SGUy2XExpMnT8ZcHjN6e3vHxsboOJ1OK7KkX2LN
jI6Otpjw0UcfQcOIhPgntN3+/ftXVlakFwlmDEV65513UB54+5iLZC8PTi4s
LODhQq8RZ0ns6OvrM8qQSqXw6MktT0WZmjGA572rq6tSXWu3d+9eFarovffe
O10F9HzixIn4HzEL0GTowlRY+JfP56mx5ubmoCLZxVGoZgwgLCMYHj58GAUb
Hx+XXZwroIh/RgqPzLR5HRKfL0QbWA5kgug4isWirGIYUKdmLEBJzF6RoTKW
l5dlF4HBYDAYDAaDwWCojv8DmaTTjg==
    "], {{0, 171}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 171},
  PlotRange->{{0, 240}, {0, 171}}]], "Output",
 ImageSize->{244, 171},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[69]=",
 CellID->1569462716]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellLabel->"In[70]:=",
 CellID->1125063311],

Cell["QPlotDown->True lets the whole plot appear uside down.", "Text",
 CellID->345556142],

Cell[CellGroupData[{

Cell["QArgColorPlot[Sin[x],{x,-2Pi,Pi}, QPlotDown->True]", "Input",
 CellLabel->"In[71]:=",
 CellID->966297106],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[71]=",
 CellID->418231711]
}, Open  ]],

Cell[TextData[{
 "In quantum mechanics, a ",
 Cell[BoxData[
  SuperscriptBox["\[DoubleStruckCapitalC]", "2"]]],
 "-valued functions is called a spinor function. The ArgColorPlot has a \
method to plot such functions by combining QArgColorPlots of the two \
component-functions. By default, the second component is plotted upside down \
and with less saturation:"
}], "Text",
 CellID->26591546],

Cell["\<\
RM: QSpinorPlot does not add black boundary-lines for the second component. \
OK?\
\>", "Program",
 CellID->247515046],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spinorfunction", "[", "x_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox["1", "4"]}], ")"}], "2"]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "x"}], "]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "+", 
            FractionBox["1", "4"]}], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}]]}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"QSpinorPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"spinorfunction", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3."}], ",", "3."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[72]:=",
 CellID->309553883],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQ94FPW576e3h1ufw33OA+d5ip1WevTSHvVYinpoRWqfBkHBSgWjYowQ
A4YQ4xLyjxBgzW8JkCwwkNBUErf8WfkXQI0BpWxqiWFRc4qxSbFsptgSSnrO
XpErcJs0x6j87rvz7g6TnT87uzsTMmG+z5hnGXd+s7+Zz7zz/t7fO+/csmBJ
avb/YBim6Ab4kzp/2ZTCwvnLHxsF/3gir+i5RXkLsx7KK164aGHhpAVfhZV1
8N8l+C/0mdqyZcuWLVu2bFlBh2zZukYyA+bS0tLt27fDB/gLn6P2uEFQ1Epx
E6mys7PlP1i+0vC9JNng4OxFZ4ND7eCYd07FTQznWWyT53n4AVFf4AVFrXzv
vfc++eQTeVOK7csbNHYv8B34pvxr8m8qNjg4e9HZ4ODsRfFow0mRr9R5ThPb
i2K/kpQZbdqypUc2z7aGk2yebQ0nmcQzuOVy58cWKtB14Wzw0rX+FcNQgFxc
48EvvvhCz9dwpCkfWdhq6wwuqvRlrDoMy8pav021sQLkMNCh58uBQGDz5s1R
K998881Vq1YRQoLBoLjS9jcUBWYZME4v3ftw2vOzs1bNdb4G//S3n7vWv2tY
SSd7x48fLykpqa6ulq78y1/+AmvAaJ86daqmpibeNq8r9f7352CZgeEp06an
CJo645G04h0xkYarYO2O99CkwwfbpGtLJ3s+n+/MmTNRPB89erS5uRk/g98S
b5vXlRre/iMA+dDjWSkSAdvaSONWcBWk5qxDkw4XhY20hvSzBx5FFM8HDhw4
ceIEfi4rK/v73/8eb5vXidA4z8mvTZFJDWnYBM0ybCWa9AdmPoFIw/+9Vn0Z
4kqGZ9jwnXfewc9Op/PKlSvi+mxBNtUoNLPTZ8+T8yxFGr6GoALbOGyclbki
6svQCKx/6fWOa92noai4qJPzfPLkyZ07d1JhXOl2u8X1tn2OUkHVURgGKsIs
Ig12GJ1kcVG05yDwPeD/nr/Ye627NRSVmH2+fPkyOMxgkMHlgJFgeXl5V1dX
Am1eD2rrDAJ+P5tbpMGzFFRnTk3D/ekVz1bCZ1gj/xoMJG0Trabk2fvss88M
b3M4CcAD/EQfWE3oSFRkrqPMV+lXGfqPjGdOgdqFYJtoNdnz3WYLPOHHHdUx
jTM4JDmlB3pu+LrIM/1nxrm4Rhrii4If/O1r3bkhJ5N4tucHUehsPJz2vDbM
MO4LhTjufIQy/yjlOXD3eFg/O2uVIv/glif8w2DgGei6MMwsfFzzg/pl52+I
0ulsgBEuzH+ZMv8cxTNlmYqcSsUWwA+B9YnFosX4CSxV9e8Pm+hfvPkbOjX8
/I2EzziY0LTiHdowg/UWjHOqIs+Be8YrBu5wVLjryB/i/Ul4y8Bpd/TDV9b6
E+vdEJTtP2tLNGVAZrzGEL6vJ7IBwBfm76QMq8gzvZkpXLpdMdwHG8brcoCD
Ad2B1kSDj3Y+getiaMrmWUMAM5xrwAbMYwJzzb7WM7D5AzOf0IAZ/m9oZJfy
nAbPvp/Nks+VJ+ZyoP8Dw0mpAwPD1YRdl6Emm2c1oSkDmPHU41xzXPZw7Y73
YBNt4xyOvI26W4Pnnu+NVIxFx+tyYIIf/CSwz+g8Q5vQO2wHfm1Cx2loyc7n
VxOmT0itKzq6+qNkahMiUgFdFZmbKXOzBs/0VqY626l4acTlcqBxDv2qouYJ
009PfqwD7z6ANF5WAHyiR2tIyLzxoNXjdWjK5DSCZdOZDqQnUgcuhDASfDom
z/6ZUxVdDgz06Qm7wXcQ5pmL/SNu6mf+iTJfo+Pu6saJ9eEx52hevM7q/gaa
MjjLUfyEYxE6kvDBDVBsQSq0ij033BmT555/V3Y50P0GR13n70ld2jxiXD/z
dYo8f+Ur9K6U0xg/GR5zjrb/LBeaMjVXQedExspav3YOUorgbFSnrafMrTF5
pt9nqnOUXQ5Yqcf1xSjNjZMvMGOplOevMfShzFZoBC9VPZfGUJbNs1za6Z14
i9d2NcEhUZvXExVxNjJ18ux7Ypbir0K7qu0CofPz4POtzHeonOebvnEZr98k
5xyHgmye5dJO79TjaiI/cndXKqBdiGz8RCfP538yRvEaQbsKe9T4PVX174eM
c8oFRZ7/iaH3z+5ApK0euDOJZ+sm8+uZBHncUQ23b41G0FnVnuaGS8aZs5Uy
39fJM/0hU1i6XT7bCHvRvr7wZvGgo5W5g6rx/O1RvTgwtPTcikngWdo+6xnH
xTSJ4DxrT3OjkW9IKY6L590LFipeJsChhp+As0LjZnVr8Px1hk4TTHS8Mfah
JtvfiJKejAttk4jDSW3nGaf2Ajc/ERfPbY9OUowBak8UwmgxzdnE3E21eb5N
8KKxioJ1XQ6bZ6l0ZlykaLocaA+1nWfYPKf0Ncr8MC6ee6ZoRe0UJ3rw4pq8
sCMmzzcxNDXHjzFqS7scNs+iMLKhnXGB0nA59OSIwheq0zbFyzP9MeNcWqM4
VoWVimlymEMydlZQD8+T7uxGnq3rctj5/FLFDBoDpZjMo+FyAAxqj7Ki8OkS
/53PJcBzw/x0Rfc+HC2RzYZAj1JLm5l7qR6eb72hP720CZG2osth5/NLpR00
BqMtfQQbbvrwT/ncN3os8nRlqcKT1KMeToDnQOp4RRdacaIQf8zErFM6eR7H
0J/ODud4WHFiRX/+hmKdOtDGjRuXCoIP4kqL+hsafi/wAwOlNPeByY0lE1oW
Tm5cKYIdNfetJ0dUSHjeS5kfJ8AzncaozV3KXQ6M1Yx9PKif54nCqNC6Sf56
2FOrUwdrysrKEmtzCAr9XkWYQ2k8dTWjg7dFTv7YG7ump7lfxeeVpI3o8Vhg
K8/s9Qnz7CxRdqGjXA4sypT2QhOTQvXzfAdD0/KbEWkrPoelhz21OnXnzp0D
zk+cOBEIBMTiSDrbHIJSLMmFac8/q6v5n33/i7l68scy9DtjO5+IOu96InWR
ae7FCfO8O0c5Ch01cYl3ipS8tnh5fmjGKcVbjyWkhz21OnUnT57ctGlTW1vb
nj17PB5PXG0ONSlG6rASV5p7/5jgLV+hX4niGU7+RN9Kqaupx9mITHOnJsxz
29OT1Pwi9PDhskLjHJpGmdsdL8/3jApnlloxfVQPe4dU6tSJgjXLly/v6ekR
v48v1ZK/imjIShFFZO+O9qlfo4wizyP6JqdW7xGjWzHreqWEned6ykxLmOee
R0aq3QXwbgI+DyzI5MhHeuPl+W6GzhEC0dpz+kNQInjaX1OrU9fe3n7kyBH4
0NvbC3ZbWo/RcjzLn43CiMGD+5zCmVfmGU7+uPZFOJeBV4R2An/EeeaS4Zk+
zBSu2K4WEkRvP5y6v8zPzKAJ8Dxj0hkrRu108iyvU4f16/r7+2sFAczAtrRZ
y/kbcO6iqhgBME+593/74hhtnhl6b2p1+HG8mBPlkchzYZI8e/IKFIeuKHCk
8WKcmHsqMZ5/HHE5LFeCST978jp1qL6+vi+//DKxNoeI8OkqqWnFUdt9LemR
M6/F87j25zMGFmpWUyTynJYkz75s5VzoKCs9dl4wMZ7vZWi6EOWw3EOy9nw3
jUxzSyfdwA2eU7395r6Renge0Tc9zd2gPSeIgu8U5u+jzMNJ8nw2/RbtPBPM
ZB7xaH/CPM+ORDmsFbWzeaaC8ywdx6Fxm9Q+9aarZ16LZ4amTPStiZllmiKk
bXhmVyXPM01l5A6SVNCdmaV+ZhZNmOcHIhMr2k8KDDXZ+fxUVlgAYHiyevs4
yujneeTFJ2JGntF59k1yGsJzRUmlWiwFR50TF59KhueUiMthoaidnc9PZYUF
0Dj/uH1qXDwzdMbMupe1g3XoPJ/9RpYhPDc40tWy+ND5H7sgmCTPjwkuh7Vy
7Wx/I+qBFGAyrXo7nPl4eb69dYX2GE3IeX6dMqmG8Ny2UHVWBcPmI9L6k+R5
5s0X0OWIq4gB+Nu+1jPgwuECh3cwayDYPEszLtA4T2mfmgDPIy8+rZYphBKq
E9QaxfP5jDFqiXxpxTtmLvczc2iSPE9n6FwhfVR/rp20Eq90AaoHZ1x5nfOM
OaIihAD2U9Xb8czHyzNDZ82s26lWsC5Sd7HCKJ7pU0xO2X55UAWd58lFHYbw
/KSQPhqVc6UmDBPBku7e/6Bv4T3tU/+9feqUxoKn3PszEirQmoCGUz5/oOsC
HHmwD7DABz3V2KTOMxrnGa2zEub59tYyNZcj8sBgvoE8V5coVJjBUee43G5D
eE69Lahz4huzbWF5dJ/zrr6R0i6N6ht5j28htmNqtGTY5POLb5+E8wsmS0y8
jzm9JXWeYau57v0/6huZMM8jL85Xi3JgQJgyTxnIc0O+wrMqOOocOb/XEJ5n
MRSPpLZxwGyuEMyNBdClCQO7NJIy/wC77Zyc5j5gatre8KjPDwdTfPukON4X
3+in/WinWFgAzdojLenimU+AZ4bOmVm3W+35vorMHcbyHMhReFYFep1Gmph5
1Cie09PaYloG8CXgO096K7FLijwz9Kujg/+GSJtnpa3uPyPMYJYV7/JYqVvt
6EkfsELjfH/fyCR5ntDilufpRaptrDeW554FCol2IQ9kWZuBPKcJD8lqPK4S
fsm4e/8DfSO1eYZejQ7emeZ+xby3kFuaZxFmtZRjsNIaFW7Fqlw4WHu8sUB6
5hPjeXRwsXwmGgPCbbetMJZnOp8pfGFAoh12ZELhaQN5nnNDv8bEt5hoPbtz
ktglDZ4ZOnp08AfmIW1dnmPCjEJHQtHrEKtyoXP704tjkueZofPS3K9HhR0w
INxzQ7bhPFeXOqWJdjikvfH5C0byDF3KbFW7zeFDauneSmmXtHmGXo0O/ght
vuFBPJN43rBhg6nJzzphRolPbUQ1gs4zOgNPNhZMH3jmE+Z5cuOWqJk72Isz
Zy9l5hvOs69wltS9wQuHyaLG8jxXSIeWT3yjwxa6tV0cExfP0Ktx7U8bnr8H
yOnJf45XZvMMhxFQFGGGvzASxLAGLvBPKeeKFUHFZ/3QOM++OMYonse1l0tn
7iI5/LVm8BxYPGBIGJpJcfqN51lIh5ZPfKPn/HRjwWMDu6SHZ+jVhJZ8Y/ND
zOPZPH8DYUYfFbgVX20Tik5kts7ObBUrogDY4iBRXisD46UYFn7aWwln3iie
R/Q9Jx2mRXL415jBM81hpPsKzaSUdhjO8zyGZghPYEk9XtFzTr84JjGeoVeT
G9fENf8YU9byn0WYAWOsHPizHP+ESWe+NapXPEYTGDp5VO+sGadwrhZnhOUv
vEbHD43zk13jDeSZoVkz6/aKUbtIDn+BSTw7X6hBdz08k1LUbQbPmYLLIQUv
PIHSWJBOmYR5ZugPZtZtNzCCZyGexUkTXB58tvXG/33hHxg6cuCZnxA589NH
9T4lDGTwrWRRxeexjihcFPO8lXjmDeR5ou8X0mmanNJGyuSYxLNnefjZK7zX
jF5y2QyeFwjp0FJ3Fw1LZvCWJHke0TcttXqvUeEOq/AsWuYM4Q1NN46/gGde
g2c8808JGQgAFZ5utAM4n4UWfm7XeMN5HttZLrq1GaHSi9vN49lXEn72CoPt
jIOawXMWQ58R0qHRZ8MDmOmthC4lyTND7xsdTEtzNwDSyWfiWSKfH44ewpy2
smnctO7QYRpNdfL8GEOfFvJ48XTj6AOfxYblGW+leOYN5JmhDrwvhMvKTeLM
4zlQNB4HAnADetDZah7PzwqHEWerMdT5bPtUQ3iGXo0OZiQfwRv6+fzQOzFr
a+LcUyO+1x8+TPHwnA7DmUiZQRwV4vtEYFnQNd4knh/07gLAwpXGv7HSPJ7p
Eka8WicuP2UezzmCy4EGITQSdO/HLhnCM/RqXHuJHqTBhsM1BVTASRSzrMWc
EJ3sqdVjVFyvp034VYGuC7DAD1NbRG/5wSWto6deHnDm4+QZzvwzkWLdYiYY
3C6lZ95Ynie01GQIFQwyQmlIS0zl2VlWgz0at6zbPJ6fh1FhfjPmyMG+snwL
jeUZejWufaUa0mjZMFFEXHJKX63I/Ll0pK+HPbV6jGrrpW2CqwDQ4gUFlzYg
GvWTtJfUFc1j5wSZ+yjzA5okz9mjejOEiIeYcL6oa7x5PN/YVY57qcjcbTbP
HmcB7mtkca+pPGdHnsCCv4svjjGcZ+jVuHaCSIvDQzB94puaC/P3757hbrst
t+cG6NjkcK9S0uOypWr1GNXWS9sUvQX5grmds7NWiXMfU6ZNx+hWyLKVNd2e
fSZ8mIzgGc78c0I2Ly4LGwueH3jmjeWZoUW4o4aUF83m2bciNCRMczUxRdRU
nvMiD30vqKsRu2Qsz3ATGNe+Bs0ODHPAUUf7U5Hp9d9ZJunVlIR5VqvHqLYe
8/l5QY2+dyuXrHZnFbuzi905xe7c4rIlJHPFy1FLet6GOQud4j/vW3z0XzL+
wD7Js4/y3328/buz2tkpPHsfz/6QZ+/i2e/x7L/y7C08+y3+Jpa/heVvZfnv
sfzdLH8Py9/H8vez/HSWn8nyqSz/JMvPY/kFLL+I5RezfNaC13EXjt/emcuz
WTz7DM+m8+zjPDuLZx/i2Wk8+xOevZdnJ/Ls93n2dp79Ds9+m2e/yX+T5b/N
8t9h+dtZfgLLT2T5e1n+Jyw/jeV/yvKzWP5xlk9n+WdYfiHL57L8kkc2vwg7
+vVdL/Csg2cX8ewCnp3LY6/YmTw7nWfvF3p1T6RXtwq9umlAr+6S9epRoVdz
I71ysL8u+hHs6JHS19klPAu9WjigV99Nbf+XGX+42qsJV3v1zW9e7dL3B3bp
oYFdysIusfz8wj2wr9yDqYsjXZondClV1qW7B3SJZflvCb3610ivfij0asod
x+bdcWx+VK/u218hxWPrQ2slvXpCOFc/5dkHhHM1+fiM+e/8Rzvypief/5BK
PUaN9WCuNwhatrI8y7Ecl7z8Es7p4MocnMvBlTu41Q5urYOrdHDrHNwGxwbO
sY5zuDlHBedYwznKOUehs0jcFpbljkrYaI2Dq7i6EceFt6vkHGsj27k4Rxnn
cHKOlZxjOedYxjmWco4iaI9z5Jc7CqCp7OKyqxut5hyrJBut4Bylko0KOMcS
zpHHORxcnoPLd3AFDq7IwS11cMsc3HIHt8SxGhosXrMENirhHMWSjRaHNhK3
K3RwxZLtVjq4FyTH4mq3sLPQ7tWNShxcqWQj4uBWSTZyO7j1oWOxnlPo07I1
S6C1Asdq3AgPubgRF1rWR466uB3hHC9IjkWJeCzKHYX487KLygacKnEjPOTi
sQgd8vCxWOy42ifpaTVkAcyQNz35/Gr1GNXWS20+3DLEuHHYn/x5fcM+T9tb
Ved/v5b+ldBPCP0bof3kiyukl5JPKQlS0hpcxzV6MyJVW9F9KnL5O0h/F6H/
Rej/JbSH0M/JlSukn5IeSi5Q8p+UnKGkk5IOSn5LyTFKfk3JG5S8SskeSrZR
soWSKo9rT2gk6G5yftJPPqHkr5T8iZJTlPwO9kpJCyU+Sg5ScoCSXZRspeRF
SjZSUkFdLlpJ6CZCXyR0K6G7CD1A6CFCl7tC6e6/aK9ppGQfJS9T4qGkhhKO
kjWUELqKUDehVYTWErqd0D2EvkroG4T+mlA/ob8ltIPQTkLPiN3CXtP1hG4m
tI7QHYTWE9pA6GFCf0PocULfJ/QkoX8k9CyhQUI/JfTv5MoX5DNK/h8N9+nP
kT7VtHhCHq/L30boh4R+ROg5Qj8m9BKhfYReIVco+W9KLlHyMSXnKPmIkj9Q
8gEl71LSTMkRSqBb+ynZid3yuPaKA5DCd7vJ/6HkLCV/pOQkJe9T8g4lRyk5
TEkDJfWUeCl5iZLNlKynZDVds4quIb3LXKcXusL10mEwBXiAnwyLPGShuAAJ
YrgAtsWQAixi4FqPv6FWj1G+XqNN2Cn8APjB0vFgTuXBil/WV+/e3XDU89rb
Hq9vW7m3Ptt9UOyv+JgPBiWWuvydpD8ZnnNch8Kno7XbEJ7zXKGrdV2LxxCe
S4NhD/+se50hPC/31mOD75L+JHkOkK0ZwrOxAA/aqMKWbp08L1t9wbEqPKaD
bYEEkx731h8rVqvHKF8fs004IG2dQYzIRVlvoB0vW/lUESJd4vL/mfQnxrOf
hFIFcDIlZ1ebITzjzy7y1hvCc0lX+I1pATdnCM+iOT1Agsnw3EO2FroOijld
4nRt7u4O54f9ajw7a/sLN3RnlfvFW62eh5STkVXmu1GI9DKX/6+kPwGeK1yv
4qPKOJ+SPM9bSbjiSk51gyE857V8GI6KVHiS5/mNLg5js/DX7epIhufdrujn
/gBp9AMzK5ry9p8u/c1lkecV+3sLX+rO5Toyy8MBUvgNg1NVxnL5/Ij0L1wd
8fIcEIwzBt6xkeLfBpPkeTPpRr8oZAD7ypPnObexDXn2rPUmz3Ot4DxjtoDD
1Zwwz2fJ3gyVKhxgb6PusNIFNhnMl7BYNJ8fzcIWV0dcPHsEC4NWAh+syK3v
SJLnStdp0YHxdHHJ85ztfQffFlGxpj55nlft2433IzTRzeTyRwnxXOFqzNCs
+gWXjDhfBgzDZ7Dkg19o14r5/ChE+gj5s06ez5OXMwY+CgGHPbOyKUmeC12t
4PBjOfQNrVuS5znT7UMkQiGOpHle6D6IRhXT4V4mZz6Kn+c28lqGdQr1W8t/
lgpvc/7QADs2zxWu16MsDBrVkhMXkuH5WVcTpgRDUy7ftiR5dvZ9jOSgOe2p
Lk+G57eD6zIkGfhw3RW7/B/Fz3Oh6w3Y1ipVza3LszjE9ofOghbPAbI/Q+X5
QccrpxLm2Ut6RcMFZ7zAW58kzyVdoUsMHE507wObuGR43tkaeixXjCfgHe1D
0h8Xzw2uNzIs9SJC6/JMByDdqcZzD3kVLIxiCQ7YdsHG5oR5rhWCGzjkByu9
wH0wSZ4L2zuRQHRgfBu2JMPzBmFCSuwsJsW9Rrr189xDjuS43rTWi48tkc+v
IQnSJxV59rgOZag8noa39dL3LyfG82phMIhpYNjUrr7yZHjOawmZULzu4MNu
97ZkeF5c3RBVDQAu6hKXXz/PHtevMmJVrhtSGvr5/HokIr3b9V5P6HRc5dnj
elPuaYjCUVL+G2cS43mpMNONTaGH8GIXlwzP2V6/WMkTHJiKtfUJ8/zBxbXy
QRy6HL8nvXp4Pk+OqsXohrIs7W+IEh85KXQ17Xa1BMg7PvKbQlfsl/YCNlmb
/YnxvMjVLBpA9BAqW7ckw3NW3dUG4UNO+cGEef5VZ5X8roTXr9d1Wg/PFa4j
2jG6oanhwTMKTp80OQQ+xyzsgCbL2dEfL887SKiqm7SMGPzzBd+2ZHiWXn3h
EEdteWI8b/Fty1CqOAc3sjxXc0ye28gxC8XopBpOPKPEJ7n0fBlHSYWHu+Pl
ebMwGJQO/OHyyffWJ8xzafBPUoTCIY4aLjGeS+oOKL7HB5s9TLo1eO4h7xe6
jlgoRieVSTxfk/r8iSmUfeFpi5dnl2QwiMIQR8I8l3T9UTr4Coc4qrYkxrOa
o4VFjVa5WjV4BodNbQQ9xDVs6vMno9BEYUVTvDwXudqi3sKAHsK2vvLEeM5r
aYu6QEIjXG5bAjwfF9KQ1ILG+DuPk6AizwHSZsVhIGp41OdPUuHcpMPBuHjO
lgwGpe1Ud3GJ8Zzb+J40XEwxxFFZnwDPOyNpSIr9RROd72r+lPRH8XyeBHJc
R9TKZVtCw89/jlfhicKdp/Tz/AvJzKAo9BBWt25JjOdsb0vUzAUYyVCII36e
3ZE0JDXhqKHO1SHluYd0OV2/0bgQLCGbZ4oTheub9fPsJkFFDxNWrvBtS4xn
+V0eHYPzW9fGy3N2JA1JQxjY8bg6kOcA+ZPTddRaU9uKsnmmkdyk0qbLOnku
dZ1SjIaBh5DnrU+AZ2ffn+QGH61ooI6Li+ffC2lIekJtiHSOq8kpDADBpFsd
ZmrBfH4zhBMNebtO6+T5OZdfMRqGIY4EeC7p+lBuG9ERatjsiYvnhoFpSNqC
PeIjqIP8VmKTZNF8fjMUmijc6NfJs1o0DD2ELX3l8fKc3/q+IoShAeaG3XHx
XDMwDem6kn6e1erXbdy4cakg+CCutJy/QSMFM1cc6Y3J82rBeVa8NaOHsL6L
i5dnhy86uIECy+msPBAXz/myNKTrSnrYU6tTB2vKysoSa3OoKZybtOtMTJ6X
Cs6z4t0ZG1nZ4omX52xvs6IDg1eZfp7PKqUhXVfSw55anbpz584B5ydOnAgE
AmJxJJ1tDkGFXA7OH5PnRSrOMwpwKmr0xstzpvuIolHFgWpgO6eT57faayw6
tWeU5OwBmV9KRNXr1J08eXLTpk1tbW179uzxeDwabVpCYZfjYK8Gz+tlaUhR
Cj1J7a2Pi2dn3yk1oxqe9a7dopPnLYLzbN3ZkOQlZ6+1tbVcoo8++uiQSp06
UbBm+fLlPT09YptYv84qU94o9BYcdac0eF4pFCjQMIAYBIuL55Ku32m0GYoS
V3t18gzOs7UeJzFWSdava29vP3LkCHzo7e0Fuy2tx4j1Ra2SkiQqNLFS2azB
s0OSw6+ocPGW4Dr9POe1vKsxKxcaEroP6OH5vwTnWePeMeyls76oWv26/v7+
WkEAM7Atft+i/gaN+KvFLwfVeM50NWlPvaGHUNZeo5/n3MZjGtcIekE9r5TH
5LnluneeqRH16/r6+tDNTqDNoSasM5NT1abIc4ngbGhPomELy1o8+nnO9h7V
cBLCidC7uJg8v3TdO8/Unu+WCR3gFXt65TznCjmiMYEpqDqa663Xz7N2fmZ4
lrDOE5PnguvbeUbZ+fxRQn5yqzqieF7p6o35NCIKPN757oM6eS4NnogZMYaL
qGJjvTbPZ/9Tb9rGMJadz6+osIne3ivlOVcoX6wnlxKHhGsvrtXDc3Fna8x0
i3D5L02efe9usXqqZ/Ky8/kVhSY6e12ryPOKitAanfPIOOvt7KzSw3Ney7GY
j1HjKPXsK+s0eK7eGyPn+TqR7T8rCm1s7voO4Nm5sR8rcuvMQMPLobjFo4fn
bO9bMTnEwLhvxxY1nns+LdfpCw172TyrCb2OrDX+BeXN8Sa6A6I53no9PGe6
f6XH7Idc6E31ajy3dVQNg1R8Q2TzrCF8IenKWn+8QV1ANNN9MCbPKy6+F1fu
fY+vXJFnz6t2pC4sO5/fDKG7Qi6u1ea5uPOYzhkQjEK3HahS5DlHxwNW14Ps
fH6ThLOES9trtHnOa2nW6ZbjNI2nzivn2f9Oje1soKxbn3+IC/HL823T5jnb
26SRehql0OPeaw72vF0exXPFL+stXWHAWNn+s0kCrzur7oA2zzAY1O8noMvh
f6VGyvP502vtyIZUNs8mCUdwGjyXBt+Od0YP7HDhugYpz569Xv2BxOtBNs8m
KfyqxK4qNZ7zW9/S/yA2CoeZbW9WIc9nf7fONs5RMolnS893GyKcVclr2arG
c25jU7wPYoOTDP52ztqD5/9jbc+H5c6fHwCLbRtnUebNd1s3H8lAhR5IrHtF
jecF1bpmUqKEkZOcioOw2GGNKJmXj2T7G1Qslt63Qc5zabAp4XS4s8FLWATm
Ok/dV5TtP5snTEwq7qyV85zfesROhzNDNs/mKfxW5cY9cp6zvYftdDgzZOfz
m6pQsXT3oSienX1v2HEJM2Tn85utcLH0zq1Sngvb37AfXDVD8cY3vvjiCz1f
s/0NUVgMP2ffASnPWXVv2s6GSdLPXiAQ2Lx5c9RKxTqNNs9ShZ/euvhL5Lmk
q8F+0M886WTv+PHjJSUl1dXV0pVqdRptnqUKP73lbUCes72H7PQh86STPZ/P
d+bMmSie1eo02jxHCWvC5Da+lttoG2dzJWdPXo8RBR5FFM9qdRox/xn+Xs8p
0FFCr8MOa5gqETzpSnk9Rlwv5/mQSp1Gm2dFnQ1esidQTJUiz2qS86xWp9H2
N2xdK+lnT8oz1mOU12mMt01btoxV8uzJ6zRK2wTTPQgTK4OzF16QvRf9gpMy
CNPE0r2Ynb+BjyhGfUHxYCr2XfG3vfXWW/IGjd2L4gWieKwUGxycvehscHD2
oni0FR+Llp8+A/diXj4/zqTDX5yClGqDoKiV4iZSZWdnH5JJvtLwvSTZ4ODs
RWeDQ+3gmHdOxU2M5ZlGLhNbtgZfhsNsy5YtW7Zs2bJlK3npTJ0dyhoGXbhW
2rNnT6Wgjz/+2Ly97N27F3axcePGQCBg3l6oSuqsIVJ7T7rhMq8LogbndAwO
WlJBd/DtsR988MG2bdtM2gvP87iX8+fPQ+9M2gtVSZ01RGr5t4bLvC6IGpzT
MThoRenLL7/87LPP4C8Yn3379pm0l0uXLn366afw4W9/+9vSpUtN2gtVSZ01
RGr5t4bLvC6IGpzTMQhoqaWbwu6KioqMmmNV20tfXx+cpmPHjpm6F3lqliFS
y781QyZ1IUrGng41GYtWlNTSTWnkUjVkGKK4l8uXL7vdbjGF1aS9UNNgOBTr
PekGahB4Nvx0aMhAtGIKfJvDhw/jTmGkE/UyWaMER2/NmjWDk3FtEgxq+bdm
yGyeB+d0DA5aUfr8889feuml2tpaGFDDKTNpLzCazs/PXxVRf3+/STuipsGg
ln9rhszmeXBOx+CgpShwpQZzd9aV2nvSbanJRsuWLVu2bNmyZcuWLaP0/wEw
bNNt
    "], {{0, 152}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 152},
  PlotRange->{{0, 240}, {0, 152}}]], "Output",
 ImageSize->{244, 152},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[73]=",
 CellID->506390146]
}, Open  ]],

Cell["\<\
Like the other commands, this command accepts options and allows a \
combination with an ordinary plot\
\>", "Text",
 CellID->173835516],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spinorlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"spinorfunction", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"QListSpinorCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"spinorlist", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"QCurveStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.2", ",", " ", "0.5"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.04", "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[74]:=",
 CellID->1075757492],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztfQt8FdW197n1th/+9PtCP1sVqwUvrdUqDTW8DSQoRh7RICIQBAII4Z2Q
wyuBmOEhHCzRoGhD1BqqxFBRYoMaaoV4qRBvSXtaW0lsrQexufGK7cEgDSow
d83ZJ5M589iz18yeOYdk/r+lv5DHmTP77P2ftdb+r7WvnZ0/IfdrPp9vWQ/4
34RZq0b6/bOK7ukJ/7g3b9mCeXlz54zJWz533lz/kNkXwTdD8N/8f/P5pK9F
D+7g1BnxQJO4pU6cWxk1+HpvUGwJo17mxIkThw8fdug9evDgIVEAzFBSI6as
NTTgkCMhxhdrbm7esmWLk2/XgwcP8cb2ehpj4NnD4w0PHroyIDCZUs5KGrJB
8EKFxxsePHRVnG9uFUcE0KRBDNjGOOlhwhtAVnuDUlgkUxa8DZJLOdDkyK16
8OCBC2DVWyYNebEbxCzAG+vWrYP/nzhxQn1RehYFbFyZFDcBt3jw4CGhYC08
0TXwHDQAxsjLywOXo3NXRcUYppQF7MGchvXgwYMbWFbNhzSIVTWoXl4dp4D/
YM23MUukePDgwSXAMudIGsTAl1BA5g0phWLTsYl9ZQ8ePMQBEKHYTGsYGfgw
HUkJiTdKNkjeggOk5MGDB7dhmpa0Y+BaRDZEmqv2lWYv5vnKXsDiwUO80BK2
uX7PDWD6tea0Is68AeZt0XrwEBfYczaa0osem7xE9c1XMpetn75o7fSFH99S
7CxvQHjlbc568OAy7Dkbb92xctXMBVunxPDG8eFr4DtnBwhHRxY9PjnPWd5I
iaRQPHjw4CbsORu/Grs8NGK1ijf2j1lRP3oF+bpo5gLHeQPME3V46AY4GDxe
Vn1kY+XhfQ0fnD7zVdzeB97ZyE8dv+aWiadSOqMPiERUvLE7y39k1CrydcmM
he2DBJk3inIW1GYuI3Z6UIkdrjg4ftvW+Ts3Laned2/55+Mfi9sYXshIlHno
wQzw6cDHNGPdq2DzAvvI/4+1nozPu0FuiVYOnZkewf3DM/86cLkRb+zNXHYo
YyX5+oEZC88r/A0lb5wYWoy6umyfD95Q7N9NxnB+8S/J/4+9+V58xvDCBMzD
NeUHlfOwoGx/3OahByrkD2tPfXSSHw19Cp9afKgDqdloHVCYrsC4tFGEOrS8
8adbC5+dsBS++HToAw9N7QxMuMQpMmmAm0G+czTjYeCNeNLvhQZ5HoKbQb7T
2NQat3nowQzgE8KHBc6h8pvwScHnBWzvtqO4N4hasIFbpqRrUDd4vpI32gaX
FM1ccD4SqmybnLdh2qJjw9dY443goKW634fYRBrD8duU3zw28iGgjjiM4YUJ
4vHqzkPgE28MEwpA6fBhPVf3Z6MfVdT8wdU3hFF6q5wNFXXo/smXAwXVd1C8
8ZvBi7Wv3DhuKwzUzhk/0/4++ZHu8DqClrAkHdleHzX4Gtk1MV4AujAaKMqP
PMQFwOHwNKQ8EIE04CODsMWd9yNViNh2NmTAT1leBBunwMsCX8n/hAgFnAr/
qj3wBcUVcXwMwU8bV6b/noGK9QqBEwcw/Yhza/QLxCX+JHzazXflwQh76t/T
eoZKkA8UHEiX3hAmI0pxNgi2DZvmBG/AddfcMlH+556pT2ojFKV9kroJiMXB
MQSnQsUYugki+J1EVbGSeUihVmAM+AX35qEHY5iSPIHpZ8oTmIyovI2ii3Fp
o5Tbshx5g1yaRCvE2di0xKTSn3CLI2OILccrqUk0ISvjs4m4vl6CNO4gYSPF
2SCR8ufTn5Qel5tek6ZcVYOD8TJcDrMEgBkovLF7yBzG17HAG8BI+anjxYha
g+5siB0uB/9MESx/a+o4CFsSiTrIg6mxqZX+a8TlcDvb5kEDktnQ/1lssPzk
/T+XosvUTdHvYE4ZQADTnwce9xTSmDxiNPtLWduHhTcA5l+1B4zl96NjyDFC
t9POKJGogzYPY0FcDi/LEUeAz6wUbMjQ7V1DHpfq/QJFCwsOgJfCzPz7h2dS
eMNoM8WIN4juC75AvYdZExYrBRt0OzbyIZ6bAvY7DMCnnAAge3Y0p1cBo0nr
wTXoUze4GQYZBgjhIVpRf39EQOIZLsDINugZUZSzEeWN7OzagSnNwxag/pBs
lBhto2it2L8bAnkOY8WrB1oCtBgqqz4CY8KuzVhTfpDROfHAHfAxwYSHjyzm
u9SVaxjI86IOjNe9bdg0Xs6GxBupBaV3Zor/7hN7Xsn+V0AXMCAL5z3K/idk
DE0DeTqwW9UmFtcdFjIPUSmLfQ0f2B9DD9ZAMqIxg2+WkyQbB/CE1fmpfepA
BingUfByNsTkwubeN0Z5o4dPvJb1zwkJFN29/DeDWXMjhGpsZfZgoIxEGtYs
rn1CLJCABarxwAvEOZT/yXikEcns6bvlNqcfJkiBdUpxNiqHzsQtnF63Nvf6
Tidv/L8eYv9Clj8kgZu8scJoJLSxPlDsZ1yyW/z6hFgLOlSz14M70GFsNmk3
kUwb7jnamX6YIIWuEWXUbETtpgLxov8bwxuX+MSr+5v+IUkUA5GKGvko3WyF
KrYbJxpaPPqEkH1VC4liHW/Zg/NQDzvmEWYYqhCzHCxj5F4U2QajsLzTLhso
+r6u5o0kn/gj/eI12fbdWy6N4bit8PVfBy5nd3JshSpzK53iDYh9XAcJUizo
uLxQJS5QunnYJJvJDoK1aAUj96IHKXLzDSYDZ8N3sT5vfNfE5YBxUO4uKWXn
LGNoxc0Gl8Ah0iDmegHLxsrDlsMNL1RxGWquRj7Com525Dmrb+C9YIGRIlCC
lPuHZ+JWymWDDXnjMp/4Y8PQg/gMJEghVjd4vlF9veEYYt1s55wNYu4mSG36
DMRndq3c0kOMzAbZ6UJ3yegYVoiO2SCgBCm47VfJ2biUxhvfSzf6W22e51RK
MXuIZCVUcdrZIGaB863CZo7Ccm7EgzUQuVdUZmNpR09fAKY0jJoIFShBGGJE
GuxVbFHrdYeSN6K6rz69Onnjyh5Gf6u7r8RYe0us2L8bt4/gtLNBzEWXg9TF
23kFTwDmJmCoYcClr/DOBjGSEjw28iHar7G7HJhyTorcC50RvegKE9643Cfe
oL/B6l+1Bxa+6pu/GbyYXchBymNZU4LObaNoTXPotkOYF9inlh0iAc6GV6vi
DmCidsr7rcqHSJ2FSVEGu8uB6e5FkXvhMqK9J4u+niZxCvBGnz6o22fnruiL
dHTRNIGjh12qzJWNFVJmwnr7Tr6IBxZ07nwhnQ1VCAAPXNOOE0wuB+ZJSqlJ
QWtEL/4BE29c5RP7q7OdFHcLeIM9VoJYj+mB66azQcz5jRVSOG/fVbDvtHhg
QefuFeYpL0b2GZUSBRLgm/wVy9nKmPqs3UPmGPEGe6sNyW5YLPouY+WN64ao
/pyS3gGfhz03yyocdUIgSre5lTanmSk2Vh7mkprwdmPdQbSWDZmcDw5aqko8
kp3EoxkP0/6QJcmGkYlSCufZ5ZqSXTYCwRt9eqr+nL6dxJ4djY4hfScReSQE
N3NSPspRtUX8Z2831lF0xoPIeFnOKsjxO1FZ75n6pMnf0vf1MLVsQFlGpIGT
bSQXiRddg+CNa3xiv86sBVAlvbsX8AZjqBIdQ3orCXzuOtw/kHNVEP5vizec
rK9HNdygIyZf58EZRIPKd1tQU0jVVkt+suvuKaiNnmTDyEQp3b1wQUrvbNF3
BY43ftCpHSX7IJ19zzSGClVgDE2aaiJz1+EfB5Ivb4XbSv5mq13qcGxDluyD
8DoMxdWm2d0S0aASGS+rtjBkl4NWG6s0SpIN4/asuWUinyAlaRiaN/6jh3hz
9BKbllSbdgVk15xH00RGwGu9sq5pkm8r61u4Zq1qc2xDdk35wagSgAeIHonX
q3nQIhpUYh5huk95sk7NBefEKEk2HrVsuCDlpmWi7zto3rgWQpWokMNcKxsJ
VRipzCTFgWwfWnl9TexticJ3bORUndmQ5V6S5qU4HAVJbtQFXkNNHt1UJNlY
0e84qmu6G7KYhymllg0XpFw90Yg39HVfMm9cf73IkNyQ3y3juyJj+FLtH3XG
B7n9ChFKUq92FW/4viYGb8BtnMWYA9lRjskNAi/F4ShIcuPYvB3s04Zso2gh
b6wwpThSDLKjnGSiuCDl4v4WeeN7PghVTJMbsrF38pFSHEV7bI6PdMXvN2hu
S+KN9EttFLY4kB3lpdxQwlNxOIeNlYdNiko0Rqk8Jc9TJhVHioHHiwmXjGSi
yCBluej7rsU4BXjjR+PNC3MUQ8dIaNEx1PYtwQRxof5lercl8ca/+cQdva3K
TR0oV+Gl3FDCU3E4BxhYWr8djVH2PdM79JlMKg5iseuCVy0bMkiZZIs3buoP
N8s4hnWD5zO+N6I+PfrYGzGfFnL7Nef7QQpvfOui9nCy1b0V3tpRJ/rtWO7/
44EOEgMyHvNBjCLOJA96WM6sKo4UjceLkYlSDnNEBikpdnjj2NAb2McQWJfR
FyKFKi/N/XnM+GCqXyVnQ/+2orwBt7Whl9UEKVftqEMVJV6hikOI5pxZHIMO
0w0N4JvAJ8rVynI0atSUHi9G5W4kE8UHKf9hhzf23ZVlXgWssPzU8Yy0Fm29
KLtkyIxozvVBU96A2zp2k9Uu6PyO9Ywm2RxwDHQO9fBgG9E9buapog0NgDF0
5Uyqdnk0kz1eTrVsuL7lV0+2yRtb5xSjxhAIljFUiaZN5K7OmIxo+OaA8W3F
8EbuZRbbJnAUcjiXiHAibeIBhpTVK4iYKiNK0U5H+0iwPIXlUwU51bLhCucv
HmSTN/wrntm0GOEmwdtjrNLt3KYhLhkmIyrcWM/IG5dadjn4HQfpnLbTiW2a
bg6itGESWnSYLLKCL+i9aBglDVEjHi9GzmQkE8UVzt+0QvR93w5vfJJ8uZTJ
mTRVvBnRihDeJAu5dY4huGTIjGjvH4TZeWO+VZeDy3l8pLOfQ0ILIgvxTkbg
iOiQmgo7O0zWiJLkp+nvs0goowYeOCZIoezpoJryiVdn2+SNxpFDpDHMGCL2
T2e/LrhtLO+TtBuViB2e7Jjt6crkGuptqXkDbutDay4HS0sEMzjaSZg8HL12
oxwRdeEY1ErEyCMeSIOxrrPYv5tJ/ZUS0QNgghRKLRt7Rz7JLh1hyhv5OTlA
HYduvE6XN3ZOmSsV4/S/RExGHCALb5LRL0KMocKybmrC8sZmaxsrPDTnfMvZ
tIBg3Ctw4wiU4os84tlJQ2RXf+HNKEiB6AnxOsmrRd8Npryx/p4Jzdf0OvGt
S3V5Y9OCgH/lM+KNPjHZJ9e4MQ4mC8VZGMPQzWVmt6XDG9de1H7SkpbDfqjC
t5xNC6/AjS9Qii94xKNIQ0Spv5BmVMuGOuRI7D2ThTfocYoUi80s6OANxGmw
MJgsTUej6i/MGArJ9RZ4A26r2pp81Hao4vQJa576iyOiVT8s0qyIwSTH7VN0
KJfYL8FolFo23DkpSRk2eeNYyrWSrCgrq4M3zE+Pla1y6EyWAxqYWj3HWu9+
YWu8kfINSw1L7YUqLkizPPUXR0STUWwPMpjeWNIgxi7AZjdKdQzunJSLfmyT
N/aNlRRfR9P6dfCG4bkqWiO1gSxEh0gvw8veXO67yfS29HkDbuvQdVZOY7ET
qrjjDHiHxvICSUaZd9exZyzdbLDGp+FG31yRYYHReePJaQVS4Hy9r4M3fGIK
wuGBG2F5z6gxzPlx0A5vzEqy1NLHRqjiTvLB6RRK98HGysMWEvVYI8oljuxE
2UlhlIm+krls/fRFayfP/rjnQOUCeyRzwsr7Zqy8b/oj47IYeaM4b1tx/rYY
3hiAUI+Q7K6pI7dzxs/YxzCpf7sd3oDbOm5hQ9ZGqALL2YXNDi81ygenzqC8
X8tGzkvlmBqldAVkiaSOD1+zdcqSswOEo30yHh89UV5gZ7/Wu2TSVKy/IY3h
jIIY3hjYh/1eCAeaZkfZ08s1N1f7+rO4UTTeKLCkAbMcqrgjrvAOm+aCY2++
h822YS2U6Q9mL0YUxjIYpSaFcQd2/5gV9aNXiDcUiL7+RVNz5AX20WU3Pjr2
7iN9b2666vrzbLxxdFA/aQzvzIrhjUE+C7dDL3NjTy/n3By0zxs3XtT+mYUN
WUuhCslYcuzxZYRo3beXGrWHup8fdmiHlJhQcQeZiTm16dGiTh4vSymcZzxI
cXeW/8ioVeLVM4A3SiZNb//6TWSBvfPdlLJxE3537Y+fT73tqVtHs/DGvtGR
pGhqPzVvDEAcR0uKi00jLMb0clJKu33euMYn7rawIWspVHFzh9RLjdpHRf4u
hxRZ4bTC5OZrlTMxY8cjvFKjlENgGXdg92YuO5SxUrw0A3jjgUnTz2sW2Hnf
Zauz7zv9jf+v0ouW3pVZmpV54qpL5QX25H2RpOj3fGreGKQ+x41ipM+h6YYs
S2q0ZkC1L0XkwhtjL0Z0T5LNQqhi/+h5dmysPOylRm3hQJM19TIbafRWPZgH
7PNzSY1SZBvpzDuwf7q18NnxeaIv5dNLBz+UlS0vsGCfgXX9R8ACO/1/epVM
mnJeoxdt7t2r+T96nf72N+QFFk2KanljiPocN5abovtLLOnlnIFBXrwBvP+u
ha7F+FDFTQU42UB051pdE1vqHEqKJjd/R+vQ9w3eC5d7beY6my+enzreiDTY
d2DPQ6hyx7xtoydvmHDfsW8PgQXWdvGNRVNnfHVRn+2j7tx+e6YwKTvY50aW
OEUaw+kFOrwxFEIV9ZHTRqYs0KPkdVlSo0mD2znyxkoL2VFkWb3LFWdeatQm
QlO3O5EUzan9sU9vgX2zdShcbsRefzhtteUXN+qgToBr1HPZhC//faDuAjvz
9e+c/7dvseynHE2JJEXHZenzxiCc4FxmPyOvyTQ1GhxQ7hsscuSNmy9qt/JJ
YTqAuZYUJfBSo3YAQagTZSNbS0f7OmeiesMSLpe+a3NW/W2WX5/ibACAVRCv
9o109gVmxBv7MiJJ0aH99HljKEJwrjzKgUId9NRo/uAGvrwBt7XHQnYU0wHM
ud6ARvBSo9ZR1YDSEbHYH7Lnf030UXgjY0fZhK3PwQKr8c+18Pr0zAauBvYG
v4hZYEa88eTUSFKULDAtb6QiBOequzOiDnpqtPfQMHfemG7hgBVMqOK+FstT
jVrHlHK+2u9wWuH3WnrSeWPAvuUwQ2CB9W4ZiH19WESUbZR0bA3s1bO48Ebx
km3FedsMeWO4TxzIKjjX9iDS7aVGYfvQgDLfMNRtMfEG3NbfLWhHmUMVd5Si
SniqUYs4dUbkXWu2vGpIZBrSeKNvcApc9IpQJiywSmEW6vUpJ7IR4GpgLx3H
hTekpOi0AhpvDEEIzrWN2bXbK5TosmxwnUO88ezVuLPhJGMOVawkRWECHwl1
GhJeQb1F7A3yrW0/mDuzYxrSeOObralw0RsacmGB9W4ZiroEPSOajj0qBbnA
dHnj2A8j5fNjsmi8kXq9HW7UkiGloD7tlpBDvJFhobKe7VwVRG07ODDARboH
x4wISLasWvoFBj/H5Uxs10FJDceCkZNphT9s6cnCGzAT4aLDXl5LFlilMBt1
IUqcgutC3HcRF944OOI2aQwH9aPxRrr1FEe6gRxFd/c8nBLwjcDeFitvwG01
WRByMBwByXRY/IEm1DlTUnaFeoqc12vUIkYEOBaoFlYNUUxDE97I3F6Ruf1J
ssB6t6SiLkSpgcV1Ib58qgXe0PYX3Xl3pKdo30tovDESvraY4jCSo+iq9WoG
VzvKG8UWhBwMR0CaqLAgBkExhtLGlVHegNdrFAty9Cr7Cch0eyd7fuw0NOGN
YS+XRFKj0QVWKSDOb4VlZdRzA9eF+BsZFnhD2190U27Av/wZ9QLT8sYwiykO
IzmKbq/RnFuCjvJGqgUhh3xQlDEMVd/gq2COl6Kxh14CpDucNM3lcIpObJca
ViOOX6RaWvOVKN64oeH+SGr0LrLAerekoS5n1OML0eDrpkIRv8B04xQpsTyr
2Jw3RlhMcRjJUUivUdVRVr3Two7yBtxWrQUhhxn0j19sCaMO+jQ3YLDYoKkL
HsNE8j9wp9qTMmAwS2pUR7ejMbeSV1V7Renob6mnoQlvXBEaHUmNzpcXWI1/
AfsVdY+ez09FyDLF3vO58MYnfSIHLd011Zw3brOS4qDIUbRHWQUHlftGWrgt
HG/4LTQBo87VaG/b2IOWpKck5kA6VoPXVDgeXeoYJvb8DwwCuA0MeSc1Ijuw
ZOKxH7SkayfTCr/f1gPLGzAT4dID9hXJCyytcRzqutrNSpy8PGkiF95oHBg5
aGnYEHPeGGUlxUGRo3Qew9TxnbJhdS7wBtxWC1bIAY85Y5DFq0yKOkUasnXU
3Dl6Npx7ACa04JiRU4pQOCA9MhBnthpbSdUQmIYWeGPC1ucydmxTLrBQ5ir2
62oPhMW1Sr7odi68sWfMVMnR/cHlTLxxCzrFQT9y2r9qjzLMTEsPucMbz2OF
HNR2HKpgwXHSIAaP5sgDd15g3wV8Qj3cAuY4VMo4MKFEClG3zt9ps+3G8cyl
ZBpa4I30XZsjqdHOBZZfNZX90qpNB6S8fLloaYFpeWPrjMjp80YLTMUbI9Ep
DjoZwieoTGv7brd2W2jeuA/fkYOSnVMmJ10iDWJTyuFyF/AJ9fD05zJWIwKs
udNIzqTYv9tmUnRSYx/LvJH8Zh6suEvC6fICS2obibq6srkoTl7eazYv3vAv
e2ZTboCVNzJwKQ5TMuw8oT5lbf2QStd4A27rv7GhCgTUBujcDIUHn2uk0bFk
nnv0DUePlXQE9t0MzTiYUgfZgRUjwiHU6fMqa8idKU9DC7xxTdPEyJbK3coF
VikgVOJKIQfdn1fbpffw4g1pDCfMZeWN0T6RWQYPDpUpGSple/kjGtzkjbLL
EQf4SmZc49YpvuK7e8JmUcX+hdWIw5mMsQl1RI5sJklRO203hrf0tMMb32y9
Fd5A8pt+5QJLa8TsiSgOT0HKyy0uMBVvHL1RartxcMRtCN4YjkhxmGZslDti
yaNa3eSNCRY053pxdKfYe7ulk6xtW1Sx//pRp9a4E3BoNOjUEfFwbLbdeEkY
r5yGFngDZmKkEccW1QILZSIYgAg5kPLyPDu8odSL7kuPtN34cT8Eb9yGSHGw
GClLDA8I+EZbvi0rvDHMJ/4ee5qbnm4zqjB/sdGptcA2hpJin0HXmihwbjTA
5TNKk0Z+wU7bjc/SCtNbetrnjYwdj2Vuf1q1wIQKRIUs0Tkwdi+P2uUz7fCG
Ui+68y5JYW6ywFS8MQaR4mCxTUuqi/27a4ZVu88bG7Gacz3haFRhrhUpuWid
iv0LhTocHRBdfe+BJnm+WW67sa0iXTUNrfHGsJfXRbZUYhZY7xackEO3PQXN
Lr6HV5yyaU6gePE2HG+Mg29i2pGZGVGb56c3uM8bYyxozjVw56BAljGM/vOC
oA6nx0Sr6yiJioQtK8zB2RjU1oMLb9zQMA8+r2+2jlMtsPrcAvb3A84GRl5e
JPrG8OINKUaYUYzmjeG4HA7diNr82on/4z5vwG3VYTXnGuGozfYvEC9nN/YZ
1tLz9uYr82r7v+rHeJ4dphYyJT51OJ1AHhFQNyKIOIREamhNYf5ERbp2Glrj
jStCd8Lb6Bu8X7XAcmoRZa24jGjvxbx445OrIgrzsVPRvDEK0W7U1Eh+u2/O
R3HhjWKs5jxWOBqVa1qah03Z8+9uvlK+ras6butHLT33ItlDRzid2NQhb4k6
aIrGKfLltKUNjNaSuVR3Glrjja+3D4hsqSxXLbCkNlyogrDLcnjxRmP/iMJ8
4BA0b4xDnKhiauQRkJz7l7jwBtzWKdQpkPAgU6Bxf5O15PwvhfGq27oq9rbu
aOwTymSNB/Ufo4lMHUdCnPUbuiY7h1XRPXfdUkoWe6C2P0fegJk4ZfOLGTse
1y6wGn++I0NxURYv3tiTEVGY97kczRtZnFMcEHJmLItDfoPc1j7LocqpMy/N
/bmsW2O3WmG89rau0tzWt9t6vMzseOiH7QlLHU4sDa3J1QEdYZFu6wZTA2fD
aBpa5o2MHdsmbN2pXWA5tTP4j8MNK0VfJi/e2DotojA3XWC6vDGCZ4ojt6Bu
ygO/ihdvzMNqzuVz3LbXq3TyLLZXGK97W1reIPNQqEhneVnDbYLEpA7uS8PI
gORbOoU6ZPMOPT8b+3DnjeQ3pRMEvt4+QrXAktru4j8IVy/kyBvFC7dtmhuw
yBujEIfG0i00qCx5wV+kMcz8Mi68Abf1MUpzLj/FRgRUdXmm9l72/NvaeqB4
A+ZhVv2N4TSTJBiRJej/NAGpg/vSMDLSrLXjnxaS2I25MynT0DJv9A3OiqjN
J2kXWI2fpzMvWdIMjrwhKcyz5lrkjcwred1UWXpd39kfSWM46dN48cZzvXBS
TynPtjcoIisd2tIKJ7T0NLotCm/4xK8nN3+XTh0kcjfMtCQadfBdF3TrCFKs
tetZ0NjHCd64IjQ+0sAnT7vAcmpxRySYm2+8fd7IjeAn986UxMkjsyzyxgSf
OBCzDWRsWaObvpn9mTSGsz6IF2/kYDXnJTXi3Epscn51/fWU26LzBtxZcvO1
weyFRi9uXnaBP2fBQcSjkIcUQ6Ha9bwqjKdPQ8u8ATMx0sCnRLvAktom8Lzx
65Zz4Q3ibxwcGOlhflM/67wx3IrSQGtJd7fDbUn94Rf9IV68Abf1N1Sf80hZ
lskjPtZ+459Cvy1T3oA7S2q7PJi9yOgSJs4Pe7G5C3BhM0VjyuJrRrvH2D+0
zxuZ25/O2PGE7gKr8SMEYCZ2eS5H3tgzStpM+fzyS6zzxqh0+zcVHFruu0e6
rcxVBzP8rtbDqnjjEXyfc1pKIdZOpRXe2dbDPm/AnSW1XRXM1lcXMyVbEiRg
iUcNILZdz2vCeNNpaIc30ndtiajNdRZYTu393G784vs48sam2QG//xmmBWbE
G3f2sX9TZbfWEd5IL2iUxjB+vDEJrzlnr3QQ6q83vS1G3oA7S2q7Rpc6WHv7
JwJ1HMC3eLVtqHY9QPVj23o4yhvJby6LNPAZo11gSW338rnr5AdEssA48cb8
ol9smhOwxRuTfPbvK2tcE7mt5HnSlso3x38WL96A22roi3OeYZGyJOf/mDuT
5dNi5w24s6S2PsHsJaoLIc4Sijt1tOCbGNg23XO+jGxHRTrLNLTDG9c0TY1s
qUzRXWD1uSs43HVfP0fe+PzSS6TEcsZUu7yROtPmfSVNbCe3dcVUqYvFNZNb
48gbWzGhCntyPqelJ3fegDtLausbzM5TXgh3dmHcqcNd0qCcK6q11sylpnGl
fd64JEwa+KzSXWD5VZhzoo3sslyOvHG0b6Rdz5Db7PLG7el2bio4rNw3OXpb
l9wjFXokz/5LHHkDbutzZs05Yy/9l0tHM35aWN6AO0tq+4GSOtBnJVumDnIc
dlWDJIGbWykZpX/XlPLo74ARNQWB5QPsLBmqXc9PavvfyjYN7fAGzMRIA59H
dBdY75b7ONz4N6Zx5I19wyLtem7oZ5c3svrYuanKkTUyb2SNkgo90vMa48sb
+5k15yy99D9PK5zc1sM53oA7S2r7YTC7s6IB5YpLxk4dwBXwyyU1djuNyOVm
JfjTr2wYexD3fvZ8+Lzc4Y2MHU9kbn/GaIEFs+1JHW5aI8oLjAdvPDlB0rgy
3JYZb0y21cMnZ1xQvq3gkPJNS6onFB2IL2/4mTXnLJUO1RXp7J+WNd6AO0tq
6xfMjioMrXTqph4NIwHoguO2qcwbelsqJ5MDh6+rbLiu8u3rKv/rusrfYhuy
GRv7gbArG/u4xhvDXt4Y2VLRX2BlpXl2blm8Op8vb2yaFSheuI0Db2TD8rMe
hfW+N0xuK+kuaS+DbGsmpbfHkTfgtv6HTXNuWukAzsbUth4u8AbcWVJbf0Id
Fk8G0aMOSewB3+feQFjmDYh0yD/hKsAhR0JvVf2zl97nNeXi1uqr69pQZcsa
Y6wIeCd3Jvm83OGNGxqWRBr4TNRdYMnNM20NddJcjrxB9KKP3zWRD2/cjumM
qrDQkDLf1Oht5dwuJSSJjOr5MVVJw9vjyBuVbH3OTSOCXRXpqE/LDm/AnfVu
GRpOW2NB2hQ1uS0n/L+qwcG2h4q2GCocelPU5Q3yeWVc1P5Mr3pc04MO054M
aGSzW3q6yRtXhO6NNPBZaLTAQplrrA/1RdM48kbhdOlE7D23T+XDG1kW2xRX
3loj80ZNqvQgkGXbwQHlScPa48Ubixg056YZSHA2ZrT1cJM3JD1A88jD92y2
fvIpcIUTDobK5GpiJG+QaTjlG+E/4IMXxoqA2tLR8uflDm98vX1EZEulyGiB
VQp+i+N83SpRXmA8eGPO4iJpav1oCB/emGKxh0/OnUH5tsIDpLmqbD4D1JE8
qDUuvAG39VszIYfpjucLFenYT8s+b/jElO8cH2u5/5hLZnx8FQtvWKtDZKkI
AKq/TxFXusMbcGdTNr+UsaPcaIFl1c+zOM698pzgjU+uuJwPb0z3iUOslP32
nhImt5U1plM6qAxCwymB5JTWuPBGuZmQgx4OwAyc1dbDfd5IahucVX+nzX6n
jhsP3sDWBbBUBDxTNUT5ebnGGxk7fgrUYbTAktpyLI7zxXOc4A3m22LgjdvQ
PXyk5MaM6G2Vjew84lmV9A7fHEju3+o+b2SbCTno6ccXK9ItfFqW92FzasdU
CjNDmSvkMYx7f3WaceIN+LyWXtzKqLcxrQgIZc9XfV6u8Ubym6siDXxGGy2w
Gj9eOJpcIsoLjB9vbJod4MkbWeg2xTUjq+XbCg3uTMFpN9kl6ujX6j5v1FEP
rKdvd85p6+E0byQ39xMq7lLpRYlZa4XnnmlPKOjArqpDfS89gZqGfjbqMK0I
WNfYhztvpNQOYZmJfYPzImrzGUYLLL9KXVBgbn1XOsEbT04o4Mkbk9E9fPIz
G8htJY+P0Uvoivok6vhhq+5tXfejQ5d+64QTvLGGKuSgJOcPCuOtfVrAGyNq
U+i8kdz8vbLS8aFMWq4MVd3vnJ0YWnwoY6XOj4zbgGzZsqVfr2bsNHzCLGAx
rQh4Uxiv/bzs80Zubi7LTLwiNCXSwGe50QLr3YI5OZrYZYud4I09t03lyRsz
4ddwwrbkKa3ktvLviNn0NGo+U5NcrXtbmeNLe/VpdoI34LY+NOjIQe+Q42/p
aZk3YKbp8kbvlm+VlY4LZTL1ZLDc6p+vNacVlerW+xv7G+y8MScnnyUfBe/h
iUl59IqAz9MKwT/MqU25742bWHhjUmnmj45fxpE3ejWPuj+vZNjLDyU3Z6U1
TkprnJLWeF9a4/S0xpnyAgtlSucr1WYue2OMyYHLxEonzD8uHXxgPhPzc2az
8Mbvr70OeOPo9/p18saVV4rX9NHeVu3YlDfG3MTCG6VzMo/fathMRrbjqWvI
RAoPCvhmRemwPlW9pwYf8aKlZTBEqu/b5I1ZOfksvHHvZcdnZ5aST+spg9lI
nKJt09Zp3+SH2fO1LD/9iYw7m3tZ4I1vt/WYVds/mK1W1skjqb8QFNtSMM20
b1LXYH3BKmP5zfzZTBl+Q94wzm+w8wYMFEtcSd4DvSLgydr+8HkBb0yrTWHk
jZTmXnZ4Q/smpdSBXtib1ng/4Y2y0mWEN5g+zZuKSzPnNveaycIb8CZ1eOO6
ueJ1cyJ2v3jdbDG58OV7NsGb1FHp9+mj5Y3azBRG3mjOupt9ItXcWk14I2mK
TsuLYv/u2cse1o5P1g1NdngDxoeFNyb3apZ5o8pAAEbm4a67V+p+iDurhqg+
rZzSTCxvTKm/vtb4BATDJdlh8pkIrDMNnlDZixl5Q5pptnmjtrY214MHDx7Y
AIxh5G+IH5wRhRZR+FAUPhCFv4hCkyj8SRSCotAoCm+LwiFR+E9ROCAKr4tC
nSjsFYUaUXhRFHaJQpUo/FxcoZ/B6Dx0W2PVLzQJf4tc6mjspd5SXOo1nUsJ
z4jCk6JQLgrbRGGrKJSKwmZR2CgK68S1gvigIAYEcYsgPiKIjwniE4JYIYhP
C+IOQTw0W8eJNdrWf1+QLvWzyKV+GrlUWcylBCHmamWRq/00crWfRa62UxCr
BXG3IO4RxFpBfFUQfyWIbwjim4L4liA2COIRQfy9IL4jiO8K4nuC+L4gHquu
f0v7DpcvfVL/KTBTcaldiku9FrnUfvqlBPHvgtgqiCcE8Z+C2CaIpwXxC0E8
K5wThS9F4V+icEoUwqLwqSh8rJgZn8F9M4/hl6llf6NdShRpV9OdHNp5+HJk
cvxCXP2cmPqg0ZOUpdKhfXig7uGGwKF2nUtp5mHlxlDD7LpwOjdpN6KBj/tm
HKfY5Y1s/QGkVAQEl9e4zBtHJ+rEU0Yywn9kx4E36it0qv9mrv65Pm/cGQfe
OJumwxsUKeZHS1td4o2xpUbTnr3SAaw9NdCwoq7yuZCWNyq3hupWNTRNrm4f
xl/Xjeo14bY5xBurK8XB67WXM60ICLzT7iZvfJyhI5Kn7Pi4zxtN/mdU7wEm
kiFvgLnLG39v1iEN+gd9cmKdG7wxndYSys5uRejeytZMN/r/m5+JEEdziDey
H9W9nGlFQN1jDU7zxuPCOZk3jN6Gkcp3X6PbvBHOVD80YbbTeGOrq7wRrtDn
DcoYQqiivdQp4RxP3lhqotBOEHWEqaEOhHLVjOthCW9UFzy5efG6R5Y82FT0
K1begLhSz9kQGc4+aJ1Q7ihvbCpsWrbkMcIbv1xqKAoyUvn+V5XbvKF9DzCR
aLxR7CpvtOca8gZFKf33FWHlpX5X2FS25DGevDFyM33as599gLXq8QWb71v8
SPaSpnSmfQ26YQ+g5GvP3y3dS+C+xZ8MK1b/lMob7xUdeiof1uEHJ4qPBBaV
sPJGtqH7x3KAb/nrrQ7xhrDirUULVi1bspXwxm/0kqLEjFS+fxVc5Y3Kxre1
7wEmEo035rvHGx+1GZIGZQzB/jm9Qb7U6yveWrlg1cNLtnLjjeztpiuC/ewD
lL2XvvqpiVK7vxPDHoDlZv8FLRx4zcuA98i9/P62wmfuyVf/ApU3Tj7QHC7+
M/DGqQf+uGJ+ARNvrH7eyNkQ2fizYU2dQ7xRvPxXD60Oybzxrl5SlJiRyOQf
2a7yRk3tr7XvDSYSjTcmuscbJ+ppvEER6nwxsly+1MvLf/Xn1SFuvLH0BZZF
IUsj+NrJIQ+EhzwAX5waXLJi1gK7Lzgi8JL/FxYb+Ni28xBRDhTODVj7auay
XTmrO5sSE1P03zh//vw5BeT8xpmS9x5dsungiheYeCP7ccqbYYnX2ocHePDG
eWHjOWHdubXCuQeFc3KcsmXNxzJv/GOkYcaJImp1kzcaSn+hujrZCNic+7gh
b6S7xxuf6+3AsowhWOuKsHypv635mBtvUDsME7N2MDG7nRkoPDplycE79Mo6
TG1EQOoCujcoHU0iio1NrVIe5vD70cbj2+s7e4+jGokru5HLPf1kO9Akvb5s
pGNYBLt27Vq2bFlzc7OhdyGKDQ0N6xX460H4gFraHjj60OJ1h1buYcqLrqBx
OHt+uPq5Jpu8sbL47UWLNyxaJNniRRuEove1vEF5A0qVr8pebXSPN0K56rEi
Y/j09IdpUkO3eOOrTBpvUMYQ7LPsev68kf0UyyJiPPvAmrUNLnlo6mL9WjCK
jSuTCEFTLHas9aQ0hvXvUZat0zh16tSKFSvOnj3L+gcfnGl74C8bF5W8V/Qm
637K2Ecog8O+Hx3Mr3EoLyrzxquLQ/T3YOTKNlS5xxvtaRtVVyfO/+t3bYjK
9nTlxxvd4I2PW2ikQR9DsK9SyzjzxlKeZx9YJo2N0xa9x54RjdAF/ZxoeKsV
NX+wv/yx+N3vfvfqq6+KEd4QBEEKQFgAbtIHZ6oLni6Yn79+0ZqIrf6q5A80
3lhssvlFktiM+rfAf7Vb5I0yJt5omG7St9YodfYXwSXeCLQd1V6dJBtNShsK
3OCNk1XmvEFPP366tJUnb4zcwrhanWttUT2+oGD2/PXTFxH7aoDBEEEwApEC
RAcMWFN+EMwGAVjEV199VVFRUV5e/uijj77zzjssfyIRINzd2tcR+o3VL4tm
2RtUErvmp0EneEPWfb2XZfJ4Mtqq++9cl3ijsvGQ7hgW+3eb8Mb9bvBGu9+c
N+jbnacn1nHTfWUjgv3oBjGE+XsjG2rw0J/ilraK5C4UCQRTgLMhjWGc0N7e
zvqrcFNy+/SxleLqvzLxxsSfmg4aKondNKfaUd5oSzWpI6BIg9zhjfqKl7SX
JmIqE964yw3eOKcnL2cfQ7CzqWV8eGMpznmQPP/8XdHFu6Uu2kpie72DPcCB
l+AqkVQnFnvq35OiqtaTFv7WVajytKml4tJGE96Y/azp0NGzZLpW9uuwQ7xR
uVqn9FtlFCnyS81u8EZQUI+qvBFgWoLtNG/8s9GcNESGTPjJxSEOvDHSsA5F
a1EBvDLTKD/9YV3zPUGAIX1hiqMh6ajuxiZbL+I4tuhJGgZvFGfvM+SNpTUi
Q8rCQkVA3U8aHOKNWrOkKDGjXeP6Wjd4o1Wj1Scqffi/OW/81Fne+NxYXs44
hsTOZNXY5Y1s82eWdgxhMRouAfsnFoF3sb3eJl3I+CR8Ou5bKiY40EQbjYlV
4urfq3ljaS0LaYiWktit48sd4o0j2UwHNxip1N4pdYM3jMYQvA5z3ljnLG98
lc3KG3Sl37nBgfDqduu8sVRHF8cyD2Exmq4GaeFD8MIokyBSKFhBmNwFI+AN
l1Uf4f6yXCCNkqmHlvoTcfYvO3ljehX752UtiV22L+wEb7TolcFqzegQ25Zc
x3mjvFlHYS737TfnjcUO8sY/qPJyxjGU7fTsoHXeGIkuTIuOoYXVcSQkpTS1
cilLWQsUNlYeLijb7/RVrABIEpVSznhMHGzYEcVo/kSrnDAeYN3mBid448xg
phiW0jjFad6orn9De1G5b785b2Q5yBttVHk5+xgSOzuy3CJvZD+PJQ3wCtaU
H4RlGO/1hsNzdX+O45YKDRwPuDewaFU12bZm/qtwRhl33viFcRmsyihV/y80
O8sb9RUv6o4haXkEvLF+2kL4/4mhmkJFYiMd5I1/lSJ4w7RzAtjppa1o3lj6
JnoSgjvdEoY3A8sw3usNh30NH5jkZOIFh0mDJLFfmvvzaPSHSVmXv9jKlzfe
MC6D1X3buntA+2ud5Y1Qrnpfm7wZsjcBjJE/ex64HDQ98w6neOMsVV7OPoay
fZlVg+aNkfi8ZVUD2ZuAZRjn5YYEedsHg8fj/UY0cJg3og+dw+9HL1fCKgkG
a1hWx5c3mswUX0oz6mr4x1JneSOcqVY/KlX65nEK2BZHeOMzBnk54xgq7V8r
wgjeyGYqeo2xSN03LL0EfXBTcfrMVwnqJjnMG+okNipUub2ML2+cMC6D1ZrR
UYB/z3WWN4zGkCQKmHhjiSO8cboWzRv04xSJfZVVw8obSw+jZ2AkQhE7NFSw
DOO41KyhoGx/IqZlHOaNrfN3zgvsi7kiKlT5RSsv3qhgUHwpzWgb6Eyag7xR
2aizTazcmGDijcmO8MYX1Np5o0+fZSvtyxVhc95Y/WcxlbUOpdM6DhdL3I0J
M8A7V6+gRICjvDGlvGDDq2q2RIUq/jpevPHKPISrI1JlJztanOKNuiqdwVEK
IZh4Y4wjvHGOPbnR8WgwbQ5J7FxWjTlvZOFUXpIpOlPB0kvEpzYDEtNTYhJv
WLMRAXhxbXQWLZ1js/bUAC/eeJtN8SUbpVfDK/VO8UZDqU5lsVJ4ycQbYLx5
47RB93J9g0dDZHOfvd/FuRVhGm/Mft3C9JP1FSRLkNDCS2NEG/gkYGYGK+Fg
Jg3DJDZGyFH9eBMX3viITfElG6Ws5u0Kp3gjlPuE6loqlT4rbzzMmTe+YKid
77S9QVJwyt5f6/zYakPeWMq6CxZjiuOPE3dXggGJ0MCHBt36FGs2pZxI9A2T
2JhrBefXcOENCzdiVMb7Ua5TvKG9lqqwlJU3VnHmja8Yauc7jTzoI08HozMR
dGzeuzq8saJZHIzvsRnbO/eCKSw1QLwa+LDiQBOHmAU+sg6hvpHaDReq3BKw
zxsvsJWzqcxIKX0mzRHeKGvRaSikSs+y8sZMzrxxnqF2PmpAFwQRl4NyJoLa
BgfE1W0xvLH6uDgSf0CSIkIhiG8jC/vYWHk4Lg18EIAlj8lbqj+v2LOcaEls
VKjyWJNN3jiMTG4Qoyilf9bCnzeq6/dpL6Rad+Z6UWJjePLGF2y181GT+13D
XBoRwFUnja3q5I3VLVZIIyUmQpHnYaKvOyouGN4j7QhQHxb8vqbMh5bE3o5Y
yMHcGpu8cRyZ3CBGaYtaW8+fN+ordmkvpPLzmfSixPjxxlfMtfOSKZvgVTWg
z0fLelHijcV/ElMtHam2rFo71xLdzzfDBRZnkXYE9GriSMMB3cJAk+4B8CeY
+RD4Zbsd3rAyA6lK6YYK/rzR5K8wfQOscUpK5NhHTrxxzvhoNh2LLSd/N+dp
9HmsqbQe1zQDj1dTzJ7oeUUGXMB5XVUpMfDJkRC94YB5tyLMJk5NIGiZN3ZZ
Sm4QM1JKf5TLnzfCmT9RXUVbGobgjUJOvIGpnZc+01h8XveOe0edwpzUIHH3
MZlxQe8jY0GcK1qblCqTvuJKa5pWbZk33rKU3CBW7N+tm9Y7k8afN7RX0SZY
ELwxiw9vnMXUzuseVl5Qtt+No04NzklPTN0UFheubg2LsuojJskcbKiyp90a
b3xoKblBjJLW29bGkzcqG3WkTdoNHQRvjOXDG+cwtfO6T3yYCY4fdWp8aGmC
6rSR6Bp3wQKmNimYUKWuuMEab9iZkBS1+a5GnrxRV6Xj1WgFJAjeAOPBG+cx
tfO6H3LU83TuqFOYRcYhc9d4UncNr4kFTPW/exFSwNZx5RZ4owqV3NDsIlGa
Kh+q4MkbQUGdAdAVrOJ4Y5tt3kDVzuvtZYgdGQaHTlckymSj+dVlMgNdIEvD
AtY2KfCYwEySsufCWN74rfHR8zoGbnas8o2iNv+LnydvhHLV1KRLWTjeWGaX
N86jauc1wgkCsrP2UsV/OsIbepGRah5ekDsRsegCu0IsQPQ3wzQqbFhYh+WN
jzE9N6T3o9l3NlKbn8zkyRva19cNkXC8cZ9t3sDIyynP/WhfbkwmnMnAX6Xi
AlM+UJHIvc15AdFPFROqhG8tQ/HGthWY1CvJrWkEaZS+3GVtfHijvHm/9sV1
U7KselFit9nlDdGCvFwPncphy2pkPGmIF5DSkgEXuuqVBbg2KZiimOrNTey8
UcvcUFQyspGn6UhGUZtXNfLhjZpancNzdZtlIfSixKps8MZRZO28MchzJJrW
s08dMGEYSENkTM5fIOhKHGgEnE+FmUjBWTXsvNE8FhEERd1sze4wpS/3byr4
8EZD6Q7ti+tKznBxSkqkoN4yb5Qja+eNoa6MtkMd48rYD0RL0OaclpC4vc05
AZ3DOYLTcwZ2tjPyRjvbaSnRR5iMWP+HojZ/z8+HN0K5j6le2eh8VeCNLQVr
EMO12AZvzLUuL9edEjF5cuAZC8XXy6rZj0XrMklRggu0JTs7rOwZYcpja0qC
LLxRjWoMqHSzNalRoyYSJzP58EZ7mvooK6OSuqYpm7ds2YIYrolWeeMftuTl
WugUl4Frx54Vh1umbp1oQR7QXSMpSnChF+jRYUWjgimPbR1TzsIbQcypBzFu
tl5q1KiJxOMtdnmjrOWA9mV3zviZblKl2b9d4g3UaVnWeOPXlmrnjWGY1gM2
oJ8FDzerrLFlRtdLCHSldI0WVnpHIzXn5Y+1mvIGIkhJiXWzNalRsop1/3B3
vV3eqK5/WfuywFT+VTrJ0uaqfRJvoDY0t1vijYfsystVMF/F8CLA2EBB4O8B
k5BjWG0c1tz1VlnXY0IlLCp7GY//jlhwRg2dN8qXIVqKqd1sDYlRGnH8Z4Vd
3ti2duP66YvWTl/48S2dW6twuYLcFStnLQB7JHtJJ28c+YPEG6iM0EpLvDHO
rrxcBffTel0pKUrQ9SIvGSZtNyjACDnAAs+0U3ij4V6MTFQrdNRLjWqzlNKP
cm3xxurjtYHcgrMDhKMjix6fnNd5ubV7C+bkqS83rqy5uVniDRFTdDMdzxt/
w5CGcU2ZEi6n9bpYUpSgS94UQbQYgdJ2wwiRtnLs07V+UT2FN8LDMaeIavsO
aRIIRo042tNs8cby/U+9nrWKvFTRzAXkC3Bvcoqf3zh96ZFRq5rSi87Ll1tW
3ckb7O7ZLXjeqOQgL9fCTQegqz6au54TRWDedoMCzLZ+eGSZEW9UFmDceN29
AE1q1KgRB9ijLcy8cX6PcO6XwrlXhHP7hHO/hsVcWFkK5EBep2TGwvZB0oLd
OeNnM4ueKc1e8rtRhc/fXfDUxPzotbbXA2+sW7euWaKPXc1pRacHlTDd43NI
3rifj7xcBTcTDl01FZCgxz7ahp0D9VB9zsFqVgV1eSM4AbOTorsXoEkgUBpx
vFzLyhsr33580YblizasWLRh5aINq4re3x147Cey8vOBGQuJa6FMisJ3Vucs
iPLDkRAQRl5eHrgcW0o2lGYvZlKbg63D8MZ/Y5wNqrxcBTfXMnBUl1Rlm7e1
uTBht/oG05EjnF6m5Y3Ahvb2IYh4R/9xqSnUpfTXbSi1HqdU/WTrsxOWwot8
OvSBh6ZGhaBwoQ3zt9aNWw5fA2OUdPAJvKvOOAVVSjwPwxuvcZOXq+Bm7NBV
pQ5dqVJPBodqX2R2tGZFUMUbNfMxr0B5XMZqqyip0VCudd74YO7W3Vn+bZPz
NkxbdGy4JAQ9Oiowd8HSF6dWbL83f/u9ecKMhcHbCuW32skbIoZjR2F4Y7XV
7uVmcC2t14WllV0yNWp4QBsKmOyo5HLE8kbrbZjCeYpgSZNsMUqNglnmDaIU
/XJg51JV7vmeGSgok6KiijdQVR41zLwxgvMOrBLuuAFduJSDdCJyITXqpnMY
U/ZoGRjtKFjNsqDMG5Urka3L9U5wiEKjrTLSYoGVN1vhjbIWnYOWjJSipFw3
hjdQvtkGNt44wqHBFwXupB26alKUwJ3UqJtjyKdFAFI7Gk4rk3kjNAbTgphe
VaFJjRqu6JS1dVVWeKO6XmeDxpCdIprMGN5ADVQOG2886MgOrAx3ZmNXTYoS
dL0x5OaFIuus6+fUA29UFiKdDdNpH/v7FNVoULDCGw2lT2lfyvAg5ojiOoY3
REw94C1svDEWf340Bu5EEF01KUrgTgTh2hjyTEYhXY72oYGyQLh1FCazkWJS
+i0hNvFIKagPZ1rhjVCuetUbZl878rdq3kAR7C/MeONtzjWwWugU1PNGF06K
Erhwg25mXzk/SpAuB1AHjjRYNhC3qMXqhs5AytpAG5o3tC9i6NJ0ZBLUvKEp
waPZRjPe2MC5BlYXTvfJ7KpKUSWcdgbc3O3lHHYhm/mgjaWZgybxSEmNVtdv
QPFGebNOz1JDdVlHSAW8UVhYWFtbC19I/0apOCab8cYYR2SiKthRBrKgaydF
CZxOPripLuOvIkZ1mUAZWymWNlwivUZ1jxCqr1iP4o26Kp0tXUM1ewfLqXlD
xCnlxAPGvHHIKZmoCk4fIdRVldhK8Nm4NIZrY+jItjIyy4Ew9s5RsWIS0mtU
9wihUO46FG8EhZ+qXoGc1aJ/BHMH1HGKqBNM0azCmDfWuRGkiHYqHxngmrwh
vuAjlDKA9ZJ2PJxKpHBsmy8bo7NBEOvz0Ja2pP5C8EY4U52QMTwbTpGB1OEN
VIpjkTFvYIIUbMs+JRydlo6SUuKgy4yhU4kUZHE9/zmvEaH5V+0xOl29snET
I28E2nSSGIZBkOLhrsMbIqYXR6oBbxzEkIayh7MlOOcG2yrHvqDg3Lm3TgdB
SpRVH3HqvGy+h3yhnA0RVxhbX/EgI29U1+swj+EBT4rep/q8gUoEPa3HG2ud
qmXThXNpN6eTrokD51acm2Po7KnfmBaCJg9KvFRJ9SKUwtgm/3pG3qiveFr7
54abvIr3rM8bKGpdrMcbqJoUS12ClXBuq7Q7HIZI4NxWqWuKL8cPvYWFwyVa
weuiJcSyFqUwtj1tLSNvhHIfUf2t4cvGBgX6vIFKIKdqeAPV3ct2kCI6plxy
QVSWOHAoo+imas7R7G4UqOyfrmEjFBmaFAdEE0bqr/Lmh1h4Q/uHhm5MbO2Y
Pm+IyN3Yx2N5Y4ZLOylKOOEYdAfFlxJOOAYXsOLLCMg62RiDZWW5o76GsoA0
jE6arqvaZMoblY27tH9omDYhp9Z2wJA3UKHKHAVvNGBIw4bcSwUnguiu2gvL
CA6NoVOJSg3cU9pY25YdEbA12w16f0Fkob1Wk/9BU96oq9LZxjXcpond/dHR
fRFgtS4HOnjD75LcSwUnNj6cTbIlHsjGB/cxdCdBRLaS3VPaYLdXMMcQGyI2
CjA6vFWMpjhMeKPJr5aNfZK6yahiTvVGDHlD8yZNrCjCG2/hnA2LCSI9cA/P
3VQrJQiI0ILjGLqZIIqD0gYewYz143Mr7Rz41QlMgVt5cymdN9rT1B08DMvZ
NDWnhnGKiGTU4REhRwGSNyzsRhmDb3juRpItwUDEsRzH0M0EEUluuKMS6QSw
AQT+FPaAHymPfLUJTYrDUGshqTgCFN4ob8YkNzRJSBpvYEOVpUjSsC3bUIFv
eN4dytm0WFN+kOMYupzciGdvJVjRQCDgV8hGzhXlC02Kg1LgFsp9kMIb9RXb
tX9imNzQ3AiNN0QnKwFTbGnLdcE3xdEdytm04Jvi6LLJjTiCOcUhSoUqhrwR
yi1V/TItuaEJskx4w/5utZHxy4jK4JjicFxBlKjgmOJwM7lBgsouX0YkAZPi
qK5/WJc3Am06NfLsyQ3RlDdETOdAlHEM+hTgFZ53N+WGDI4pji6o3EgEYFQc
DaWbdXmjul5HMA+vw5jcEFl4w47KxUVngwAiCy4BtZuBeaKBV5qI12fBgu4V
VMauJoqKI5y5Xpc3Gko1NfIU9alelsacN5yoIHbG2RD5+QndpyxFC15+gstl
Kd2kHECCXqGKfl4iZW1ZyzYtb4QzN6p+jVLtovsWzHlD5O1yOOZsiJymUJc8
wowdXMaQuxSEgi55VCUNGoGEf9Ueo0Pq66pKVbxR3vyc9tfIvoyO02JQTUPT
fcng63I45mwQ2Bd5OiGbvLBgfx/EzTHku3ec+JB0p7FriugudE9ias1+UMUb
dVU6O7BAO/qNjg2UmUy8IfJzOSwXAzLDvv6nu81DLewX5rimpugmjRzViN2t
IO1GdTr7RSzQtl3JG63Zah+AdB3UPXPWSBvPFKeIEZeDx8YKryo2CmxuyXUj
JYAxLqAx7EY7sEroHTZttBtbU7tV5o2ylme1v0B2YHW6HBunFFh5Q+Sh5eBU
Mk+HzZ3ELnyENDu4jKE7CYfuVrMcBWY3tsm/WeaNuqontL9g+LfGCxbBG6I9
+ail49iswc4uanfegVUCogzL42Dnb7FwTZKacIhNORr6DBEra6kgvIEKUig6
eRxvQLSCKpKVzVpDRauw7LtyL+y6cGHZZ3BzDN3ctUk46J2MoL/8pV0VCFV2
lLXoyL0MCYfaiA/HG6Il6rDZrgQPEl9bmLrdNFjWg+UchZtjGJ8a2ASB5vBH
SqgSztwAvNFQqpOiJH+lsxdDLTtF84aIpA4u7UrwsCZW9IIUJaztK7kWpBDH
ppsGKaJObSw9VKls3B7OfJBLkCJa4w0Clp1ZoCwu7UrwsPDU84IUFUioghpD
y56eBXjOoTZUoXQqbk9bzytIEe3whhhp0LGlTmd/Fi4KjOFiQkMLCyTg7aSo
YHkM3dlJcbP+JUGhCVWIAEy3HYeuGcq9zHrjsOq+6ACKOBIiFpeoRBfY4Bd8
8m4u99KC7HIm4BgSMXw3l9lIiN1VIe04jGpVVEYrbDHrOMSHNxISqJM7yC93
w4YbdKA2LNw8KoU8FLpzLUAUGgEY+A/6LoTGDJ0ThgoyW3FKwoP98detM/NU
sI8h1jmxjO6eEVVC08yTpCyMNOeyke5e+hnR2KNSdNG1eYOkzkwfl25m8y44
MGZH3RxDUgDrZaKi0Jxay+JyEGdD93hZlsxk1+YNeDDNC+wzfVx6Ti8FZAxN
S4xdG0O4RHc718YEmqPqTV0O4mzotiA+63+e5ZpdmzfEjmcTxeUgD0rP6aWA
jCHF5XDT2SDRkOdsxEDP5dBXc0WMtATUdttoSi96dP1m1Wu/8sor69atEwSh
tbVzAnR53oDHJYnQjeJueHJ5zgYdstsW9zEkeVpvG0UNjctBKut10xfEG9k5
Q33I41t3rFw5d/HWrVuVL/zhhx/Cd86ePfvuu+9u27ZN/n6X5w2xY7LpPg1J
AsSbh6agLFiSAHFiK0pFU8daT9Lpq1tD43KQDIYqWgEfA/yQYv9urSvyq7HL
P3jtkIo39u/ff+DAAfJ1YWGh/P3uwBtiR/StilbIPFxTftCbhywgAYJ2DOGb
TrToIZ8OMBX5dOC68E+wbtQPEANtEzBgBuAHotAgLAEcAqQBBuxxbsBa2aJ/
UlIDkYiKN1544YXf/va35OuSkpJ//etf5Otuwhsw92Buk8eiNw+tQTuG4GmQ
MXQiQoFLEKaSDTwN78OiQVP6AXSxaUm1cgz9q/YAabx9+6oN0xbJ9n7aakk/
duqMljdqa2vfeust8nVxcfH58+fJ18AbeXl5Wzpw4sQJt2/WLcA8JGG4Nw8t
QzuGwCSOjuHR0KfgKwKBAEd5bqE59ApOG8dthZhl6/yd++4tN8qUksMTtbzx
zjvvPPvss/AFMMPmzZ0pU+CNdevWNXdA9kO6KsDNIPOwmzZt4AFvDBMXLWEr
LcQ7WoUreeOzzz4rLCwEBwNClW3btq1fvz4UCsnX6SZxigcP3QRSogNFHQzq
0C+++EL1HY83PHjoYpCog6WLONCL1UNJPN7w4KEL4tQZ7QnUMTa30k6nC483
PHjosiAdcpTSDvh6S539Zhceb3jw4AGL48eP79q1K97vwoMHDx48eMDhfwE/
K7Vb
    "], {{0, 223}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 223},
  PlotRange->{{0, 360}, {0, 223}}]], "Output",
 ImageSize->{364, 223},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[75]=",
 CellID->421490761]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spinorlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"spinorfunction", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"QListSpinorCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"spinorlist", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"QCurveStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[76]:=",
 CellID->163466141],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
TIxx1BM9duPGEjbnXBxwE2SYMxFR7149d0s/N0adXsCOw/lRAw8nVLwcchHZ
biLkBt6vOTFnseIBf7ApREcxfoKuJU49XL1dVO+WvF8WcCO6Fwv4rCOfYHE1
ByULVsAP3ekHaYUJZgQ3Osey5XomTzWcG3Qms7wrWGjG4MaovB6FZkU/zhbw
STlrN26kBXPOBQE3/pYQNH1TOqaGlxvDemZw43BYzzxAh3KhMLtJFTfgfj12
Wz+Wkobxxi1QykVH8R5hdg2u0WCt8qTe4eHiBrSMyVuo30Y+wcb5t4rt+eDR
bDvN5kbTFLZcz7jxZnCjbIOwTHEguJE1qNwspg8z2+3GDWhWMjs4BUuc/C2o
YGws9u7Vebf0c8NFT2KWpRrLsWXDeuYnVDQMIYdFLTfwfiWyBmFC3j5EB6Yx
iNej8X6hd8MFBBa3JsrdL2u4Eet7BpxK8gk2rGe9eMkSn8udoz1mc6N2NpOg
RdAsLdxoKBSWKYZ7Glfc5loTolmxuf7ZhS025EaaVM45t9MBH2SpHVPtwI24
mj2xvp1cy6IG4uNqnh8q6NDGDWYfIptpA08rfBBLRkc37/sAuYH5RUzdsIpD
Swaiw8uNKY2b2SUVFRNstvclye14dMgJppsbZUvK3SurTeJG59obyhQHam4U
nQrZrHvTmQeHDbmxMpjIwZ993E4HNDb03y1DuBFTv1UwDqMGZg8VdGjmBnO/
7upJKmhe6H4Z0IHPX0F7MSUPZxyGT5X9Smu4Mc6/mlkO6JlDPsHubdoleC6z
6eU+s7mB+aJPPzrHJG705Ubz18cDNTfW9YRs1rglzGN9xGOX7cYNaNZSNuec
/xTD+BsaG8s6ptqEGxNa17JLKnH8lkUNzI2recH+6NDFDRe9+I4riA54VAlM
DszZQGMDZhz8zuKaauX7ZQ03RnQzsdmxHSvJJ9io02X853LwaLbtZnOjYBFz
InbDzxNN4gad43IXX6/hgytEUXmDIZs14gm2gM/8Czbkxopg8UB0nLkDYWFw
Jnv3GnK3DOEGjsNRp5eKzw2Mq3nR5ujQyQ0m32b0ZTQqcEc511hM5cVwPVr1
ad3j7cCNqIEH2FB2oaoJxt/jhrbTuTsos7mRmlHILAR8f7J53Khbf72GTyC4
kRu6WVFxbAGfJWdtyI018E82ZwAL0+E4xBDHcn+8fbgR3RsrNw6jBhYiOgzc
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
    "], {{0, 223}, {360, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 223},
  PlotRange->{{0, 360}, {0, 223}}]], "Output",
 ImageSize->{364, 223},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[77]=",
 CellID->1594152321]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ArgColorPlot",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:VQM/guide/VQM", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2018, 5, 5, 23, 33, 3.256731}", 
    "history" -> {"0.0", "11.3", "", ""}, "context" -> "VQM`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "V Q M Tutorial", "language" -> "en", "paclet" -> "VQM", "status" -> 
    "None", "summary" -> 
    "The package VQM`ArgColorPlot provides methods to visualize \
complex-valued functions of one real variable. This package is part of the \
VQM packages which can be obtained here: \
https://vqm.uni-graz.at/pages/software.html (free download). The VQM packages \
are part of the Visual Quantum Mechanics project, see \
https://vqm.uni-graz.at. In particular, these packages are distributed with \
the book Advanced Visual Quantum Mechanics, Springer-Verlag New York, 2004. \
Available functions in the VQM`ArgColorPlot package. Here we describe \
theoretical background and the practical implementation of the main function \
in the package VQM`ArgColorPlot`.", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$8819, "title" -> 
    "ArgColorPlot", "titlemodifier" -> "", "windowtitle" -> "ArgColorPlot", 
    "type" -> "Tutorial", "uri" -> "VQM/tutorial/ArgColorPlot", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[22471, 457, 7501, 131, 70, "Output",ExpressionUUID->"cb3a616b-c32e-4d77-a403-d5d75f9a7311",
   CellTags->"RasterizedOutput",
   CellID->970927824],
  Cell[33604, 695, 11691, 200, 70, "Output",ExpressionUUID->"2576437a-3e7f-4f84-976b-79a995d11b43",
   CellTags->"RasterizedOutput",
   CellID->1803188062],
  Cell[159655, 4037, 4439, 81, 70, "Output",ExpressionUUID->"61b6441f-74d3-4272-aa1f-0c4a8a35679b",
   CellTags->"RasterizedOutput",
   CellID->892531570],
  Cell[164354, 4132, 6346, 112, 70, "Output",ExpressionUUID->"66307a6b-9619-49df-84e0-6ce471dea9d5",
   CellTags->"RasterizedOutput",
   CellID->604822695],
  Cell[174970, 4384, 12675, 216, 70, "Output",ExpressionUUID->"3e9522e9-b81e-4c61-ad3b-1df5bc9e754d",
   CellTags->"RasterizedOutput",
   CellID->1214933614],
  Cell[189779, 4663, 6587, 116, 70, "Output",ExpressionUUID->"205d1123-8194-4f93-9eca-fd8ab370b13f",
   CellTags->"RasterizedOutput",
   CellID->1114734822],
  Cell[197354, 4820, 15049, 255, 70, "Output",ExpressionUUID->"24cfafe6-735f-4a24-8ba9-a31c97c8a82c",
   CellTags->"RasterizedOutput",
   CellID->700816926],
  Cell[212779, 5094, 6872, 121, 70, "Output",ExpressionUUID->"92e88a22-7477-47fb-b459-11da3705ed38",
   CellTags->"RasterizedOutput",
   CellID->1829755134],
  Cell[226052, 5383, 7753, 135, 70, "Output",ExpressionUUID->"94bae4c8-866c-47b7-9198-4297837dc6bd",
   CellTags->"RasterizedOutput",
   CellID->728712098],
  Cell[239367, 5668, 20490, 344, 70, "Output",ExpressionUUID->"5d9dc8d9-de3f-4cf3-85f7-05544d759099",
   CellTags->"RasterizedOutput",
   CellID->364992245],
  Cell[260552, 6036, 20406, 343, 70, "Output",ExpressionUUID->"7d46e80e-eda0-4fb5-bf2a-91beab11f0b6",
   CellTags->"RasterizedOutput",
   CellID->1211365883],
  Cell[281245, 6394, 20341, 342, 70, "Output",ExpressionUUID->"9dea2f93-000e-47ab-b638-8b2e213df0db",
   CellTags->"RasterizedOutput",
   CellID->1281422021],
  Cell[302254, 6763, 11711, 200, 70, "Output",ExpressionUUID->"6065988b-6bca-4809-bcd3-c8e5b15ef1df",
   CellTags->"RasterizedOutput",
   CellID->1893894831],
  Cell[314592, 6990, 16301, 275, 70, "Output",ExpressionUUID->"eaaabf36-bf08-43d4-b4f7-51357f637ebe",
   CellTags->"RasterizedOutput",
   CellID->687808783],
  Cell[331578, 7295, 6333, 112, 70, "Output",ExpressionUUID->"76c20b16-2b1f-42d9-8fc4-4909f5d42729",
   CellTags->"RasterizedOutput",
   CellID->97744080],
  Cell[338840, 7445, 8783, 152, 70, "Output",ExpressionUUID->"11b054e9-18d0-4ddb-aecb-fdba666c2877",
   CellTags->"RasterizedOutput",
   CellID->2107246252],
  Cell[348021, 7616, 8302, 144, 70, "Output",ExpressionUUID->"7da0773c-0249-496a-92dc-d6d067f7891b",
   CellTags->"RasterizedOutput",
   CellID->187451040],
  Cell[356847, 7783, 7554, 132, 70, "Output",ExpressionUUID->"514d7ad1-46d3-4fbb-b9ee-3d1f4deef894",
   CellTags->"RasterizedOutput",
   CellID->131119131],
  Cell[364851, 7932, 7713, 135, 70, "Output",ExpressionUUID->"7ca02acc-1ba4-4b49-acfe-78d703dffa2f",
   CellTags->"RasterizedOutput",
   CellID->401012895],
  Cell[374046, 8119, 10015, 172, 70, "Output",ExpressionUUID->"0572b954-92c4-4d92-aa6f-dfd1bb1952d3",
   CellTags->"RasterizedOutput",
   CellID->1020041979],
  Cell[384419, 8308, 8253, 143, 70, "Output",ExpressionUUID->"8f4d71dc-1617-4dcc-8328-ee725de46486",
   CellTags->"RasterizedOutput",
   CellID->483587052],
  Cell[392969, 8467, 6420, 113, 70, "Output",ExpressionUUID->"0ef93f57-8bad-4127-ba5d-2a5e0d3c8547",
   CellTags->"RasterizedOutput",
   CellID->1569462716],
  Cell[399708, 8596, 8217, 143, 70, "Output",ExpressionUUID->"dc89e270-4d5a-4577-a533-eda769a3cccb",
   CellTags->"RasterizedOutput",
   CellID->418231711],
  Cell[409955, 8809, 13284, 226, 70, "Output",ExpressionUUID->"cf9f3066-957a-4604-a33d-f50eb3332552",
   CellTags->"RasterizedOutput",
   CellID->506390146],
  Cell[424593, 9083, 25789, 431, 70, "Output",ExpressionUUID->"24b4bea1-0f4a-4ce2-b3ca-ea77fd9593cd",
   CellTags->"RasterizedOutput",
   CellID->421490761],
  Cell[451358, 9550, 26384, 441, 70, "Output",ExpressionUUID->"88e42d4a-51b3-4c60-8afe-7d8b31bd524b",
   CellTags->"RasterizedOutput",
   CellID->1594152321]},
 "Info503734531893-7828141"->{
  Cell[220063, 5235, 529, 8, 70, "Print",ExpressionUUID->"4afc045e-263d-4b65-9736-b0eb6722509e",
   CellTags->"Info503734531893-7828141",
   CellID->1080410346]},
 "Info523734531893-7828141"->{
  Cell[225142, 5350, 258, 4, 70, "Print",ExpressionUUID->"f754b517-4a78-4364-aaa1-090fa6d2b5d7",
   CellTags->"Info523734531893-7828141",
   CellID->1555550159]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 480569, 10060},
 {"Info503734531893-7828141", 484700, 10139},
 {"Info523734531893-7828141", 484894, 10143}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 2286, 53, 70, "AnchorBarGrid",ExpressionUUID->"f618afca-a62f-4fad-9d7d-8614bafb369d",
 CellID->1],
Cell[CellGroupData[{
Cell[2895, 78, 49, 1, 70, "Title",ExpressionUUID->"329483a4-baf2-4b26-8846-af2ca2504050",
 CellID->509267359],
Cell[2947, 81, 17658, 309, 70, "TutorialJumpBox",ExpressionUUID->"2218ba49-cd3b-4746-aa68-f87ba8f3e483"],
Cell[20608, 392, 792, 19, 70, "Text",ExpressionUUID->"f3a98fd4-1d7a-4d56-9358-e04bafb47b84",
 CellID->1534169418],
Cell[21403, 413, 92, 1, 70, "Caption",ExpressionUUID->"8550010b-c080-40ba-84cd-82c2bcef08db",
 CellID->1891092685],
Cell[21498, 416, 128, 3, 70, "Input",ExpressionUUID->"175096d4-4118-4548-843f-db3fec20d61d",
 CellID->2058623809],
Cell[CellGroupData[{
Cell[21651, 423, 71, 1, 70, "Section",ExpressionUUID->"e58bf3a1-606f-4f2c-bf38-0034a2d7b633",
 CellID->1892760991],
Cell[21725, 426, 173, 4, 70, "Text",ExpressionUUID->"aa2bd4e2-4787-403c-a3ff-e3a1e1ee378a",
 CellID->958712726],
Cell[CellGroupData[{
Cell[21923, 434, 52, 1, 70, "Subsection",ExpressionUUID->"46a27954-8b1c-473e-b7de-ef5722d9347f",
 CellID->514982441],
Cell[21978, 437, 96, 2, 70, "Text",ExpressionUUID->"973c12a3-c512-416b-ad44-b717be615ddc",
 CellID->950788477],
Cell[CellGroupData[{
Cell[22099, 443, 369, 12, 70, "Input",ExpressionUUID->"b3bdb9dc-725d-447d-a6fd-6d4efd8f0d66",
 CellID->476115612],
Cell[22471, 457, 7501, 131, 70, "Output",ExpressionUUID->"cb3a616b-c32e-4d77-a403-d5d75f9a7311",
 CellTags->"RasterizedOutput",
 CellID->970927824]
}, Open  ]],
Cell[CellGroupData[{
Cell[30009, 593, 673, 21, 70, "Input",ExpressionUUID->"4bcaccd7-633c-4275-ae58-31e5841ef2cd",
 CellID->1079990870],
Cell[30685, 616, 1786, 38, 70, "Output",ExpressionUUID->"93625220-64e1-4ac7-9436-04b8d6c78c55",
 CellID->874767646]
}, Open  ]],
Cell[32486, 657, 107, 2, 70, "Text",ExpressionUUID->"4d7fa744-6432-4821-9a42-418ebd5aa8a0",
 CellID->546778960],
Cell[CellGroupData[{
Cell[32618, 663, 983, 30, 70, "Input",ExpressionUUID->"28389514-28ed-4317-b5b2-2611d2d84be6",
 CellID->631455207],
Cell[33604, 695, 11691, 200, 70, "Output",ExpressionUUID->"2576437a-3e7f-4f84-976b-79a995d11b43",
 CellTags->"RasterizedOutput",
 CellID->1803188062]
}, Open  ]],
Cell[45310, 898, 180, 5, 70, "Text",ExpressionUUID->"4fd2b6c7-9764-4ac1-905a-07bba0ca4685",
 CellID->515965556]
}, Open  ]],
Cell[CellGroupData[{
Cell[45527, 908, 75, 1, 70, "Subsection",ExpressionUUID->"091a6f8a-0226-4129-a84a-b7e17aa94bb8",
 CellID->294133106],
Cell[45605, 911, 428, 8, 70, "Text",ExpressionUUID->"31375ba1-f6fe-401a-855c-8a90adfdbff3",
 CellID->2135240795],
Cell[46036, 921, 88, 1, 70, "Text",ExpressionUUID->"5b92020f-dbce-49d3-a9e2-a6a83071aed3",
 CellID->392816548],
Cell[46127, 924, 87, 2, 70, "Input",ExpressionUUID->"9b9f8a5c-baf7-4d45-9b49-fee89841e9f8",
 CellID->702991358],
Cell[46217, 928, 180, 4, 70, "Text",ExpressionUUID->"a779e0b6-8824-4dbb-9d19-e861c5dc38b3",
 CellID->1868211759],
Cell[46400, 934, 94, 2, 70, "Input",ExpressionUUID->"b2c0eca0-905f-4c25-84db-e16e6d3e45c8",
 CellID->676630726],
Cell[46497, 938, 517, 10, 70, "Text",ExpressionUUID->"5a7c0c9f-4127-4963-a781-cf55b820eb6e",
 CellID->1206701017],
Cell[47017, 950, 82, 2, 70, "Input",ExpressionUUID->"00762109-4039-4318-877e-7b4e793a7cb0",
 CellID->188430451],
Cell[47102, 954, 304, 6, 70, "Text",ExpressionUUID->"65cf0668-9122-42bc-8a26-f87ea6550f00",
 CellID->1559694279],
Cell[CellGroupData[{
Cell[47431, 964, 78, 2, 70, "Input",ExpressionUUID->"53a23c64-c89b-4d5d-a1a2-279e457b3fb8",
 CellID->1596351871],
Cell[47512, 968, 563, 14, 70, "Output",ExpressionUUID->"bfb9cfcf-3cbb-40e2-a3ce-5e95b6464af3",
 CellID->1372693926]
}, Open  ]],
Cell[48090, 985, 79, 1, 70, "Text",ExpressionUUID->"0e56283f-092d-4c10-98db-1d2b06a2ec7c",
 CellID->449994561],
Cell[48172, 988, 85, 2, 70, "Input",ExpressionUUID->"3154d3be-413b-4dba-ab6b-e50dc28a31f4",
 CellID->1768665640],
Cell[48260, 992, 60, 1, 70, "Text",ExpressionUUID->"3d68e9a8-ae2d-4ec1-94d7-c23bc73799fe",
 CellID->494769706],
Cell[48323, 995, 81, 2, 70, "Input",ExpressionUUID->"0b6f89cf-2517-478f-a153-ef4456d5dfae",
 CellID->537767558],
Cell[48407, 999, 201, 4, 70, "Text",ExpressionUUID->"946589ae-2142-470a-956e-baabd259027c",
 CellID->1648160730],
Cell[CellGroupData[{
Cell[48633, 1007, 96, 2, 70, "Input",ExpressionUUID->"3812387d-70ce-4a79-a36d-039c24b9e0b9",
 CellID->245826457],
Cell[48732, 1011, 570, 16, 70, "Output",ExpressionUUID->"5dcc5da1-9a24-432a-b129-580d6eb996b5",
 CellID->1994209618]
}, Open  ]],
Cell[49317, 1030, 157, 4, 70, "Text",ExpressionUUID->"663b2692-99ea-444a-87bc-1dbd6c286b59",
 CellID->903770997],
Cell[CellGroupData[{
Cell[49499, 1038, 100, 2, 70, "Input",ExpressionUUID->"5dae0578-4776-429c-b128-bb9b697bb6be",
 CellID->527311348],
Cell[49602, 1042, 103446, 2766, 70, "Output",ExpressionUUID->"b00a4edd-a263-445d-b4a9-6efa67f191cd",
 CellID->2004298314]
}, Open  ]],
Cell[153063, 3811, 78, 1, 70, "Text",ExpressionUUID->"3e18ab3d-365a-4781-a776-c96de88d54ca",
 CellID->813276556],
Cell[153144, 3814, 100, 2, 70, "Input",ExpressionUUID->"afb84e05-1e13-4da1-bd19-b46f069f097f",
 CellID->5663537],
Cell[153247, 3818, 450, 8, 70, "Text",ExpressionUUID->"90f985e9-9a4a-417f-b903-b8db2cec1e2d",
 CellID->697785891],
Cell[153700, 3828, 108, 2, 70, "Input",ExpressionUUID->"e4f588ef-9747-4b82-9404-7ca535dda472",
 CellID->279273770],
Cell[153811, 3832, 170, 4, 70, "Text",ExpressionUUID->"9df6eb6d-8ac1-4bd1-82e5-d21a9df6d07b",
 CellID->1502483695],
Cell[CellGroupData[{
Cell[154006, 3840, 87, 2, 70, "Input",ExpressionUUID->"a8366aea-d8da-42b9-aadc-0d19a2e20a9a",
 CellID->2130740439],
Cell[154096, 3844, 1020, 21, 70, "Output",ExpressionUUID->"a5ad0f38-3e33-4d2f-9bda-d02b4921ea37",
 CellID->2064744548]
}, Open  ]],
Cell[155131, 3868, 153, 4, 70, "Text",ExpressionUUID->"e39c741c-0c97-4010-9e62-c184360c78aa",
 CellID->973366363],
Cell[155287, 3874, 1287, 42, 70, "Text",ExpressionUUID->"0bb3aef7-c3b0-48fb-b415-96fe82d55594",
 CellID->1985523742],
Cell[156577, 3918, 96, 2, 70, "Input",ExpressionUUID->"fc0be136-d43b-4bb1-bdc7-a909da58bff5",
 CellID->949141061],
Cell[156676, 3922, 191, 7, 70, "Text",ExpressionUUID->"8113d4c6-95b5-478b-a4ff-d11d2ba75608",
 CellID->705282311],
Cell[156870, 3931, 100, 2, 70, "Input",ExpressionUUID->"c88a7101-48a2-4e47-8d97-953e7cec84ec",
 CellID->1717553184],
Cell[156973, 3935, 262, 11, 70, "Text",ExpressionUUID->"29969347-5418-4a23-b853-645c8a09f8b8",
 CellID->441180514],
Cell[157238, 3948, 102, 2, 70, "Input",ExpressionUUID->"4f8fc31f-a9f9-47aa-b138-21e465e4025d",
 CellID->1807349354],
Cell[157343, 3952, 194, 4, 70, "Text",ExpressionUUID->"1ea1f20e-612b-415e-8313-28cbb888173a",
 CellID->2111889510],
Cell[157540, 3958, 168, 5, 70, "Input",ExpressionUUID->"007f79d3-5563-4634-995c-97eabc05efef",
 CellID->917276954],
Cell[CellGroupData[{
Cell[157733, 3967, 83, 2, 70, "Input",ExpressionUUID->"9d66da3f-3d6d-48e7-903b-0339662f99e8",
 CellID->2036147712],
Cell[157819, 3971, 1127, 35, 70, "Output",ExpressionUUID->"f03d8944-08c6-49b0-862e-06d72486a879",
 CellID->1382680639]
}, Open  ]],
Cell[158961, 4009, 137, 4, 70, "Text",ExpressionUUID->"53d515c5-0a2e-4902-b2c5-07caf3010a82",
 CellID->792955486],
Cell[159101, 4015, 100, 2, 70, "Input",ExpressionUUID->"dd400f5a-a928-4e55-9f2d-b60f514a4565",
 CellID->2066823567],
Cell[159204, 4019, 121, 3, 70, "Text",ExpressionUUID->"00c99228-d809-41a2-8cea-aefb370d5ace",
 CellID->1555700344],
Cell[159328, 4024, 116, 2, 70, "Input",ExpressionUUID->"0b49bbee-0b9f-417e-968b-8ab166c9a5e0",
 CellID->1042279383],
Cell[159447, 4028, 61, 1, 70, "Text",ExpressionUUID->"e9843e32-386b-4491-a3fa-e5671ab38f27",
 CellID->565481502],
Cell[CellGroupData[{
Cell[159533, 4033, 119, 2, 70, "Input",ExpressionUUID->"a64307fd-904d-4167-a4ba-5213d1c11eea",
 CellID->1432466139],
Cell[159655, 4037, 4439, 81, 70, "Output",ExpressionUUID->"61b6441f-74d3-4272-aa1f-0c4a8a35679b",
 CellTags->"RasterizedOutput",
 CellID->892531570]
}, Open  ]],
Cell[164109, 4121, 84, 1, 70, "Text",ExpressionUUID->"501a1ba8-ff3c-46d1-aaf9-5ab8373728a2",
 CellID->1103895342],
Cell[CellGroupData[{
Cell[164218, 4126, 133, 4, 70, "Input",ExpressionUUID->"a219f56c-155d-4a4c-b945-a3d1a72b7b63",
 CellID->1057786561],
Cell[164354, 4132, 6346, 112, 70, "Output",ExpressionUUID->"66307a6b-9619-49df-84e0-6ce471dea9d5",
 CellTags->"RasterizedOutput",
 CellID->604822695]
}, Open  ]],
Cell[170715, 4247, 124, 4, 70, "Text",ExpressionUUID->"d3fb33c8-4ed3-49f0-8ff8-743a42320fdd",
 CellID->1205825801],
Cell[170842, 4253, 2498, 66, 70, "Input",ExpressionUUID->"6c45deb7-812f-4485-8830-3a293f3e192a",
 CellID->511060668],
Cell[173343, 4321, 80, 1, 70, "Text",ExpressionUUID->"51d1b3fb-fb27-4663-8913-8a8adbe166ef",
 CellID->1609542723],
Cell[CellGroupData[{
Cell[173448, 4326, 117, 2, 70, "Input",ExpressionUUID->"b84baa51-aba8-4b3f-bf7e-f936664244b1",
 CellID->1880527849],
Cell[173568, 4330, 544, 12, 70, "Output",ExpressionUUID->"018e03e6-c4fa-4c0b-8558-7192a7535141",
 CellID->1514725244]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174161, 4348, 61, 1, 70, "Subsection",ExpressionUUID->"46ef75a3-3082-45a2-934f-4ae145808bb6",
 CellID->1716024370],
Cell[174225, 4351, 145, 4, 70, "Text",ExpressionUUID->"94213fa8-697f-4a85-bb5f-645b1fce13ad",
 CellID->516207380],
Cell[174373, 4357, 291, 11, 70, "Input",ExpressionUUID->"a04d0b21-abbe-4156-a9f3-a2b5252d50eb",
 CellID->63501780],
Cell[174667, 4370, 85, 2, 70, "Input",ExpressionUUID->"29f94018-acfc-4b70-b1fc-202d533638b5",
 CellID->2122527548],
Cell[174755, 4374, 100, 2, 70, "Input",ExpressionUUID->"234e3c42-472d-4475-8279-5d88fa474c32",
 CellID->1469638919],
Cell[CellGroupData[{
Cell[174880, 4380, 87, 2, 70, "Input",ExpressionUUID->"88f6e6a2-ba58-40c7-9e39-177e866232e9",
 CellID->2011887486],
Cell[174970, 4384, 12675, 216, 70, "Output",ExpressionUUID->"3e9522e9-b81e-4c61-ad3b-1df5bc9e754d",
 CellTags->"RasterizedOutput",
 CellID->1214933614]
}, Open  ]],
Cell[187660, 4603, 252, 7, 70, "Text",ExpressionUUID->"206e6f22-7a91-49b9-a4df-57ba03deef0c",
 CellID->1935645851],
Cell[CellGroupData[{
Cell[187937, 4614, 1839, 47, 70, "Input",ExpressionUUID->"81385de1-c2c1-4c46-accd-66bde0997041",
 CellID->170049354],
Cell[189779, 4663, 6587, 116, 70, "Output",ExpressionUUID->"205d1123-8194-4f93-9eca-fd8ab370b13f",
 CellTags->"RasterizedOutput",
 CellID->1114734822]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196427, 4786, 68, 1, 70, "Section",ExpressionUUID->"529b7a8d-4ef7-460a-843c-008a9e803eea",
 CellID->1933453141],
Cell[196498, 4789, 164, 5, 70, "Text",ExpressionUUID->"d30b712c-c20a-461c-be32-693232ba3902",
 CellID->1971878030],
Cell[196665, 4796, 90, 2, 70, "Input",ExpressionUUID->"b50ef6e8-ee25-4c59-a0a3-6e5e110b6467",
 CellID->1386409706],
Cell[196758, 4800, 372, 9, 70, "Text",ExpressionUUID->"057b0a2c-a9cf-4e3b-b9e8-a084665b4e6c",
 CellID->1190358792],
Cell[CellGroupData[{
Cell[197155, 4813, 196, 5, 70, "Input",ExpressionUUID->"9fd9fbd0-cb09-43bc-9445-1b3ef0b6df3e",
 CellID->402561692],
Cell[197354, 4820, 15049, 255, 70, "Output",ExpressionUUID->"24cfafe6-735f-4a24-8ba9-a31c97c8a82c",
 CellTags->"RasterizedOutput",
 CellID->700816926]
}, Open  ]],
Cell[212418, 5078, 81, 2, 70, "Input",ExpressionUUID->"979e0b57-9906-4656-8665-73fb62457daf",
 CellID->1195827430],
Cell[212502, 5082, 81, 1, 70, "Text",ExpressionUUID->"54b4778d-99c6-435e-b69e-85578bfea040",
 CellID->2119647384],
Cell[CellGroupData[{
Cell[212608, 5087, 168, 5, 70, "Input",ExpressionUUID->"c89b7921-6661-4280-b599-c3be286e264c",
 CellID->307362805],
Cell[212779, 5094, 6872, 121, 70, "Output",ExpressionUUID->"92e88a22-7477-47fb-b459-11da3705ed38",
 CellTags->"RasterizedOutput",
 CellID->1829755134]
}, Open  ]],
Cell[219666, 5218, 211, 6, 70, "Text",ExpressionUUID->"1b1dfc4b-ea3a-4940-8406-982ca113c93c",
 CellID->1132108964],
Cell[219880, 5226, 80, 1, 70, "Text",ExpressionUUID->"58843912-fb97-478e-97f6-b77da8877a8f",
 CellID->650245528],
Cell[CellGroupData[{
Cell[219985, 5231, 75, 2, 70, "Input",ExpressionUUID->"7dd981f5-d1ab-494a-a1d6-d11471d18ad8",
 CellID->132309513],
Cell[220063, 5235, 529, 8, 70, "Print",ExpressionUUID->"4afc045e-263d-4b65-9736-b0eb6722509e",
 CellTags->"Info503734531893-7828141",
 CellID->1080410346]
}, Open  ]],
Cell[CellGroupData[{
Cell[220629, 5248, 84, 2, 70, "Input",ExpressionUUID->"db44ffc9-9917-43d2-bcbf-63aabfe47494",
 CellID->1482449837],
Cell[220716, 5252, 4312, 89, 70, "Output",ExpressionUUID->"9af2505c-a557-4d25-975b-14b998040387",
 CellID->429137965]
}, Open  ]],
Cell[CellGroupData[{
Cell[225065, 5346, 74, 2, 70, "Input",ExpressionUUID->"700ef6b6-cf4e-47d5-af74-f7edde9b4e54",
 CellID->1271691129],
Cell[225142, 5350, 258, 4, 70, "Print",ExpressionUUID->"f754b517-4a78-4364-aaa1-090fa6d2b5d7",
 CellTags->"Info523734531893-7828141",
 CellID->1555550159]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225449, 5360, 82, 1, 70, "Section",ExpressionUUID->"4d897e55-1b15-4b84-8cf6-6c9ac3d63aa0",
 CellID->559656922],
Cell[225534, 5363, 90, 1, 70, "Text",ExpressionUUID->"c4649a91-3e9b-4e3f-95de-ddaa6078bb4a",
 CellID->175514194],
Cell[CellGroupData[{
Cell[225649, 5368, 400, 13, 70, "Input",ExpressionUUID->"d8d94f1a-c8d2-4a9b-a6ce-d280e8882874",
 CellID->1372011227],
Cell[226052, 5383, 7753, 135, 70, "Output",ExpressionUUID->"94bae4c8-866c-47b7-9198-4297837dc6bd",
 CellTags->"RasterizedOutput",
 CellID->728712098]
}, Open  ]],
Cell[233820, 5521, 221, 5, 70, "Text",ExpressionUUID->"9c41dc43-22fa-438a-9c18-8756d0cff5f7",
 CellID->230149189],
Cell[CellGroupData[{
Cell[234066, 5530, 1841, 50, 70, "Input",ExpressionUUID->"b729d10f-e0f5-495e-af72-55fffb346cdd",
 CellID->499371276],
Cell[235910, 5582, 2710, 54, 70, "Output",ExpressionUUID->"86f375af-2f3d-412f-bf77-e7c6191eaa3f",
 CellID->566943256]
}, Open  ]],
Cell[238635, 5639, 141, 4, 70, "Text",ExpressionUUID->"a295ae8c-c082-40fa-9027-cf839076bc23",
 CellID->230361853],
Cell[238779, 5645, 474, 15, 70, "Input",ExpressionUUID->"0e147a4f-65f0-465d-9a46-3dbacba79cfa",
 CellID->1926131477],
Cell[CellGroupData[{
Cell[239278, 5664, 86, 2, 70, "Input",ExpressionUUID->"8f16e086-75f7-4d46-9adf-08ff50adfbb3",
 CellID->1323239061],
Cell[239367, 5668, 20490, 344, 70, "Output",ExpressionUUID->"5d9dc8d9-de3f-4cf3-85f7-05544d759099",
 CellTags->"RasterizedOutput",
 CellID->364992245]
}, Open  ]],
Cell[259872, 6015, 348, 6, 70, "Text",ExpressionUUID->"794ec61c-c50c-41c3-a26b-98e9f2882f84",
 CellID->576771656],
Cell[CellGroupData[{
Cell[260245, 6025, 304, 9, 70, "Input",ExpressionUUID->"349955ed-ef60-42d0-8c0b-d0ee2ce1660f",
 CellID->60039834],
Cell[260552, 6036, 20406, 343, 70, "Output",ExpressionUUID->"7d46e80e-eda0-4fb5-bf2a-91beab11f0b6",
 CellTags->"RasterizedOutput",
 CellID->1211365883]
}, Open  ]],
Cell[280973, 6382, 88, 1, 70, "Text",ExpressionUUID->"c4a41886-c14d-4c6f-b548-d5c293567ab8",
 CellID->2071984284],
Cell[CellGroupData[{
Cell[281086, 6387, 156, 5, 70, "Input",ExpressionUUID->"517764be-b863-4101-93e8-6003af19cb33",
 CellID->245041436],
Cell[281245, 6394, 20341, 342, 70, "Output",ExpressionUUID->"9dea2f93-000e-47ab-b638-8b2e213df0db",
 CellTags->"RasterizedOutput",
 CellID->1281422021]
}, Open  ]],
Cell[301601, 6739, 184, 4, 70, "Text",ExpressionUUID->"08169fe9-cee3-47d1-8459-e3f63cb1129b",
 CellID->1062714988],
Cell[CellGroupData[{
Cell[301810, 6747, 441, 14, 70, "Input",ExpressionUUID->"0d26f548-012c-4414-bb6b-3a68654427d6",
 CellID->429311217],
Cell[302254, 6763, 11711, 200, 70, "Output",ExpressionUUID->"6065988b-6bca-4809-bcd3-c8e5b15ef1df",
 CellTags->"RasterizedOutput",
 CellID->1893894831]
}, Open  ]],
Cell[313980, 6966, 143, 4, 70, "Text",ExpressionUUID->"6a335d91-4eb1-4123-9224-f22a4e44a641",
 CellID->1952558424],
Cell[CellGroupData[{
Cell[314148, 6974, 441, 14, 70, "Input",ExpressionUUID->"85520374-f2de-4c17-818b-a142545cabfa",
 CellID->951822361],
Cell[314592, 6990, 16301, 275, 70, "Output",ExpressionUUID->"eaaabf36-bf08-43d4-b4f7-51357f637ebe",
 CellTags->"RasterizedOutput",
 CellID->687808783]
}, Open  ]],
Cell[330908, 7268, 159, 4, 70, "Text",ExpressionUUID->"363c2c52-4851-4a16-b9d1-48f33a1c6fa5",
 CellID->152785513],
Cell[CellGroupData[{
Cell[331092, 7276, 483, 17, 70, "Input",ExpressionUUID->"22ec26dd-23eb-4cae-a056-c99509ecaebe",
 CellID->1623158826],
Cell[331578, 7295, 6333, 112, 70, "Output",ExpressionUUID->"76c20b16-2b1f-42d9-8fc4-4909f5d42729",
 CellTags->"RasterizedOutput",
 CellID->97744080]
}, Open  ]],
Cell[337926, 7410, 179, 4, 70, "Text",ExpressionUUID->"121b28c7-63e3-4b9d-8bb3-795dfb53f941",
 CellID->1668806187],
Cell[CellGroupData[{
Cell[338130, 7418, 707, 25, 70, "Input",ExpressionUUID->"6c63b302-8822-4c9d-bcb0-adea10b9f570",
 CellID->1489155089],
Cell[338840, 7445, 8783, 152, 70, "Output",ExpressionUUID->"11b054e9-18d0-4ddb-aecb-fdba666c2877",
 CellTags->"RasterizedOutput",
 CellID->2107246252]
}, Open  ]],
Cell[CellGroupData[{
Cell[347660, 7602, 358, 12, 70, "Input",ExpressionUUID->"a3c62292-fe76-4cda-99ae-e9ea064f6531",
 CellID->1308246759],
Cell[348021, 7616, 8302, 144, 70, "Output",ExpressionUUID->"7da0773c-0249-496a-92dc-d6d067f7891b",
 CellTags->"RasterizedOutput",
 CellID->187451040]
}, Open  ]],
Cell[CellGroupData[{
Cell[356360, 7765, 484, 16, 70, "Input",ExpressionUUID->"a14386cd-645e-43ec-8543-cf5f55070d4b",
 CellID->52239396],
Cell[356847, 7783, 7554, 132, 70, "Output",ExpressionUUID->"514d7ad1-46d3-4fbb-b9ee-3d1f4deef894",
 CellTags->"RasterizedOutput",
 CellID->131119131]
}, Open  ]],
Cell[364416, 7918, 284, 6, 70, "Text",ExpressionUUID->"8bf27b6d-db8f-4e71-9baf-94fec1f9c0ea",
 CellID->1296596866],
Cell[CellGroupData[{
Cell[364725, 7928, 123, 2, 70, "Input",ExpressionUUID->"16ad0570-bc84-436a-95af-48e0e3333d0b",
 CellID->1386960753],
Cell[364851, 7932, 7713, 135, 70, "Output",ExpressionUUID->"7ca02acc-1ba4-4b49-acfe-78d703dffa2f",
 CellTags->"RasterizedOutput",
 CellID->401012895]
}, Open  ]],
Cell[372579, 8070, 128, 4, 70, "Text",ExpressionUUID->"8f83462d-d51c-4d3f-9b91-c5903087bc19",
 CellID->1483911894],
Cell[CellGroupData[{
Cell[372732, 8078, 1311, 39, 70, "Input",ExpressionUUID->"02eaa3fd-ac75-437c-bbde-9cf0b421bbbb",
 CellID->1379609847],
Cell[374046, 8119, 10015, 172, 70, "Output",ExpressionUUID->"0572b954-92c4-4d92-aa6f-dfd1bb1952d3",
 CellTags->"RasterizedOutput",
 CellID->1020041979]
}, Open  ]],
Cell[384076, 8294, 82, 1, 70, "Text",ExpressionUUID->"0e0165d0-9d36-4ed3-a3dc-1717aec9ada8",
 CellID->1664110834],
Cell[384161, 8297, 120, 3, 70, "Text",ExpressionUUID->"ddb6bb84-b5b1-4ac6-866c-9d531de87660",
 CellID->2031252157],
Cell[CellGroupData[{
Cell[384306, 8304, 110, 2, 70, "Input",ExpressionUUID->"8fc56a5e-0ad6-48bf-8149-d054e8a90763",
 CellID->707466340],
Cell[384419, 8308, 8253, 143, 70, "Output",ExpressionUUID->"8f4d71dc-1617-4dcc-8328-ee725de46486",
 CellTags->"RasterizedOutput",
 CellID->483587052]
}, Open  ]],
Cell[392687, 8454, 118, 3, 70, "Text",ExpressionUUID->"20dca9ca-29e5-4691-88d2-4ae5eeb0bee1",
 CellID->1179701281],
Cell[CellGroupData[{
Cell[392830, 8461, 136, 4, 70, "Input",ExpressionUUID->"847f5223-e0d0-4671-8efd-595953436ac6",
 CellID->1670400663],
Cell[392969, 8467, 6420, 113, 70, "Output",ExpressionUUID->"0ef93f57-8bad-4127-ba5d-2a5e0d3c8547",
 CellTags->"RasterizedOutput",
 CellID->1569462716]
}, Open  ]],
Cell[399404, 8583, 72, 2, 70, "Input",ExpressionUUID->"657b48d6-0019-45e9-bb1b-e718489bd1e0",
 CellID->1125063311],
Cell[399479, 8587, 90, 1, 70, "Text",ExpressionUUID->"078614fb-2aa9-420e-bf7d-7638bdeb0a5c",
 CellID->345556142],
Cell[CellGroupData[{
Cell[399594, 8592, 111, 2, 70, "Input",ExpressionUUID->"5f70f936-6f7b-4486-9a15-0bfec200096d",
 CellID->966297106],
Cell[399708, 8596, 8217, 143, 70, "Output",ExpressionUUID->"dc89e270-4d5a-4577-a533-eda769a3cccb",
 CellTags->"RasterizedOutput",
 CellID->418231711]
}, Open  ]],
Cell[407940, 8742, 393, 9, 70, "Text",ExpressionUUID->"d6ce5c3a-9f63-447d-96a9-cf82990a0c67",
 CellID->26591546],
Cell[408336, 8753, 128, 4, 70, "Program",ExpressionUUID->"c7b543d9-a215-4284-9f82-040d9b2fee84",
 CellID->247515046],
Cell[CellGroupData[{
Cell[408489, 8761, 1463, 46, 70, "Input",ExpressionUUID->"547ad81e-d3e0-420e-b2d7-dbfad8595795",
 CellID->309553883],
Cell[409955, 8809, 13284, 226, 70, "Output",ExpressionUUID->"cf9f3066-957a-4604-a33d-f50eb3332552",
 CellTags->"RasterizedOutput",
 CellID->506390146]
}, Open  ]],
Cell[423254, 9038, 146, 4, 70, "Text",ExpressionUUID->"f9ace9a3-99b9-42bb-9dbd-9b2c034b77f3",
 CellID->173835516],
Cell[CellGroupData[{
Cell[423425, 9046, 1165, 35, 70, "Input",ExpressionUUID->"5c51e285-23cf-4669-b172-d7e227690efe",
 CellID->1075757492],
Cell[424593, 9083, 25789, 431, 70, "Output",ExpressionUUID->"24b4bea1-0f4a-4ce2-b3ca-ea77fd9593cd",
 CellTags->"RasterizedOutput",
 CellID->421490761]
}, Open  ]],
Cell[CellGroupData[{
Cell[450419, 9519, 936, 29, 70, "Input",ExpressionUUID->"b571cc25-63b2-4f56-b0ea-986ed809b906",
 CellID->163466141],
Cell[451358, 9550, 26384, 441, 70, "Output",ExpressionUUID->"88e42d4a-51b3-4c60-8afe-7d8b31bd524b",
 CellTags->"RasterizedOutput",
 CellID->1594152321]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[477781, 9996, 23, 0, 70, "FooterCell",ExpressionUUID->"91bddcd8-7d11-4547-b8da-40db41f95573"]
}
]
*)

(* End of internal cache information *)
