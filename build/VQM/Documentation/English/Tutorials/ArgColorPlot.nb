(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    443103,       9544]
NotebookOptionsPosition[    414236,       8943]
NotebookOutlinePosition[    422121,       9110]
CellTagsIndexPosition[    421912,       9102]
WindowTitle->ArgColorPlot
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["V Q M TUTORIAL", "PacletNameCell"], Cell[TextData[Cell[BoxData[
     ActionMenuBox[
      FrameBox[
       InterpretationBox[Cell[TextData[{
         "URL",
         StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
          StripOnInput->False]
        }]],
        TextCell[
         Row[{"URL", 
           Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
       StripOnInput->False], {"\<\"VQM/tutorial/ArgColorPlot\"\>":>
      None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell["VQM/tutorial/ArgColorPlot"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; Null], 
      Delimiter, "\<\"Copy web URL\"\>":>
      Module[{DocumentationSearch`Private`nb$}, 
       DocumentationSearch`Private`nb$ = NotebookPut[
          Notebook[{
            Cell[
             BoxData[
              MakeBoxes[
               Hyperlink[
               "http://reference.wolfram.com/language/VQM/tutorial/\
ArgColorPlot.html"], StandardForm]], "Input", TextClipboardType -> 
             "PlainText"]}, Visible -> False]]; 
       SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
       FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
       NotebookClose[DocumentationSearch`Private`nb$]; 
       Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
        NotebookLocate[{
          URL[
           StringJoin[
            If[
             TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$10187], 
             "http://reference.wolfram.com/system-modeler/", 
             "http://reference.wolfram.com/language/"], 
            "VQM/tutorial/ArgColorPlot", ".html"]], None}]}]},
      Appearance->None,
      MenuAppearance->Automatic,
      MenuStyle->"URLMenu"]],
     LineSpacing->{1.4, 0}]], "AnchorBar"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1],

Cell[CellGroupData[{

Cell["ArgColorPlot", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Introduction and implementation"],
      "paclet:VQM/tutorial/ArgColorPlot#1892760991",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Examples for using the ArgColorPlot package"],
      "paclet:VQM/tutorial/ArgColorPlot#559656922",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["The package VQM`ArgColorPlot"],
      "paclet:VQM/tutorial/ArgColorPlot#1933453141",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TutorialJumpBox"],

Cell[TextData[{
 "The package VQM`ArgColorPlot provides methods to visualize complex-valued \
functions of one real variable. This package is part of the VQM packages \
which can be obtained here:  ",
 ButtonBox["https://vqm.uni-graz.at/pages/software.html",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["https://vqm.uni-graz.at/pages/software.html"], None}],
 " (free download). The VQM packages are part of the Visual Quantum Mechanics \
project, see ",
 ButtonBox["https://vqm.uni-graz.at",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["https://vqm.uni-graz.at"], None}],
 ". In particular, these packages are distributed with the book ",
 StyleBox["Advanced Visual Quantum Mechanics",
  FontSlant->"Italic"],
 ", Springer-Verlag New York, 2004."
}], "Text",
 CellID->1534169418],

Cell["\<\
Plot the absolute value Abs[f[x]] of a complex-valued function f depending on \
a real variable x and fill the space between the plotted function and the \
x-axis with a color corresponding to the argument Arg[f[x]]. The saturation \
and brightness of the colors can be set using the options QSaturation and \
QBrightness. \
\>", "Text",
 CellTags->"VQM`ArgColorPlot`",
 CellID->468673075],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"QArgColorPlot", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}],
     FontFamily->"Courier"], Cell["\<\
is used like the usual Plot command. It gives a two-dimensional plot of a \
complex-valued function f of a single real variable x in the range {x0,x1}. \
The plot shows the curve Abs[f] with area between the curve and the x-axis \
colored by Hue[Arg[f[x]]/(2 Pi)]. The default options of Plot are changed to \
Axes->{True,None}, Fame->True.\
\>", "TableText"]},
   {
    RowBox[{"QListArgColorPlot", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}], 
    Cell["\<\
plots a Abs[f], where f is a list of complex numbers. The  points of the list \
Abs[f] are joined by a line. The area between the curve and the x-axis is \
colored at each point by Hue[Arg[f]/(2 Pi)].\
\>", "TableText"]},
   {
    RowBox[{"QCombinedPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"g", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}], Cell[
    TextData[Cell[BoxData[
     FormBox[
      RowBox[{
      "works", " ", "like", " ", "QArgColorPlot", " ", "with", " ", "respect",
        " ", "to", " ", 
       RowBox[{"f", ".", " ", "\n", "The"}], " ", "curve", " ", "g", " ", 
       "is", " ", "drawn", " ", "in", " ", "front", " ", "of", " ", "the", 
       " ", "QArgColorPlot", " ", "of", " ", 
       RowBox[{"f", ".", " "}]}], TraditionalForm]], "Text"]], "TableText"]},
   {
    RowBox[{"QListCombinedPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"list", ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}], 
    Cell["\<\
works like QListArgColorPlot with respect to list. It is assumed that list \
represents the discretized values of a function defined on the interval \
[x0,x1]. The color list plot is then combined with an ordinary plot of f on \
the same scale and with the Ticks automatically adjusted.\
\>", "TableText"]},
   {
    RowBox[{"QSpinorPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"func1", ",", "func2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}], 
    Cell["\<\
provides a method to visualize C^2-valued functions (for example, spinor \
wavefunctions in quantum mechanics). The QSpinorPlot combines a QArgColorPlot \
of func1 with a QArgColorPlot of func2 (upside down, with less saturation) \
Both curves are plotted with the option QSquared->True (that is, a plot of \
the curve Abs[func]^2 is filled with a color describing the phase). In the \
background, a filled plot of Abs[func1]^2 + Abs[func2]^2 displays the \
corresponding density.\
\>", "TableText"]},
   {
    RowBox[{"QListSpinorPlot", "[", 
     RowBox[{"list", ",", "opts"}], "]"}], Cell["\<\
visualizes a spinor-valued list of complex numbers. Each element of list is a \
C^-vector, that is, list = {{z11,z12},{z21,z22},...}. Alternatively, list = \
{list1,list2} with two lists of complex numbers, list1 giving the upper \
component of the spinor-valued wave function, and list2 giving the lower \
component. The lower component is plotted upside down with less saturation. \
See also the description of QSpinorPlot.\
\>", "TableText"]},
   {
    RowBox[{"QSpinorCombinedPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"func1", ",", "func2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}], 
    Cell["\<\
combines a QSpinorPlot of func1 with an ordinary Plot of a real-valued \
function func2. See the description of QCombinedPlot and of QSpinorPlot.\
\>", "TableText"]},
   {
    RowBox[{"QListSpinorCombinedPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"list", ",", 
        RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "x0", ",", "x1"}], "}"}], ",", "opts"}], "]"}], 
    Cell["\<\
combines a QListSpinorPlot of list1 with an ordinary Plot  of a real-valued \
function f. See the description of QListCombinedPlot and of QListSpinorPlot.\
\>", "TableText"]},
   {
    RowBox[{"QNiceTicks", "[", 
     RowBox[{"xmin", ",", "xmax", ",", "dx"}], "]"}], Cell["\<\
provides a list of nice positions for use in the Ticks or FrameTicks option \
in a ListPlot, where it is assumed that the list of values ranges between \
xmin and xmax in steps dx.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->2096742444],

Cell["Available functions in the VQM`ArgColorPlot package.", "Caption",
 CellID->1891092685],

Cell[CellGroupData[{

Cell["Introduction and implementation", "Section",
 CellID->1892760991],

Cell["\<\
Here we describe theoretical background and the practical implementation of \
the main function in the package VQM`ArgColorPlot`.\
\>", "Text",
 CellID->958712726],

Cell[CellGroupData[{

Cell["FilledPlot", "Subsection",
 CellID->514982441],

Cell["Filling of a graph can be obtained by ", "Text",
 FontFamily->"Times",
 CellID->950788477],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->476115612],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
fiRGgWGtYZJQfqRjCkI0tKJxLFrihEKhbx9oIThbhQzOEfMjff5p0u7LsNL0
Mzdd+BRXdEibzn4777vJ71PE/EiMvLPsq7KpGmn7GZSH2yVLG8fiKrdhsd0j
6FK6iPmRQC9LqMSK9spbdxWS97Nx1peQKf8R9+KUKs1q5iWU1j5B9sQMU8T8
SJYBxt60731dyvcqabefOd3/2QQltvBmnXTVIXuxvQ5cLVTdLOtzCv4SSqT8
SEzcpu7UPH9el04lZVa1m8LyMUptyI7TuG35fLaiuNFEuvaQvXDpgF7pxXh9
O0J+pIDJYFJpDRqtKi8xtfrV5xTQUrNxuLgXwCEakK5A5DOzrneX85S3fuwX
yQYR8yNxv/C2OuWuauHz70vZzxbn24u53ZhGSVJUt09AkOkdXRDRCRHzI+2X
lP0Mqu2agtKbsGGmO0kwYVu+kKP4oUZP3BhR6mfrwsqVgp6U8r7NLUzpT56C
+pGEM+Vzjnc/g1rY/CQqo5t0ZcY7WnYpQnnLGHFLHO5nCQ5uhMu5uJZawcyr
fvz9X6SrNH7Z2mJmt6EnOOMUfA/BM/qZ+DkcKeh94AuzZOGyeDX2kMxFEDN+
drM5Dc5lYWYwMtDula8LepLL+hyLxBLFxJifx6xvzmcr7mF+XRI8ZCcCeEpO
jn7e1qMOJgX6+Nwy6eqNL0yzPngyZj8xEDdAjPnZurBy9Z7qm1LcjlNU7tbq
4ckIz0fiBogxP7t3tuNs19pIV3K8wOUL/alzknjVH9/PEh+vC5draS3j0SCE
i8W32DEUHIvz7ZWCHnggCrzImWc/Ez+HE2mUfsPt0hjCHWYFprDBCMFZe7YN
BNHPR4pbr9hrWiBd4bGMctgl/dnA2PCzY3E1tYKZq8IUuwIBXe/rRWqQoO+6
op93NTjpTciUlzaPkq752KSiZQyCc/ewk3hFx4mf3Tur/Y2zuK89z2jY1QX3
GkaIV/Hp/BxF4xvhmnsdkJX0Qgc8sP47aQvEDjPOd9cKVVcLVRbnW+JVfDo/
Ez+HU6t/wpOQJc+tG97CsQ4+CIVC2U8MXF+beOXuKlJ+JJt1uqO1q1U9TseK
n0Hcvue/DsyT9kIs0NgzK7XZk0j5kWyTXcwrhTWNRbco6lbLrqWj3c9Odobl
XJZ83rNK2g7RzdDU4vlsxXcP+6W0iC5ifiRNBUWVsEtKFkyJYSm/ot3Pbnbf
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
giAIgiBn4f8BGEKQ4A==
    "], {{0, 157}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[12]=",
 CellID->1710643653]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"FillingStyle", "\[Rule]", 
      RowBox[{"Hue", "[", "c", "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", ".42", ",", "\"\<color\>\""}], "}"}], ",", "0", ",", 
     "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->1079990870],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c$$ = 0.42, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`c$$], 0.42, "color"}, 0, 1}}, Typeset`size$$ = {
    252., {80., 87.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`c$2468$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`c$$ = 0.42}, 
      "ControllerVariables" :> {
        Hold[$CellContext`c$$, $CellContext`c$2468$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[E^(-($CellContext`x^2/2)), {$CellContext`x, -3, 3}, Filling -> 
        Axis, FillingStyle -> Hue[$CellContext`c$$]], 
      "Specifications" :> {{{$CellContext`c$$, 0.42, "color"}, 0, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{295., {125., 131.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 ImageSize->{299, 258},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[13]=",
 CellID->433346769]
}, Open  ]],

Cell["In that way one can produce neat looking graphs. ", "Text",
 FontFamily->"Times",
 CellID->546778960],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "2"], "18"], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", 
           RowBox[{"GrayLevel", "[", "0.3", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"1", "\[Rule]", "Axis"}]}], "}"}]}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"GrayLevel", "[", ".3", "]"}], ",", 
      RowBox[{"GrayLevel", "[", ".7", "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->631455207],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
powlcJWGjzaAhl2CopiuvtRZfl/sJpB0mdBXNGcnV5yY9hdTV5isA64LVAhJ
Xc8uHttTa20KxOsGn96j4lqakd1vBmuDzScH9hlsD7bvftddCd5HqolgGMXD
J8TeR2rc92U6B0Qwnb1MZnxiqKdSGGpuYRqESEgUauMdtKD0CipUNKlnJ2d7
bpUdT2jXN/gjFRfSyqhirL36ANhclL7FM7x4clACOeG4Jvin294UiDHUB4pN
i0NMLkrGqRZGm1udenM62hYMeyra1kymmxkqVETEzwymakb7Xv95Kq4yneER
RfVZvIiPal7F8MT70lSLfxpyA8DytVn+IGnwzGxfDnhpcxteBZPlcLxkFeop
i1LNrVA9yDmAZrRbElZa2spGKnSl9M8OR5STgNd/q6ToEiDdk9Wo8OCJQvHh
bPHuFFXSKPETmCgOyxAfyxfDH5TXCHEuWrOUFabf1CFZhRc0X8LJZUfSaTvo
LzeICiiSH1yFxLMd27URorhv01aoL88wga10uQpFYjuQsAHEfPFW8uSRGf9M
w8Gx8XGpTN7/txSO5FUhlwu6jcoV708X70wUw8FJ6YKMdyWLI7LQwewKvKwG
r298u4CNaEqxSNCevuJh2YI4bOOMNtHxoDHv1XBCV8/taXU20GsWiCpnk9/0
gzr+GbknPOC/+UHJQjg4JXOKIsvoe1CzugzWM4i55VrYqGIUIlj5iAKOgDj/
efbq0T8v+h5J7/f/W16LDFVwCs+pxNPL8KRi8fEClDQHByFOCElShQpoqfBb
6aLj4HVjeCrpltTgtQ14i1Cn5mgV1v2Uu5RoCxMbWZcTegV+kXnOOrkazbNY
rJ6DPbfeK1r0S8FiU1pG94PO7jtI0TNGQ2N5kOGbJ+71PYBTlQmvVOG3T4l/
4bfeqf3qbn3bvcZvf225dL/1h9+/ud57+eYfHXcHbnUP/tY31Pe39MnTVy9f
j4yPj5NyA5qRD968X7Kwk7fUjGtmNLDrEJpnOZq/emx8pvQJ8+HMsv8+8wMI
2I4EU7IwxkjcvLel19ucbP3sqYz8ElVkfTQo4mVvG7TLpYwP2NSnGxtAWDzq
elhUyXQmw4Eoyp26b525zTMDbNcdyXzbPNHqgaHbVDy+hesZeH6XD62DJ35s
acNNShyiMtHQ0I+/lpnbTirOxNqAuUojLbGGD5NFpKBaPxj4jqLHJzF6oY5/
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
mWY+QeuZhoaGhnT+H4KF0Cs=
    "], {{0, 138}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 138},
  PlotRange->{{0, 240}, {0, 138}}]], "Output",
 ImageSize->{244, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[14]=",
 CellID->276809935]
}, Open  ]],

Cell[TextData[StyleBox["Again, it is only possible to plot real-valued \
functions.",
 FontSlant->"Plain"]], "Text",
 FontFamily->"Times",
 FontSlant->"Italic",
 CellID->515965556]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filling with an x-dependent color", "Subsection",
 CellID->294133106],

Cell["\<\
In order to visualize a complex-valued function f[x] of one real variable, we \
use the following idea. We plot the curve Abs[f[x]] and fill the space \
between the curve and the horizontal axis with a color determined by \
Arg[f[x]]. Since the argument of a complex number is a real number modulo 2\
\[Pi], it appears natural to choose Hue[Arg[f[x]]/(2\[Pi])].\
\>", "Text",
 FontFamily->"Times",
 CellID->2135240795],

Cell["In order to be specific, we define a sample function", "Text",
 CellID->392816548],

Cell["f[x_] := Exp[-x^2 + 2 I x]", "Input",
 CellLabel->"In[15]:=",
 CellID->702991358],

Cell["\<\
We proceed as follows. First, we define a set of positions on the x-axis and \
calculate a table of function values at these positions.\
\>", "Text",
 CellID->1868211759],

Cell["xvalues = Table[x,{x,-3.,3.,.1}];", "Input",
 CellLabel->"In[16]:=",
 CellID->676630726],

Cell[TextData[{
 "(The semicolon serves to suppress the lengthy output). Observe that the \
boundary values and the increment are given as real numbers. This guarantees \
that all generated values are real numbers. and when we calculate the value \
of f for one of these x-values, then ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will return a numeric expression. The function values at these points can \
be calculated just by applying the function f to the list xvalues:"
}], "Text",
 CellID->1206701017],

Cell["yvalues = f[xvalues];", "Input",
 CellLabel->"In[17]:=",
 CellID->188430451],

Cell["\<\
The variable yvalues now contains a one-dimensional array of complex numbers. \
With the command Short we can look at an abbreviated form of this expression \
(The parameter in the command Short describes the desired length of the \
abbreviated expression). :\
\>", "Text",
 CellID->1559694279],

Cell[CellGroupData[{

Cell["Short[yvalues,2]", "Input",
 CellLabel->"In[18]:=",
 CellID->1596351871],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.00011849442696537262`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.000034482611891511404`", " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{"\[LeftSkeleton]", "59", "\[RightSkeleton]"}], ",", 
    RowBox[{"0.00011849442696537262`", "\[VeryThinSpace]", "-", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]}], "}"}],
  Short[#, 2]& ]], "Output",
 ImageSize->{399, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]//Short=",
 CellID->818669517]
}, Open  ]],

Cell["Next we generate a table of absolute values", "Text",
 CellID->449994561],

Cell["absvals = Abs[yvalues];", "Input",
 CellLabel->"In[19]:=",
 CellID->1768665640],

Cell["and a table of arguments", "Text",
 CellID->494769706],

Cell["args = Arg[yvalues];", "Input",
 CellLabel->"In[20]:=",
 CellID->537767558],

Cell["\<\
From this we want to determine a table of color values. We could try to apply \
Hue to the list args, but this does not work because Hue is not \"listable\"\
\>", "Text",
 CellID->1648160730],

Cell[CellGroupData[{

Cell["Hue[args/(2 Pi)]    //(Short[#,2]&)", "Input",
 CellLabel->"In[21]:=",
 CellID->245826457],

Cell[BoxData[
 TagBox[
  RowBox[{"Hue", "[", 
   RowBox[{"{", 
    RowBox[{"0.04507034144862798`", ",", "0.07690133006700708`", ",", 
     RowBox[{"\[LeftSkeleton]", "58", "\[RightSkeleton]"}], ",", 
     RowBox[{"-", "0.04507034144862798`"}]}], "}"}], "]"}],
  Short[#, 2]& ]], "Output",
 ImageSize->{332, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]//Short=",
 CellID->464389039]
}, Open  ]],

Cell["\<\
We have to use the command Map in order to apply Hue to each of the values in \
the list. Map has the shortcut /@\
\>", "Text",
 CellID->903770997],

Cell[CellGroupData[{

Cell["Hue /@ (args/(2 Pi))    //(Short[#,2]&)", "Input",
 CellLabel->"In[22]:=",
 CellID->527311348],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.04507034144862798], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.045070341448627975`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.04507034144862798`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.04507034144862798, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.04507034144862798],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.07690133006700708], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.0769013300670071, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.07690133006700708`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.07690133006700708, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.07690133006700708],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.10873231868538617`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.10873231868538617`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.10873231868538617`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.10873231868538617`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.10873231868538617`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.14056330730376512`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.14056330730376512`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.14056330730376512`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.14056330730376512`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.14056330730376512`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.17239429592214423`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.1723942959221442, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.17239429592214423`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.17239429592214423`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.17239429592214423`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.20422528454052333`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.20422528454052333`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.20422528454052333`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.20422528454052333`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.20422528454052333`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.23605627315890243`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.23605627315890243`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.23605627315890243`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.23605627315890243`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.23605627315890243`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.2678872617772815], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.2678872617772815, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.2678872617772815`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.2678872617772815, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.2678872617772815],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.29971825039566047`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.29971825039566047`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.29971825039566047`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.29971825039566047`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.29971825039566047`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.33154923901403954`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.33154923901403954`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.33154923901403954`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.33154923901403954`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.33154923901403954`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.36338022763241873`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.36338022763241873`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.36338022763241873`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.36338022763241873`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.36338022763241873`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.39521121625079775`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.39521121625079775`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.39521121625079775`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.39521121625079775`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.39521121625079775`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.42704220486917693`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.42704220486917693`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.42704220486917693`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.42704220486917693`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.42704220486917693`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.45887319348755595`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.458873193487556, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.45887319348755595`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.45887319348755595`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.45887319348755595`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.490704182105935], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.490704182105935, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.490704182105935`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.490704182105935, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.490704182105935],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.477464829275686], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.522535170724314, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.477464829275686`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.522535170724314, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.477464829275686],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.44563384065730693`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5543661593426931, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.44563384065730693`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5543661593426931, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.44563384065730693`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.41380285203892786`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5861971479610721, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.41380285203892786`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5861971479610721, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.41380285203892786`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.38197186342054884`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6180281365794511, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.38197186342054884`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6180281365794511, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.38197186342054884`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3501408748021697], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6498591251978303, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3501408748021697`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6498591251978303, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3501408748021697],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3183098861837907], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6816901138162091, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3183098861837907`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6816901138162093, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3183098861837907],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2864788975654116], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7135211024345884, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2864788975654116`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7135211024345884, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2864788975654116],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2546479089470325], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7453520910529675, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2546479089470325`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7453520910529675, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2546479089470325],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2228169203286534], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7771830796713465, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2228169203286534`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7771830796713466, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2228169203286534],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.1909859317102743], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8090140682897257, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.1909859317102743`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8090140682897257, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.1909859317102743],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.15915494309189535`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8408450569081046, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.15915494309189535`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8408450569081046, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.15915494309189535`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.12732395447351624`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8726760455264837, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.12732395447351624`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8726760455264837, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.12732395447351624`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.09549296585513713], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.904507034144863, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.09549296585513713`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.9045070341448629, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.09549296585513713],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.06366197723675805], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.936338022763242, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.06366197723675805`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.936338022763242, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.06366197723675805],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.03183098861837896], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.968169011381621, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.03183098861837896`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.968169011381621, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.03183098861837896],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0., 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.`", "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = Hue[0., 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.031830988618379095`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.031830988618379095`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.031830988618379095`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.031830988618379095`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.031830988618379095`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.06366197723675819], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.06366197723675819, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.06366197723675819`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.06366197723675819, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.06366197723675819],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.09549296585513731], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.0954929658551373, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.09549296585513731`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.09549296585513731, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.09549296585513731],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.12732395447351638`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.12732395447351638`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.12732395447351638`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.12732395447351638`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.12732395447351638`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.15915494309189535`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.15915494309189535`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.15915494309189535`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.15915494309189535`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.15915494309189535`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.19098593171027445`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.19098593171027445`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.19098593171027445`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.19098593171027445`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.19098593171027445`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.22281692032865355`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.22281692032865355`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.22281692032865355`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.22281692032865355`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.22281692032865355`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.25464790894703265`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.25464790894703265`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.25464790894703265`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.25464790894703265`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.25464790894703265`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.2864788975654117], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.2864788975654117, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.2864788975654117`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.2864788975654117, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.2864788975654117],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.3183098861837907], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.3183098861837907, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.3183098861837907`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.3183098861837907, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.3183098861837907],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.35014087480216993`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.35014087480216993`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.35014087480216993`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.35014087480216993`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.35014087480216993`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.3819718634205489], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.3819718634205489, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.3819718634205489`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.3819718634205489, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.3819718634205489],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.41380285203892786`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.41380285203892786`, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.41380285203892786`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.41380285203892786`, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.41380285203892786`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.4456338406573071], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.4456338406573071, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.4456338406573071`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.4456338406573071, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.4456338406573071],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[0.477464829275686], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.477464829275686, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", "0.477464829275686`", "]"}], NumberMarks -> 
        False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.477464829275686, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[0.477464829275686],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.4907041821059348], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5092958178940652, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.4907041821059348`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5092958178940652, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.4907041821059348],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.45887319348755584`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5411268065124442, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.45887319348755584`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5411268065124442, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.45887319348755584`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.4270422048691766], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.5729577951308233, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.4270422048691766`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.5729577951308233, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.4270422048691766],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3952112162507976], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6047887837492024, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3952112162507976`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6047887837492024, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3952112162507976],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.36338022763241873`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6366197723675813, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.36338022763241873`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6366197723675813, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.36338022763241873`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.3315492390140395], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.6684507609859605, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.3315492390140395`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.6684507609859605, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.3315492390140395],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.29971825039566047`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7002817496043395, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.29971825039566047`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7002817496043395, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.29971825039566047`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2678872617772812], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7321127382227188, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2678872617772812`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7321127382227188, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2678872617772812],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.2360562731589023], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7639437268410977, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.2360562731589023`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7639437268410977, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.2360562731589023],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.20422528454052333`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.7957747154594766, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.20422528454052333`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.7957747154594766, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.20422528454052333`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.1723942959221441], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.827605704077856, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.1723942959221441`"}], "]"}], NumberMarks -> False]],
      
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8276057040778559, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.1723942959221441],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.14056330730376512`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8594366926962348, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.14056330730376512`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8594366926962349, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.14056330730376512`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.10873231868538591`], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.8912676813146141, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.10873231868538591`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.8912676813146141, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.10873231868538591`],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.07690133006700695], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.923098669932993, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.07690133006700695`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.923098669932993, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.07690133006700695],
     Editable->False,
     Selectable->False], ",", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {Hue[-0.04507034144862798], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->Hue[0.954929658551372, 1., 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"Hue", "[", 
          RowBox[{"-", "0.04507034144862798`"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          Hue[0.954929658551372, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     Hue[-0.04507034144862798],
     Editable->False,
     Selectable->False]}], "}"}],
  Short[#, 2]& ]], "Output",
 ImageSize->{449, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]//Short=",
 CellID->29157221]
}, Open  ]],

Cell["We can achieve this in one step by writing", "Text",
 CellID->813276556],

Cell["huevals = Hue[Arg[#]/(2 Pi)]& /@ yvalues;", "Input",
 CellLabel->"In[23]:=",
 CellID->5663537],

Cell["\<\
Next, we are going to plot a graph of the function f. Let us first plot the \
graph of the absolute value, which is represented by the list absvals. We \
shall convert this into a list of points which can then be joined to form a \
line. The coordinates of these points can be obtained from the lists xvalues \
and absvals. We just apply the command Transpose in order to obtain the list \
of (x.y) pairs. \
\>", "Text",
 CellID->697785891],

Cell["graphline = Line[{xvalues,absvals}//Transpose];", "Input",
 CellLabel->"In[24]:=",
 CellID->279273770],

Cell["\<\
We can look at this by converting the graphics primitive graphline into a \
graphics object and by applying the command Show:\
\>", "Text",
 CellID->1502483695],

Cell[CellGroupData[{

Cell["Show[Graphics[graphline]]", "Input",
 CellLabel->"In[25]:=",
 CellID->2130740439],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1:eJxVk39IU1EUx59zuUgGgkghBYloQiZGZkbleYFEBJWos19aEBapRLO0VkiI
SQShlISkLZGIBU4kEqL8w/sqyBZLRgtqUCkZosza1sZUpqP2zvf+0YExHvee
zzn3nO836/SFijMGRVH2/Psl/jlWa8ercnP+5G+kbXqYtLvDY7M7CrbQWT1S
tO3rnj1xundSX28iVmn15THLuxP76IM7EUbtx9uVL3nxCmKeURv3NxydGzgF
XrJmy6zNq/HUg2fQnnoni52OZvCStP1NVz91b20DT9EaWnY1en7eAk/RIruz
XlhedSM/Lr7Zjj2/NvKA9OvuZRF0lu09YH6MejFRvamIWpuHSMf3LokND01V
pe9HwFsUC0c6uppio+BFxZXz9nSH6TV4EZEUb49Y+sfBC4v08M21jsoJ8EIi
O2N0zWCGF7ygKAnkF1ff/oz8eXG54+JCp+0r3dfvzwlPYU/NvckpqtPrzYhF
U3TwUd80Fer8aXGpruVgbeUMeFMitX2oP+CfRb5PlBdkm9+U+XHfK3IzQ/b5
0l90Rz93ia5U63XX2G9q079firh980rrcICU/yJIA3xO8py/XdSJ/BLmUw74
fO6jQ6iP/kj2V8T9kxX9n+P3UQTvs/P7yY33e3g+ZMV8ZF9yfnw/ROsxX+aH
KQ3zx35I7ofrRcmK/WG/JPfLvCVKw/6ZF6PD0Af3s0zfoR/mxekj9IXBqVJ/
E6xP9ST0Cf2qUr+cb1B7oG+ul6w2Qv/whyr9wTyj6oN/4C9V+ot5KaoZ/mOe
Sb0Bf8K/qvTvX+YdvIY=
   "]]]], "Output",
 ImageSize->{244, 48},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[25]=",
 CellID->49735328]
}, Open  ]],

Cell["\<\
In fact, this line is a polygonal curve, but the corners are too close to be \
visible at this magnification.\
\>", "Text",
 CellID->973366363],

Cell[TextData[{
 "The colors will be obtained by generating polygons which are filled with \
the appropriate color. Assume that we are given n+1 function values f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]]],
 "], f[",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "]"}], ",", " ", 
    RowBox[{"...", " ", 
     RowBox[{
      RowBox[{"f", "[", 
       SubscriptBox["x", "n"], "]"}], "."}]}], " "}], TraditionalForm]]],
 "From these n+1 values we can generate n polygons, where the k-th polygon is \
given by the points ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 ", f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 "], f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]]],
 "], and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]]],
 "(k=0,..n-1). In a conventional programming language, one would think to \
generate the list of polygons with a sort of do-loop. In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " it is much more effective to apply list operations. We first generate an \
auxiliary list of zero values"
}], "Text",
 CellID->1985523742],

Cell["nullv = Table[0,{Length[xvalues]}];", "Input",
 CellLabel->"In[26]:=",
 CellID->949141061],

Cell[TextData[{
 "The n-1 points (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 ",0) for k=0 .. n on the x-axis are obtained by"
}], "Text",
 CellID->705282311],

Cell["xpoints = {xvalues, nullv}//Transpose;", "Input",
 CellLabel->"In[27]:=",
 CellID->1717553184],

Cell[TextData[{
 "Next we form the list of points with coordinates (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 ",f[",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "k"], TraditionalForm]]],
 "])"
}], "Text",
 CellID->441180514],

Cell["ypoints = {xvalues, absvals}//Transpose;", "Input",
 CellLabel->"In[28]:=",
 CellID->1807349354],

Cell["\<\
Now, this is a list of corner points for the polygons. The command Drop[list,\
\[PlusMinus]1] removes either the first or the last element of a list.\
\>", "Text",
 CellID->2111889510],

Cell["\<\
cornerpoints = {Drop[xpoints,-1], Drop[ypoints,-1], Drop[ypoints,1], \
Drop[xpoints,1]}//Transpose;\
\>", "Input",
 CellLabel->"In[29]:=",
 CellID->917276954],

Cell[CellGroupData[{

Cell["Short[cornerpoints,3]", "Input",
 CellLabel->"In[30]:=",
 CellID->2036147712],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.`"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.`"}], ",", "0.00012340980408667956`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.9`"}], ",", "0.00022262985691888897`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.9`"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "58", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.9000000000000004`", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], ",", 
      RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.`", ",", "0"}], "}"}]}], "}"}]}], "}"}],
  Short[#, 3]& ]], "Output",
 ImageSize->{427, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[30]//Short=",
 CellID->81698886]
}, Open  ]],

Cell["\<\
The list of polygons is formed by mapping the command Polygon on the list of \
corner points.\
\>", "Text",
 CellID->792955486],

Cell["polylist = Map[Polygon, cornerpoints];", "Input",
 CellLabel->"In[31]:=",
 CellID->2066823567],

Cell["\<\
Finally, we combine the color directives from the list hue with each polygon\
\>", "Text",
 CellID->1555700344],

Cell["coloredpolys = {Drop[huevals,-1],polylist}//Transpose;", "Input",
 CellLabel->"In[32]:=",
 CellID->1042279383],

Cell["Lets have a look at this:", "Text",
 CellID->565481502],

Cell[CellGroupData[{

Cell["Show[Graphics[coloredpolys],AspectRatio->(1/GoldenRatio)]", "Input",
 CellLabel->"In[33]:=",
 CellID->1432466139],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Gg==
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[33]=",
 CellID->894998143]
}, Open  ]],

Cell["We can combine this with the line of the curve:", "Text",
 CellID->1103895342],

Cell[CellGroupData[{

Cell["\<\
Graphics[{coloredpolys,graphline},AspectRatio->(1/GoldenRatio)]\
\>", "Input",
 CellLabel->"In[34]:=",
 CellID->1057786561],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQlYU2e6x9+okJwkJzkhIUBEVBSsLCKLCIj7MsodvS61qFWQgwgoCG6A
oLgUR1uXiDMudZlel2rtdO6ttqiDdkTbae+V3qJWZ9RxtwhVi1oXlO2bD5L7
zMydagWBL8v7e/7yII+S7/2/P+IxDwmdxbSx09sAwFwZfTM2LnPgnDlxC8YJ
9DfjZ81NTpyVMG3ErHkJiQlzwsS29IMb6K/79Ff9+wRBEARBEARBEMRiqKur
+6wB+g7rsyBI0zl79mxG+myD4BTI6wJ53iAIc1JTL1y4wPpcCNJo5qelSwAy
HAzn4DUCgQTgHMB8B4d2Eknm7HTWp0OQRrB8yVIXB+UPnlENJpsCplT4ePoI
8uVLlrA+I4K8FL/Jz/fknMogmniN/lefib9XmR90Ucl/vW4d65MiyM+w4733
3DnhGownEPc8n0kgXPeF9kqO/mHW50WQ53L06FGDQnOL3jNTmV/oM80tPzCo
FIWFhaxPjSA/QV1dXZC3/26viWaZf85nmt3DvYJ8vPFxPMQC2frulgiFF4lY
9fI+k/SIcHfFti1bWJ8dQf6Je/fu6XmnEshorM8lo0Av8PSvs54AQf7OrOkz
EmX9CKxvrM8kDpL8ZKlJCawnQBAzZ8+e1cnUd2FF03z+YRJolTL6SVjPgSD1
9A+O2Ch5o17mJvlMsyFcMiAshPUcCEK++OILb3UHs8xN9ZnG201NPxXraRB7
Z8zQURu8Ul7d542x3qOjhrCeBrFrLl++rJUKjyMPvLrPj7dG6lSyS5cusZ4J
sV9SpiVnt4sh/Qtf3Weys3/O8HYzE+NZz4TYKffu3RNkqlvwX83lc1keCEpZ
RUUF68kQe2RF3vJYLorA583lM1kPsRHciuV5rCdD7I6qqiqD4HIa3mten89k
gZtOTT856/kQ+2LXrl2DlaH1MjerzzRD/JQ7d+5kPR9iXwR79yyEtS3hc+EM
CPb3Zj0fYkd8++237kq3WjjeEj7X5YO7i/LMmTOsp0TshTkzZ+e4p5llbm6f
aRbGd5idNoP1lIhdUF1d7azUXfL7quV8vvSffs5aJb0h1rMits/+/fsj+XAS
UtZyPpOTIX0D+Y8//pj1rIjtM2bI6G2woaV93p4Fo0fit3MgLcudO3dUjvxD
KG9pnx/+AVRKR3pzrCdGbJl1a41TuIkEHrW0z+RziInijGvXsJ4YsWUCOvf4
IxS0js9/zIcA386sJ0ZslpKSko5yjzp42Do+152AjgY5vVHWcyO2SXpy+tJ2
OfUyt4rPNEvj26WlJLGeG7FBamtrXdQuF+FUa/r8173golfRm2Y9PWJrFBUV
+QkBZplby2eawADNsWPHWE+P2BqJU5Mz1ctb3+eVy4SkxFjW0yM2RU1NjVbp
/Ln+Uuv7fPWcXqdV0AOw7gCxHQoLC3vyodcNta3vM3lkCA3h8WVIkWYkblJ8
lmQNK5/X/EoSL05i3QFiI1RVVQlypxNwk5XPNy+Ak0aOT8JCmoWCgoIQvs9F
IKx8Jo+gTxhPj8G6CcQWmPx6zEJYz9bn9asgZsrrrJtArJ6nT5+qZMKfoIyt
z2WXQVDL6GFY94FYNwcOHIhQDaIys/WZZlB/FT0M6z4Q6yZ69JtLpBstweff
GKUT3xzNug/Einn27JlSpv5KUW4JPpdeVqjUMnok1q0g1kpBQYGfKvKvPLEE
n2se8b0iVfgoB9JkYiaIMRKj5fics04SGxfNuhXEKqmpqVHLnTbADcvx+cRN
EJzk+DoGSBM4evRoN77XPiCW4/NFAj1D+SNHjrDuBrE+psclT5KstDSf578t
mZ40lXU3iJVRW1urVbnkwyVL8/noZdDpeXzGCtIoTpw40YUPoDJbms80PgE8
PR7rhhBrIiUpLbrtMsv0OW1Z29Q0fJIs0ghcNO3XwJ8t0+eD58DgrmHdEGI1
nDx5siPf3SSzBfpM4+XDFxcXs+4JsQ7mpmdE63Ms2eekhfq589NY94RYB+56
z/VdSyzZ549Kunp46ln3hFgBp0+f1sk7FfgTS/b5LPF37SSnR2XdFmLpLMzO
DXOYa/k+j5rnkLNoAeu2EEunq4fvFPjS8n1+6yv6v8IOrNtCLJoLFy4InFsm
1Fm+zx/UgdaNowdm3Rliuby1bHmoNCULiOX7vI/AiBTpW8uXse4MsVx8ugZN
hGPW4nPuMfAP6sq6M8RCuXbtGi/TZUCNtfi8txbUOtnVq1dZN4dYIqtWrQmW
TaMyW4vPNEMTZKtWv8O6OcQSCfKNeAMOWZfPCw5Brwhf1s0hFkdZWZlS5pQB
1dbl855qUDnJ6OFZ94dYFvn568MMMSaZrchnmsFT2xvXGVn3h1gWgf6RCb6f
WqPPmQW+wX38WPeHWBClpaWco7CmT5U1+vx+VR+F4EhHYN0iYikYjfmdudh1
fYk1+ryP9A2K49YY8SfJImZ6+vUJhgLr9Xn8QQjCRzmQBr777jtOqhkGVdbr
8/wqUGikdBDWXSLsWbPG2JmLGw7Een3OIhAscqvXrmbdJcKeAN+IYDho7T6/
cRh6hvmw7hJhzM2bNxsuNqqt3eeM6vpLDjoO60YRlqxevdaTE6nM1u5z/SVH
PLdqzSrWjSIsoRcbIfAH2/A5uhACw/GSw365cuWKktOZLjZswGd6ycHrODoU
614RNixe/Ja/x0yTzDbgM01Yqkfu0kWse0XYYHDzHhnw37bkc9z/9HT3cmPd
K8KA4uJiXtElvi+xJZ8Xkr6aLgp8KTA7JCkpTdV2se357L2kbdKsRNbtIq1K
TU0Nr3TWwiXb87nfJVA7K+mArDtGWo/Dhw8LfKgLENvzeTgBtzD+4MGDrDtG
Wo+xYybzsN5Wfe7+axiHP0nWbnj06JFMqnKGO7bq86A7wKmkdEzWTSOtwe7d
u52UUVRmW/WZxuPflLt27WLdNNIa9I2MUsEe2/Y5YC/0Gx7Bummkxbl+/TrH
Oemh0rZ9HvYUOI2MDsu6b6Rlycpa1L7jLJPMNuwzjecst6xFWaz7RlqQmpoa
QWPwCTxrDz73PuutMQj4QLQNc+DAAV4THhxJ7MHnwaSHJpynI7NuHWkpBgwc
CcJv7cdn1W9h4MgBrFtHWoTS0lKpVADXx/bjs/4xSAUpvtSMTZKbu0yqSQYD
sR+fXQgIydLcZbmsu0eamdraWq3OA5xL7M1npxLQeWjp+Kw3gDQnhw4d4jUh
VGZ787n+LjqEp+Oz3gDSnAwZNhrUW+zTZ34rDBk9lPUGkGbj/PnznFIPbpX2
6bO+Eji9nJbAeg9I8zBl6nSF7xKTzHboM41iicuU6TGs94A0A7dv35bKBT7q
jj37zN/pIhVktArW20BeleycxbIuieoxxJ59VpNuskRN9uJs1ttAXonKykpe
rYd+59FnuKBXOvO0ENY7QZrOpk2bFR6jIIqgz0AMipFOm9/dzHonSBOpq6sz
dPCGsOPos8lnOK41eLentbDeDNIUPvnkE961F5UZfTb7TAx8Lw2thfVmkEZD
74U6e/sL/fejz//os7C/a2f/rngXbXW8//77ys5hrpMJ+vyPPruSXorernv2
7GG9H6QRVFdXu7h7wuRj6PO/+gxFvfWd3WhFrLeEvCwbN25WdBsKOQR9/gmf
SZRimPuGTRtYbwl5KSorK9U6NxC/Rp+f5zN83UcwaJ88ecJ6V8jPs2LlO3L/
cVRm9Pm5PpMo+biOK95ZwXpXyM/w4MEDhVoHiX9Bn1/sM/yln0KnonWx3hjy
IuKTU1z6JZpkRp9f5DOJckkKip85nfXGkOfy5ZdfcjpDT+M99PllfO55fx7n
JtDSWO8N+Qmqqqo6dvOFOR+GvEvQ55fxOYQshA/HdvT1otWx3h7y/1m8LE8e
+kv4iKDPjfCZ5Mh/6bM4bynr7SH/xMWLFzm1FjbfQJ8b6zPcSOW0PC2Q9Q6R
vxMSOaBN3DoqM/rcaJ9JTpt1w0IG4IvrWgp5K97WBvSBfdXoc9N8huoF2j7d
897Gh6PZc+TIEU7vFnaw1CQz+twUn0lO2K3/4Fy1tEzW+7Rrbty4wev0sPd4
/2KCPr+Kz/3JATi+jNdraaWst2qnPHv2rHtQSNsFq+EyQZ+bwWfyUdtVMd17
BdJiWe/WHolJSORGjKMyo8/N5TMNNzYiNimB9W7tjvTMDG1QCJy6jz43r89w
f4dTiP/srEzWG7Yj5i7Ikvf0D71ebpIZfW5On8lHoRUl8h7d5+fgi3W0BgsW
58r9fODu1Ygfn6HPLeFzBLkCd7+W+3VLmJHMetu2TF1d3fQZyXKf1+D2ZSAP
0OcW9Jlchh/+FwCmJSbik2dbggcPHrTv5NGGk8KTcioz+tziPtM8/bOmd/iQ
Uf+O3ybdvJw7d87g5SmdOdar+huTzOhza/hMLntVPJUmzHTr0pWugLUFtgD9
x27Hzh2cVpDsXACkyJucQZ9b02fvh7XwgEi27OKctDt27MRrj1fhm2++8Q8P
VoZ1hVPbqMzoMyuf6/PFKaV/mH9oOF0Kay+sj/Ly8mmpyZyLINk+QUKMJpnR
Z5Y+03vpIiLJ2M5pXabNSKULYu2IdXDq1KnxsROkgtwpdQjc+xUQI/psIT5D
UUM+uec0LlWqFMZPii0pKWHti4Vy+/btrVu39h4aybUX2qwMgYoJnmQ71JuM
PluKz5Iis9Ke9O3yijYjV8p17qF9h9DF4Sv/k4Zn/J08edKYb+zRN9BRJVVE
u3rtGwvVU4DE0qDPFu2zsSGrq72nfajoFu3IqXoE9zUa8+lC7efZiPSr+MSJ
E/TLOW1+mn+kv4PcQdVD5ZHkDQWd4JkfkB7hZJFJZvTZOnw2kvBNBGIJTH4G
gws8eiaptD0cHOX+AZFpafO3bNlC120Vd901NTWVlZWPHz++e/duaWnplStX
zp8/X1xcXFRUVFBQsG/fvo0bN+bl5aXPnRUdOzZsUFDH1wwKgeM0Updwdfup
cp+V7m2OQpuH0JbAADKemmwK+mytPjekfyqBHgR8H0Lnox08VioUcWp1uFSq
kXNCB8NrvYIGvT42Nm3WXCoG1eODDz749NNPqTBUGyoPVYiKRHV69OgRVYsK
1iyiToyOdtHr9c7OzjodjZNGI6jVGkFQKhRyjpM6Ojo6OABAG4mEvk8/pnFS
ubppO3Zy7dbdIyC4S1i/boNG+I6YEDQmKfDN7MDEVb2m7xg478gv8s6N2XQ/
YSkRTVlJMuOJaEo2WSmSXFMyyS6RbDMlnXwmkkKa+Pq3502ZTa6J5IkpWZVV
4m1iSvYlIhabk/EZEX9vTspmIhrrk5hPxDnmZOaSdNGc9dlkrWjOxwvI70Rz
iueSk6I55YmkXKzPnZQ6Ij41J+M+ES+ak32aiEfMydpPxO3mpK8l4pL/i2jO
/HSyRDRnWxbZLppzNJscEc25kEEuiuY8SSFPRZrap4nlRDTlJpl7koim/Iks
+B0RTdlLsulNmpJH5qUT0ZREkiGSOTQp9T0bTckge0Tye1OyyVd0aFOyyC2R
3DZldmWt+ISYEn+eiA1JP0fEQnMyDxNxmznZW4mYa05WDokXzVmScH/mmHMx
vzjy+sAdb/RaNTIwe1hg0uDgiX39okK69fPrEuzl0d3DtZOL1k2jclIqeEdH
qUTShmrm4OBANaPiUf2ohFRFKqTJTKoozcToCS/2uaKioqysrLy8/Pvvv7/b
AP3I/fv3f/zxR9MXTnV1NT6ojrQCVDMqG1WOikf1oxJSFU1OUjnLG6AfYX1M
BEEQBEEQBLFi/gZCzlXj
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[34]=",
 CellID->1258325813]
}, Open  ]],

Cell["\<\
We combine everything into a single command. This can be done using a Module.\
\
\>", "Text",
 CellID->1205825801],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fillit", "[", 
    RowBox[{"xvars_", ",", "hues_", ",", "values_"}], "]"}], " ", ":=", "\n", 
   "   ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nullv", ",", "xpts", ",", "valpts", ",", "lines", ",", "fills"}], 
      "}"}], ",", "\n", "      ", 
     RowBox[{
      RowBox[{"nullv", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "xvars", "]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"xpts", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xvars", ",", "nullv"}], "}"}], "//", "Transpose"}]}], ";", 
      "\n", "      ", 
      RowBox[{"valpts", " ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xvars", ",", "values"}], "}"}], "//", "Transpose"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"lines", " ", "=", " ", 
       RowBox[{"Line", "[", "valpts", "]"}]}], ";", "\n", "      ", 
      RowBox[{"fills", " ", "=", "\n", "         ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"hues", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "\n", "             ", 
          RowBox[{"Map", "[", 
           RowBox[{"Polygon", ",", "\n", "\t\t\t\t\t    ", 
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Drop", "[", 
                RowBox[{"xpts", ",", 
                 RowBox[{"-", "1"}]}], "]"}], ",", " ", 
               RowBox[{"Drop", "[", 
                RowBox[{"valpts", ",", 
                 RowBox[{"-", "1"}]}], "]"}], ",", " ", 
               RowBox[{"Drop", "[", 
                RowBox[{"valpts", ",", " ", "1"}], "]"}], ",", 
               RowBox[{"Drop", "[", 
                RowBox[{"xpts", ",", " ", "1"}], "]"}]}], "\n", 
              "                          ", "}"}], "//", "Transpose"}]}], 
           "\n", "             ", "]"}]}], "\n", "         ", "}"}], "//", 
        "Transpose"}]}], ";", "\n", "      ", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", " ", 
         RowBox[{"{", 
          RowBox[{"fills", ",", "lines"}], "}"}], " ", "]"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"1", "/", "GoldenRatio"}], ")"}]}]}], "]"}]}]}], "\n", 
    "   ", "]"}]}], "\n"}]], "Input",
 CellLabel->"In[35]:=",
 CellID->511060668],

Cell["Let us test this command with a small list:", "Text",
 CellID->1609542723],

Cell[CellGroupData[{

Cell["fillit[{1,2,3,4,5}, Hue/@{0,.25,.5,.75,1}, {0,1,2,1,0}]", "Input",
 CellLabel->"In[36]:=",
 CellID->1880527849],

Cell[BoxData[
 GraphicsBox[{{
    {Hue[0], PolygonBox[{{1, 0}, {1, 0}, {2, 1}, {2, 0}}]}, 
    {Hue[0.25], PolygonBox[{{2, 0}, {2, 1}, {3, 2}, {3, 0}}]}, 
    {Hue[0.5], PolygonBox[{{3, 0}, {3, 2}, {4, 1}, {4, 0}}]}, 
    {Hue[0.75], PolygonBox[{{4, 0}, {4, 1}, {5, 0}, {5, 0}}]}}, 
   LineBox[{{1, 0}, {2, 1}, {3, 2}, {4, 1}, {5, 0}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948]]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[36]=",
 CellID->275694856]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase-colored plot", "Subsection",
 CellID->1716024370],

Cell["\<\
We can easily use the command fillit to define a useful plot command for a \
list of complex numbers:\
\>", "Text",
 CellID->516207380],

Cell["\<\
ListArgColorPlot[list_List] :=
   Module[{xvars,hues,values},
         xvars\t= Range[Length[list]];
         hues\t= Hue[Arg[#]/(2 Pi)]& /@ list;
         values\t= Abs[list];
         fillit[xvars,hues,values]
         ]
\
\>", "Input",
 CellLabel->"In[37]:=",
 CellID->63501780],

Cell["f[x_] := Tan[x + 0.3 I]", "Input",
 CellLabel->"In[39]:=",
 CellID->2122527548],

Cell["yvalues = Table[f[x],{x,-5.,5.,0.01}];", "Input",
 CellLabel->"In[40]:=",
 CellID->1469638919],

Cell[CellGroupData[{

Cell["ListArgColorPlot[yvalues]", "Input",
 CellLabel->"In[41]:=",
 CellID->2011887486],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQdYU9f///v8BAIBEnbYCSussKcMIaywQ25YKg4UJ4gstW5JcINbwb2o
/qy7FXG1Wlu31Fm1+lVxtfXbilvBwfmdgP+Wv0jIvOfG5v1EHiDk3Pf7c165
3ntz7jl2g0ZjQ//niy++KNWGX7DcceySktzxfAP4Q0Zh6YhhhUPyEgrLhgwb
UhI8qAf85VL47wn8J/oeqKWWWmqppZZaaqmlllqK07Vr11paWlC7ULyuX7/+
+PFj1C4Ur//85z937txB7ULxun379vnz5+Vs5OzZs1+06TND+tatW5okDZjr
M0P60aNHxjQKzHX37l3UXhSp169fu3gxYK5Lly7J006/3OzcKk/3KMu1a9cq
yBohNGZcSeYE1/CB9rPmzELtRZGqrJobP8Qxabxr8Zgi1F4UqQ0bNoSm0XtX
efYekClPO6YWBstvc3LX+3OzkhTljQhi+ThUnY4s3NOzZ3QAai+KVK+YgKl7
ek4+HensbY/aiyKFZSWVrvevbIw3MqfK3MiNGzcs6NRdAJt5J8HYwkCB9tCq
qalJl0La9Z637EWqjj7p3bt3qB0pRu/fvyfrkba/SF31nqdDIcGYqB0pTGYW
BuvvJKwDmAmdCrGUrZHa2tq4bDvI8wrAN7DQ+2wOyfbv3x8Ybf0NwFYDzNrD
BJ4joHakGDU0NDiyTOoAtgZgrtHWMCZqR4oRBM/UUr8e8CHPftl2EEvZ2iku
HZU/h9XOs0cKfdeuXYr1iUrTZ1T0LXNu5zlokMPKlStRO1KMVq9enZLr0M5z
RJlzxYwK1I4Uo7q6uvRhLu08J85hjS4rlK2diGj/eftC23lmT3KdJpimWJ+o
lNE7ufyrgHaekxd6Dhs1BLUjxSh/1JCShV7tPGd/FcDtnYzakWI0rXzq4Emu
7TwP2hcaHO0vWzum5tRvfkto5zlrc0BKdqJifaKSmydj44WYdp4HHQwLkrU+
RBPc/yw+GNbO8+gL0fYedNSOFCN+VsL0zQHtPE/8LcFIplO5x48f61O1jwOs
neeC81EMd1uFW8Vf8KRJW0fzaHNaO8/j7icY0CioTSlGpjTKt/cT23muaOZq
6WjCsKhNKUCuLNuvzkW18zwbYDpUbRk+NTh+/LhnAO1vnsvb6tPa2qoMw3gK
nh3b2BmcBPx2nmcATJtCevr0KWpf8gpG0KOQTgF+O8+zAGZsZyDzpQDiCCIH
9z/Hm7l/82wLsTx+XNp2NmzYwOvv8DfP02F9GNTbt28rwTKu2rt3b2SCbUee
bfxpp0+fRu1LXsEInv60jjwzE2xhWNS+5BVEzppBPQuwv3n26u8A4ZS2nYmT
xo8WuHXk2eGzuAS0YMGC/gVOHXlmyXEJiDiCEVKy7Try7FfAhGFR+5JXELnQ
aOuOPIcJ3MZPGi9tOxlZiVVfBXTk2WeE07Jly5ThGU/ljxoyZZFnR56DJ7tO
LZ+K2pe8mlY+tWCya0ee2Yu8hqr+pRuIXM4Ip448J30VkJQl9aUJv0Dnbaci
O/IcPoc1qqRAGZ7xFCcxZFVdSEee49b5pQ/go/Ylr/oN4M9d59eRZ15dSFhi
CGpf8qq4pGD8HFZHnnNOR7oEMKVtx9BI9+R/kzrynLwzOIYXpQzPeMqRabH/
SkxHnjOO9vIIcUftS171DGX97w+9OvI88EqsFdMCtS95xeVF1ewI6shz/p9J
uoZkqRqBJ8v6FNINgHXkue+FaHsvOyXZxk0kbY0rzdyOPA95kOAV54Hal7yy
sDI88SChI89FLTwNkgZqX/LKw8tu7/mojjyPkf6S1Llz5zy8zT7iecTTFJKu
lvKc46B79+7RLPRuAqwjz0WtvB5aPV6/fo3aneyC5jW1etxs5XXkuRTwKRZ6
MDJqd3KJrKt16WnKRzxbeJtBRCVvZPv27Ylc+kc8FwGMbKzz119/Kc+8svXj
jz8GhVp8xHMxwExdjK9evYraney6du2ak7PRLYB9xLNNmOXRo0dRu5NdEDYj
Y3IjwD7i2ZFLh4hK3s68efOGFzE782zha6bSl2pra2sz+tp15pkRZ6PSl2qh
+ag4m848O+fYb9y4EbU72XXmzBlPH7POPHsWM6uqqiRvp2DUkOnzPTrz7JjO
2Lp1q/L8K1vlgmklE5w78+ym4pciq6urBw5z7Myz10QXlb4UCXfCKRijM89B
CzzzCvIkbyclNeKr3cGdeWaVMOfMmaM8/8rWoMHZi1b5dubZd6Z7kSrfoDRm
bPGUGe6deQ5d7Zs9OBu1O9k1d+7c/GJmZ55jdgdHpEZI3g7Lg370fFRnnoOW
eEn1viCa2Gy/nQfDOvPca3NAkiqPHszKSly9OaAzz3EHw/yi/FC7k10FBUPm
LvbqzDP3XJSdJ0PydqhUncYnyZ15Zu8ODk8OV55/ZcvBwbzhRlxnnhNPRLj1
dEPtTnYFBbkeOhnZmWfsRpyFkzlqd7IrKSl88+7gzjznPEnRMdCRsBHRSFF9
UhPgdeY55UI0Q5r3BaHU2tqqqdnjj2ZuZ54zHyRQ5bjRErloNOrVBwmdee7X
zO2h1UN1R0V6eDBOXIzuzPMggJEoJAlHjZ4/f97Ly+yTPPd+nKxN0VZ2CiXp
wYMHlpb6jwHWmeeBANPQ1lDROUagbRJJ4wnAOvMMc+lb6cPgqD3KKD097XtP
Uj7Js5mX6YULFyRpZNeuXcnJ9E/yPABg2gbaT548UXYQZejYsWNBQRZd8Wzo
YHj9+nXUHmXRr7/+6uBg2BXPFsEWMDhqj7II7n4NDHSeAeyTPNOTbXfv3i1J
O4sXLy7IZ3bFs6mHqfzTLiHR5s2bszLtuuLZOtrm0KFDqD3KooMHD8ZE23TF
s322PQyO2qMsEn1I7WHaFc/MUcwlS5ZI0k5JccHsWayueKanMr755htlZ1GG
Zs6cOabUuSueHXMdV61ahdqjLFq5cmXuQMeueHYZ6wqDo/Yoi+DuNzWF3hXP
HnM8R5WOkqSddCzu6y1BXfHMLHCW8H1BNI0YPmDpYu+ueHYTsCZPnYzaoyya
PGli+RS3rnj2WeY7cMRA1B5lkeg4YSSzK56Dvw7mZHAkaSfAj3nqBLsrnlkS
vy+IpgROyLe7Qrri2W9tANYfQ+1RFvXry1u7yq8rnkP3hIUkhKL2KIvgccKc
mayueI46Fe0c6CJJO6Ym+r/dT+yK58CtPTmZ8crOogyx3GwvnYvtiudehyO9
IrxRe5RFEeFe3x8I74rn2MscWxYdtUdZlMHnfL0psCuek39P0Tfr/sb8169f
k3U037/FuuI58lS0k7/UdwcQQWQdrWdN3K545txMNGWYofYoi+g2Jjevcbri
Oe05T4uskqN8/X2dTv4U2RXP6SBDk6zZ7Sjfq1evMh2NxPCc+DCVQlO9jx5E
EyMbkVvf8Lvimfc2XUNbQ+UmrBBNJ0LSePMyrSue00GmjjEZxkftVGrRzCh/
3EsUw7MRs/tRvvv3749j24jhGQOZPUgar169wieUonT27FkfTzMxPPNBJsWa
qnIz20PD1paU1hZMDM9m3uYNDQ2onUonCBhJqwfMJYZnmzhGtxMO1NTUDOnv
KJ5nYxcTlRv9vmPHDiyZIZ5ny3CbH3/8EbVT6QQNhwVbiueZgTnC+KidSicI
mCvTWDzPjkNcIa7i25k44cvpk9zF82wdx1C50e/z5s0rHsEUz7N9X+f169ej
diqdNmzY0CfdTjzPzGKP+fPno3Yqnerr62MjrcXz7D7D78uJX4pvp3dm8saa
APE8Ow13r66uxieXolRYMGye0EM8z66TfMqF5aidSiehoHxisYt4nj3mBw4d
NQy1U+m0fPnyYQMcxfPsXxuRlN3NHKqhwe4/7Y0Qz7P7jICSsSX45FKU0lIi
d20MFs+z78qwzNws1E6l0+Dc7OVVPuJ5Dt4VHZHKRu1UOo0bWzp9gpt4niOO
J7uFsMS3Y0EzuHcpQTzPgf/LTuzufUE0ebozfj4cJZ7n8EMJ/qq2nEoM2//g
tjDxPEed49I9VGyiid6ZSZtqAsTznHA/i2oubu7clpYWLc0eoIkvnueI4yku
ga64RVOIKPraT2+niOeZ859MmoOKTcDiYEe7cSpOPM8pT3O0KZKOfieIgvxd
ju2JEM8zBgb1IIkb5Xvt2jVHhmG3PCf+0Uf8+4JoevToEVWfBB5h4nnmteT2
0OqhQssDQatw/9PyIE08z7DftQ1UbKIJczPqH5cTu+XZ0Encpba3b9++vFnQ
Lc8YyNPU0VShS9ANDQ0+LLNueeaDPIqtoQpdgr57966NJQX8iXXLs5mPpQpd
goZo6WhrgP9i3fKc/3IqhFZcW78XS8KzsYvZ5cuX8conr7Zu3cqLZ0jCs2U4
/fDhw6j9SqojR46EBVpKwjOd56xCE01AtFwcjSXhuQhM76YtyXi2TXKqq6vD
JZwCNHfu3NIhzpLw7DDQQ4VWwoVWB6Q7SMKzc5mfCk00AdFKirbFk2enfJ+F
CxfiEk4BGjksd6nASxKe3aYFT5g0AbVfSTV50sSpo10l4dlraWTuyEGo/Uqq
RYsWjeznhCfPHvN6jSzKxyWcAsSJDq5bEyIJz/61nLQclRkFndM7beN8f0l4
DtmbGhSnMnNBlxQVzJvkiSfPwTtTIlJU5hI908Hi1+9jJeE54liGe4gnar+S
KjSI9dO2CEl4jv21nwXTGrVfSZWaGLGjJhhPnqMv9qN7qMaK5+/fv9fU+J+W
62mS8JzwWx7FTGVGw5qZUH47nSAJz2kt+T20NFTlUqSHK/1ifQyePKe+LFCV
UeKNjY10KypoxCThGQOjNclaL1++RO26e0GTZG1NUS4JeMZAIZVuBEuB2rVE
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
vQ==
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[41]=",
 CellID->262983435]
}, Open  ]],

Cell[TextData[{
 "In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 6 we can use ColorFunction to color the graphics as desired, however, \
antialiasing does not work (but should be possible to get it working)."
}], "Text",
 CellID->1935645851],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ListArgColorPlot6", "[", "list_", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"intfun", "=", 
        RowBox[{"Interpolation", "@", "list"}]}], "}"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"Abs", "@", "list"}], ",", 
          RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{"FF", "=", 
             RowBox[{"First", "[", 
              RowBox[{"ListLinePlot", "[", 
               RowBox[{"Abs", "@", "yvalues"}], "]"}], "]"}]}], ")"}]}], ",", 
          
          RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ColorFunction", "\[RuleDelayed]", 
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", 
             RowBox[{"(", 
              RowBox[{"Hue", "@", 
               RowBox[{"(", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Arg", "[", 
                    RowBox[{"intfun", "[", "x", "]"}], "]"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"2", "Pi"}], ")"}]}], ",", "1"}], "]"}], ")"}]}], 
              ")"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Antialiasing", "\[Rule]", "True"}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListArgColorPlot6", "@", 
  "yvalues"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[42]:=",
 CellID->170049354],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3V+MXFUdwPET4cFEH4wvm5hINBt8Gzc8aIzjnyibRWKCOoYYrgJSWGox
LZktVfFPjtjuMt3tlp2k1HbpTgeh6T9aBqWitDVjSsV/KRMNLBLS9U98aUNr
lEYTHn7eO+cwvbkz9865c+895/c7OSeloc3ust9zPzNz72/vLh9cd3/l3ncw
xja/0/+tcte3PzMzc9eDX36P/4dbN23esH7T9D03b3pgev30zMfWXeP/5aP+
P//y/wn+Hdxyyy233HLLLbfccsstt9xyyy23rF4XLl2pLp02/Vnkv1wXrZVX
1x0PnRC/sn8oVMt10Vq5dP363N/9j7ChVbVsf14+f9F1EVqia7pZy9glHhHf
A+b/7tvO69MzvlwXreWfaeTS5b/7vfWG+Dg2PeRdF62VV5f/vrOdSSv35wdt
z+Ku2+sN1xVZ4qRlHzD/43zNolMy10Vria6VzF2zzRd7++OtlazZn+VWp9f1
1W7XhUtXTH9SOaxwl3d5zJquY796tec5S5d4LRb7c5tFlxjhLs91oV+iayVz
l/+O99UbYc/+M0Dun63+Fe7yXBf6JbrCnv0zh9E+zpZmLezZjlOOcJfnutAv
v+JbzdpK5i7/vZ5cK/U832bLJXO4y7O3y7Ooa29nciVbl7ioPAWs5/mLVlwy
+5cS4S7P3q4vWdT1zOWxlWxd4qIy7PmmzqQF+xPp8uzt+pxFXaeBrWTrEsO6
sOePd09dqI+AIl2evV1li7rCnkfrEmfd/Z6pj4AiXZ69XeK4+89vpj+1TEt0
9XtO2+W/y8Z6o98z9RFQpMuzt6tsUVe/57Qju+Ar5s1av2fqp2SRLs/errJF
Xf2e03b5b3+0M2ml531tz0rPkS5rPPtdGT2LIcnza6WI51sy31Btdomuk6Eu
z94u/7hPER/Z9bointN2ieHzX4BFPH+y7ZHeH9H1WqhLeP6UjV3+cf8o8ZFd
ryviOW2XGPr1ey4Rv8tOdPV7/rCNXWWLuiKe03aJoV+/5/d3T138R01xCYUu
0dXv+Tobu8oWdUU8X5dyxCrOt+M80x1piq44z5Z1lS3qGuhZvct/42q9EeeZ
7khTdMV5Hu0uRAxrYFfZoq6BntW7/Dfe2qzFeaZ7Sia64jxb1lW2omtbt2ug
Z/Wu4CunnUkrPR9ue1Z67u+yw7PoyuJZDP3OrZUGer6J7Ki21zXQs31dZeJd
0PX8Urer3/MnlEfQYuj3JrCBnm8gO6rtdQ30bF9X2YquK92ufs/qXWLoF+f5
Q2RH9L2ugZ7t6xLH/X1kR9CiK86zepcY+sV5vpbsXbW9roGe7esSx/0a4l1x
nq9VHq2LM+1kzxTvFu51JXi2qSvsmeIIWnQle1bp8t9s5pFGsmeKI+heV4Jn
m7rCnol2DfWs0uW/2dxKLdkzxVOyXleCZ5u6wp7pdiV7Vuny3+b4856VnkWX
fZ4Hdlng+fgvvYyexTBz9ZVSgudK/XGi+yO64jxb1tXzPNXcQbcrwbNKlxj6
wX9Ygudy6zvk9ifcFefZsq6e54n23VS7/s0SPKt0iaFfsufxzhfI7U+4K86z
ZV09z4S7Ej2PrZWHdomhX7JnBu8lN9IMd8V5tqyr55lwV6JnlS55jq3gmdao
NtyV7Nmarohnkl0KnpNH0MEwc7Gh4pnWSDPclezZmq6IZ3Jdip6Tu4Kh356a
imdap2ThrmTP1nRFPJPsUvCc3OU/e585NWml5+Mtz0rPcV3UPQddwzxPNevD
v+S9xoZ6rtSfILQ/cqj+YmmoZ39/rOkKe6bVBWL47HcN88zg+uEfS8HzRHsj
of2Rw8y3uxI829QV9ky1S5fnsbWbCe2PHGYqeLapK+yZapcuz/7HuYPOD3aQ
w0wFzzZ1hT2LLioju6tdej1TuatWXg0pe7ajq98zlZHd1S69nqn8YIdgSLvQ
UPdsR1e/5+rSadOfstK62qXXM5VTsmD4c9BT90yoa7lRVfdMr0uj50r9AKH9
WT1ZUvRsTVfEM8kujZ7LrVkS+yOHP+eYomcqXWL4nNAV8UyyS6Pn8c40if2R
wx9lz9Z0RTyT7NLomcFHSNyFKIc/yp6t6Yp4Jtml3TP+0Za8Dkrp2YKugZ6J
dWn3jH+0FQx/tjfSeraga6BnYl3aPeM/JQuGdU0vrWcLugZ6JtG1vLdqxHOl
fpDE/qy2Sqk829HV75lel17P5dY88v2Rw7o2S+V5ov19C7r6PdPr0ut5bO1O
5Psjhz8pPdvR1e+ZXpdezwxuRH7XVnXp9Aie7ejq98zgs8S6THjGfNeWvAIa
yTP1rjjPlLpMeMb8EuZ/bnM7a6N5pt4V55lSl3bPlfoh5PuzerA0gmf8XWce
nxzBM7Eu7Z7LrZ1o90deLD/LRvBsQddAz5i75J1I4S7tnsc7W9Duj7xYHsmz
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
YS0=
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[43]=",
 CellID->441246519]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The package VQM`ArgColorPlot", "Section",
 CellID->1933453141],

Cell[TextData[{
 "The (non-standard) package ",
 StyleBox["VQM`ArgColorPlot", "InlineInput"],
 " provides additional functionality"
}], "Text",
 CellID->1971878030],

Cell["Needs[\"VQM`ArgColorPlot`\"]", "Input",
 CellLabel->"In[44]:=",
 CellID->1386409706],

Cell[TextData[{
 "All symbols defined by the VQM packages start with the letter \"Q\". In \
particular, the package implements ",
 StyleBox["QListArgColorPlot", "Input"],
 " which corresponds to the command ",
 StyleBox["ListArgColorPlot", "Input"],
 " defined above. But the command defined in the package accepts the standard \
options:"
}], "Text",
 CellID->1190358792],

Cell[CellGroupData[{

Cell["\<\
yvalues = Table[Tan[x + 0.3 I],{x,-5.,5.,0.01}];
QListArgColorPlot[yvalues, Frame->True, Axes->{True,False},PlotRange->{-.5,4}]\
\>", "Input",
 CellLabel->"In[45]:=",
 CellID->402561692],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 237}, {
    360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 237},
  PlotRange->{{0, 360}, {0, 237}}]], "Output",
 ImageSize->{364, 237},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[46]=",
 CellID->769211742]
}, Open  ]],

Cell[BoxData["          "], "Input",
 CellLabel->"In[47]:=",
 CellID->1195827430],

Cell["There is a variant which corresponds to Plot", "Text",
 CellID->2119647384],

Cell[CellGroupData[{

Cell["\<\
Timing@QArgColorPlot[Tan[x + 0.3 I], {x,-5,5}, Frame->True, Axes->{True,False},
PlotRange->{-.5,4}]\
\>", "Input",
 CellLabel->"In[48]:=",
 CellID->307362805],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
xcXFxcXFxcXFxcXFRaf/A54U10c=
    "], {{0, 91}, {203, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{203, 91},
  PlotRange->{{0, 203}, {0, 91}}]], "Output",
 ImageSize->{207, 91},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[48]=",
 CellID->290192854]
}, Open  ]],

Cell[TextData[{
 "Further documentation is available via ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s Help Browser, provided the VQM packages are properly installed."
}], "Text",
 CellID->1132108964],

Cell["Moreover, you can get help in the usual way:", "Text",
 CellID->650245528],

Cell[CellGroupData[{

Cell["?QArgColorPlot", "Input",
 CellLabel->"In[49]:=",
 CellID->132309513],

Cell[BoxData["\<\"QArgColorPlot[f[x],{x,x0,x1},opts] is used\\nlike the usual \
Plot command. It gives a two-dimensional plot\\nof a complex-valued function \
f of a single real variable x\\nin the range {x0,x1}.\\nThe plot shows the \
curve Abs[f] with area between the curve\\nand the x-axis colored by \
Hue[Arg[f[x]]/(2 Pi)].\\nThe default options of Plot are changed to \
Axes->{True,None},\\nFrame->True. Package: VQM`ArgColorPlot`\"\>"], "Print", \
"PrintUsage",
 CellTags->"Info493734618833-9791720",
 CellID->14400426]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options[QArgColorPlot]", "Input",
 CellLabel->"In[50]:=",
 CellID->1482449837],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "GoldenRatio"]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ClippingStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Compiled", "\[Rule]", "True"}], ",", 
   RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"DataRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "None"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "None"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelingSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#1", "&"}], "}"}]}], ",", 
   RowBox[{"MeshShading", "\[Rule]", "None"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Opacity", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"QBottomLine", "\[Rule]", "0"}], ",", 
   RowBox[{"QBrightness", "\[Rule]", "1"}], ",", 
   RowBox[{"QPlotDown", "\[Rule]", "False"}], ",", 
   RowBox[{"QSaturation", "\[Rule]", "1"}], ",", 
   RowBox[{"QShiftPlot", "\[Rule]", "0"}], ",", 
   RowBox[{"QSquared", "\[Rule]", "False"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", "None"}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
   RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], ",", 
   RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}], ",", 
   RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]}], "}"}]], "Output",
 ImageSize->{581, 377},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[50]=",
 CellID->642320949]
}, Open  ]],

Cell[CellGroupData[{

Cell["?QSaturation", "Input",
 CellLabel->"In[51]:=",
 CellID->1271691129],

Cell[BoxData["\<\"Option for QArgColorPlot. QSaturation->s causes the \
colors\\nin the plot to appear at saturation s. Default value is 1. Package: \
VQM`ArgColorPlot`\"\>"], "Print", "PrintUsage",
 CellTags->"Info513734618833-9791720",
 CellID->23335248]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples for using the ArgColorPlot package", "Section",
 CellID->559656922],

Cell["This example shows a complex-valued Gaussian function.", "Text",
 CellID->175514194],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QArgColorPlot", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "6", " ", "x"}], "-", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[52]:=",
 CellID->1372011227],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
I/Xo8yEorTVi9uSlRMdBOql/n3Wez9znAwcSMMOiFaLbnGN5r53+A58V8fn8
SSq0FmN1tCa4H470LnxW0GfmcPc6sN9dOBHXvD26CD4r7jN7AR3psCKWNx+K
zWC0HD6r4TNLgtJhQshcNZbLPAE+q+cz+yWUVh23zBO4UkMN57P+63VePrfH
3Aql1UNc26qMJDaUjOiz4fKZDbq2PfpRKK04ojQnybw8iU0g+Bw2nxmNbY9+
Vlx8FPEUQZa5vSqGLSf4HGafGeUy+qe4BVhWGiKltib38+5/xN4l+KyVz076
NNtiR98jaEQsp1rLMq1lbdwN+Ky1z6eIbXB9JziCuk9wk0Udgx95J2JsjMzh
s+HqG919riW25tLXgmMOsVf49RHr5fhxtyPpYUZLGJnGZxPks/B5GrHbYjtg
tR/kQZ+0iaK1gtiN1zOCz7r1OZ7fgWg2MvW/8l1DD4T9OJClTY1s7xNbSWwS
fDaEz/R7RovYyJd/sJp3FCNNbO6wXLVwB3KhPaa+ndhXxGrgs+F8pn8xOsw/
7dejbTWet5UnlR5K1tKVVw7+iXY2tnqGsHyMeaI5ZmoHPcOoktHnziB8dkkC
nxX2WWpqUD4T20asiNiUkY453W+3iG5lDQ/EVX4Oj1DPg7dBPric4uBt42fy
pOWu8kOuSPg6+MkLLLXLE5ufi+6cQiyuP4viyj7Iuvvs2m5IYZ/5mYH7LP3Y
wHx2NVVhn6WfGbDP0o8NzGd+puI+S03tyWdisT9jNM51bwscSUtduzDxk/3o
wf3hBxeJG8XP5HbxQ5jmqR8/PM305XM6AManR7dl+UN5EAAvfF1tEBywVFvg
MzAT8BmYCfisBxoaGrRuQu+cPXt2z549nZ2dWjfEH0bx2RAX05PAFa2urtb/
XTh48ODixYvb2try8/Pr6uq0bo5P9H8lmXEupkzginZ1da1Zs0b/d6GgoMDp
dIrXGRkZ2jbGD34KSvrBKBdT0CdFxWn6vwUy/H/VLVu2aN0Kk2CIi+lL0QsX
Lpz3gL9jtVpPnTrV48na0r2pgt27d+fm5mrYMDNhiIvpR9HNmzeXe8C6TRdq
0FwfdG8qp6Kigj8otW2YaTDKxQxOUV3J3CMOh2P9+vVat8IkGPFi9klR/fus
20eJETHixTRKOwEAAAAAAAAAqM3/AUhOXeI=
    "], {{0, 157}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[52]=",
 CellID->335934841]
}, Open  ]],

Cell["\<\
Most of the options for ListLinePlot can be used also for QArgColorPlot. In \
addition, we can influence the Saturation and the Brightness of the colors \
for the complex phase:\
\>", "Text",
 CellID->230149189],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"QArgColorPlot", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "6", " ", "x"}], "-", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "th", "]"}], ",", 
        RowBox[{"GrayLevel", "[", "0.5", "]"}]}], "}"}]}], ",", 
     RowBox[{"QSaturation", "\[Rule]", "sat"}], ",", 
     RowBox[{"QBrightness", "\[Rule]", "bri"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sat", ",", "0.5", ",", "\"\<saturation\>\""}], "}"}], ",", "0",
      ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bri", ",", "0.7", ",", "\"\<brightness\>\""}], "}"}], ",", "0",
      ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"th", ",", "0.025", ",", "\"\<thickness\>\""}], "}"}], ",", 
     "0.001", ",", "0.05"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"Needs", "[", "\"\<VQM`\>\"", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[53]:=",
 CellID->499371276],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bri$$ = 0.7, $CellContext`sat$$ = 
    0.5, $CellContext`th$$ = 0.025, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sat$$], 0.5, "saturation"}, 0, 1}, {{
       Hold[$CellContext`bri$$], 0.7, "brightness"}, 0, 1}, {{
       Hold[$CellContext`th$$], 0.025, "thickness"}, 0.001, 0.05}}, 
    Typeset`size$$ = {252., {77., 84.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`sat$5189$$ = 0, $CellContext`bri$5190$$ = 
    0, $CellContext`th$5191$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bri$$ = 0.7, $CellContext`sat$$ = 
        0.5, $CellContext`th$$ = 0.025}, "ControllerVariables" :> {
        Hold[$CellContext`sat$$, $CellContext`sat$5189$$, 0], 
        Hold[$CellContext`bri$$, $CellContext`bri$5190$$, 0], 
        Hold[$CellContext`th$$, $CellContext`th$5191$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      VQM`ArgColorPlot`QArgColorPlot[
       E^((-I) 6 $CellContext`x - $CellContext`x^2/2), {$CellContext`x, -4, 
         4}, PlotStyle -> {
          Thickness[$CellContext`th$$], 
          GrayLevel[0.5]}, VQM`ArgColorPlot`QSaturation -> $CellContext`sat$$,
         VQM`ArgColorPlot`QBrightness -> $CellContext`bri$$, 
        PlotRange -> {-0.2, 1.2}, Frame -> True, Axes -> {True, False}], 
      "Specifications" :> {{{$CellContext`sat$$, 0.5, "saturation"}, 0, 
         1}, {{$CellContext`bri$$, 0.7, "brightness"}, 0, 
         1}, {{$CellContext`th$$, 0.025, "thickness"}, 0.001, 0.05}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{295., {150., 156.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(Needs["VQM`"]; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 ImageSize->{54, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[53]=",
 CellID->685634315]
}, Open  ]],

Cell["\<\
Next, we illustrate the usage of QListArgColorPlot. First, we create a list \
of complex numbers.\
\>", "Text",
 CellID->230361853],

Cell[BoxData[
 RowBox[{
  RowBox[{"mytab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "x"}], "]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "x"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[54]:=",
 CellID->1926131477],

Cell[CellGroupData[{

Cell["QListArgColorPlot[mytab]", "Input",
 CellLabel->"In[55]:=",
 CellID->1323239061],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQ10XMV96Cckfc1pSJ/eSXuU5p3XqmxOktN0Y5G0aYMKUaijAI8kSJiv
5VN8yLaQsHaFsQnGRkaSFxuw1oAThFlE+IhJjCI7xQITLyJyvOBKWE6K/bLh
sS+y+o5aLzh+T13VFGk6d/+zy2Z3tbofM3Nn5u7/2Huurla7d2b+8/t/zdz7
5zeuamo5AyHU+VHy0tS85muhUPOdl1aRHy67rXPl8ttuufnC226/Zfktob+9
8cPk5CT5v+JDCBnH2KK0tLRY/ZOKVKQiHpcKNypSkYrkZGpqquDM3Nzc2NhY
wckKNypSkYqArFy5ct++ffln5ufn29vbp6enW1tbZ2dnc+cr3KhIRSqCMyg4
ePBgATd6enpmZmbIQTqd7u7uzn+z6OurSEUqIqUcPny4gBv5fFjouCIVqYiX
xRI38kXcJWL8fOx/Xdf1AvkX7Nsv8ntdl399999Ik6HtpBPcvhyh0j80AQ3v
GYi7fS1C5dU3JnPaThTA7cspLcXc6OzszB23tbXljl3xN0i/QR/m//OIIuWI
kf/P7YsSISUH/c23T7h9XSKkuOFy2spiboyPjw8PD5MD8ppfVRHPjZz+nHky
gfAp9B8YTeOG7XEvoAOgMVh/G0Z/jNGHcRU6do7fC+gAa9sUeRHh4wj/G0pj
NIU9gg5o5mB9G0ZV+AyE/wgNLgvIOej53JicnOzq6iIHfX19hBLkNf+d4rkB
PYbwGMLJHDfQUdywLa633w4u+mD9Gow+m+MGPgudOK9aTi1iJWApmiJ7ET6S
zw10hCqDtH67c4EGnqj6Oka+HDfwZ9HosqVKG0rB3CAdlfE0XirmBjqAmzbF
dJ0+MHdCwZ0YnVPADfxX6NhlfqW1qLxkLUWsmBvoFawxM8FSjNZ2YPTXBdzA
X0G9nWF13S2R3IC5Uzc0hPC+ktxAu7XVItoudHFJbuBvoN41YS0bDnOnOjm4
EDfO/EFaS2ZmLcUPMfpGSW7g/4nU1XaR3MjanR+U4Ybv4ePqQnghgej+WM3t
ZbiBr1JYi8pIJkLZg/CuhbiBnscNm+JaNjxjKQJluHHiRiNEJWh1+2ItizBu
EBRk7M7j5bmBntDQ5cjYnV0YXVeeG4N3BDQL9iEsRbi/PDdQP5a2xGBPwNno
b+wvzw18HQptiKqo7cK4kXU2HlmUG9WbU+SdxEaLuTDeAo46RsFFuYFv1c3l
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
8uW588XcoKZHO270Ny5e1DZMT3dCM24g3LVoloxCVUdulB90WoTdiDXjhm/i
e5a4kc+BkjHInj17du3aVeY91PRox43R2sXNrmF6elJacqN8bsfIhG+I6seN
UHCRlZO0CKsdN848eb+lUmx5bhw4cKCzs3Oh9+dUSEtunKhaX74nqenZhLXk
RvntOcY2xrvD+nGjv3GRUiytoGnHDTIzLJVi87HQ1taW/6udO3eSaKXg/S2/
K6BCofVR/bhB9LJ8T1LToyk3yk8fo4J2Z0A/bozWblm04Rpzw3wpdnx8fHh4
mByQ1/yqysjIyPbt24vfX9Lf6F0X1pUbZXqSmh4dudEUKffQOrqNcbVfP25g
FCrvZBpF2HtjunLD0m76vr4+QgPyCj9OTk52dXUV+xUgJbkxuCagKzfKTB9q
enTkRt3Qc2UaTrcxBpGu3CjjZBoVtN64rtzgt0ulgBvU9IT83uRGU3dMS274
JgbKNJxW0PTlRhkn09jG+MBxLblR3sl0KAXcoKanHWnJjVDwR+W5Ubf5iJbc
QPjhMu46raDpy42FBp1uY9yW1pIbdUMcH4hQwA36BA1NuTFYX25/sWF6+o5r
zI2F3HU6s7zHDVpBI+OjIzd8E9aWflmSAm7QHfSacmO0duMipmd7WmNuLOSu
GxW0u6O6cqO3ecEYDaykrtwgM8PSEg5LUsANCmdNuYHRzQttdKI76B/FGnNj
oeljZMI7ArpyY7B+80INp9sYteaG+afnWJJiboTWRfXmRsmepEVYr3Lj2HK/
rtw4VrO6TMO15wan3fTF3BhsD+jNjZIbnagK6cuNuqHSN7+i2xivR7pyA6Mb
FnIyjSLs5rje3OCU4ihY0WGYnpv9enOjZE9qzw3fROkHqdAirO7cKOlkGtsY
H05UuGFD8v0NWoQlHaQvN0LB0iugDNNzf1xjblQnS1flaBFWd24s5GRWP57S
mBt1Q7yWcORzg5oerbnR39i3EDeWbE9ozA2Eny1ZiqUmSXduFA86LcL+AGvM
Dd+E2cd/WJV8blDTozU3RmvXLMSN6idT2nOjOEtmZMK/E9WbG6FgiTsl0m2M
WnPjzJO7OJVi87lBsaw1N05UXVfck9T07MLac6N4o5OxjfH2sN7c6G8scesV
WkHTmhtkZpTfnsOKG4bp0ZobGDUV9yQ1PR7gRvH0MSpoLQG9uTFae3vJhnuE
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
UpGKVKQiFalIRSpSkYqYlP8EvfLqeQ==
    "], {{0, 226}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Output",
 ImageSize->{364, 226},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[55]=",
 CellID->322364724]
}, Open  ]],

Cell["\<\
If, like here, the complex values come from the discretization of a function \
of a real variable x, we want to have x-values on the horizontal axis, and \
not the index of the complex list. This can be done with the option \
QHorizontalRange which specifies the range of x-values on the horizontal axis:\
\>", "Text",
 CellID->576771656],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListArgColorPlot", "[", 
  RowBox[{"mytab", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[56]:=",
 CellID->60039834],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 232}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 232},
  PlotRange->{{0, 360}, {0, 232}}]], "Output",
 ImageSize->{364, 232},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[56]=",
 CellID->2030158534]
}, Open  ]],

Cell["Here is another method to achieve a similar result:", "Text",
 CellID->2071984284],

Cell[CellGroupData[{

Cell["\<\
QListArgColorPlot[mytab, Axes\[Rule]True, \
Ticks->{QNiceTicks[-2.,2.,0.01],Automatic}]\
\>", "Input",
 CellLabel->"In[57]:=",
 CellID->245041436],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ddddufMm4g0woQcSPtm4wWH6wFWk4sb5mYXHrHM0qIQ/jpFs3OCj9BWNcam4
4WfgLLq7uwkNyE/4KwFFe3s7Obj//vvJ+XA4nP/LpnemwFjk4UYzl5ZK2u80
xqXixnlcWioQaDmWGw11E1Jx40uid6mY4AaYkGzcuJdLlYxc4it1ExJyg3W4
DjNUNm7cxr6lAtH1uUtSUnFjmehdKia4ASYkGzf2s3+XC5jQ55akJOQG6+lD
Pv+6SFQ2btzH3llAJZzoR0JuCNylYo4bxIRk48Yz7FsqYEKfRVg2blzMvqVC
Pn9Db1g2bsTY998hupaTGwJTFXPc6OoPyskNpi0VMCEJufEV9rtUyOfvSfjk
5AbTLY0wPSXkBgdnUUbMcWNfwicnN5g+Sfh8CblRz3iXClTCf4CRnNxguqUx
3UwJDkrIjfOFvvirUm6ACT2fHYtU3Ghh3FIBE5KQG2cxrpJBgiYtN1gr/dy6
CQm5sVTod6lUyg0wITm5sZPx6/HJh9fXTUjLDXZVMkjQ5OQGU2cBlfCzq5IS
cuPjGaVzWC67oFS6UhS+M0VObjzHsqUCJlRblZSWG+ymD3y4nNx4mGVLBaLr
j2b0Iyc3RLVUKo03wITk5MYRli0V8rHkw6sRdiY3NvaG5eTGEEtnAYGWzNwQ
laqY4MbNvWGZucGIwGBC0nLj8yyrZOmn+mxATm68zNJZwMR0uVEsJrixZ2yp
zNxg9CThk6XlxqeYVckgQXvydZ/M3GDkLMgnXxQclJYby8S1VCriBpjQ4ZMe
abmxmlmVDExIWm58iNnX00Ml/Ngckpkb7JT+5ca4tNw4S1xLpSJugAmRsUjL
jR3MNiykmykNRyXnBosVUJCgycyNNSydRXVVUlpufJCZs1hUKuIGmJDM3Ohn
Vl0nH+urSkrODRbLZcGby8yN7oYxFkqH6LoKYcm5wfl7ckEq4gaYkMzc+Amb
DQvQj/tLhCXnBovpQz5zTXdUZm7sr5lkMXCIruXnBucvVQeplBtrI1H5uWE7
gcGEJOfGhWw2LJDP/M5gQGZuHEdzLJwFRNfyc0NIiaNSbuyKBeTnhu0EBhOS
nBufjF3CiBuHfuSTnxu2OwuYkpJz4wJBu9uMrxeFdO/5hE9+btj+JOEzJefG
hxP/bPvAIUH7318j+blh++428pkXhgYl58aZXN4uWyzG4w0wIRiLzNxYE3yG
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
3NzIyEjxeW4DL3UD/C+nva5LXZH/wE+dOnX48OFUKmXLp4nlxqpVqw4ePFhw
sqWlZXdG4vG4wNtgJPPz862trdPT083NzbOzs/n/xGfgZW6A/+X01nWZK3Ie
+CuvvLJhwwaCr40bNw4PD1v/QIHcIJcmQyh4pG+88caePXuE3wY76ezsnJmZ
IQeE/B0dHbnz3AZe6gb4X057XZe6Iv+BEy2QqA+OV65cyfPSLOTIkSMFj7Sv
r++mm26CzvI777wj6jbYST6o84+5DbzUDfC/nPa6LnVFIQMHOXDgwN69e3le
0YqQh/PrPMmdL36kr776KknEyMFbb71FAjxRt8HuiqXmEdOB54s83OA25HyR
gRtCBk7k0KFDbW1t3C5nXR555JHePMmdL69E263a3G3Ye8V8xZEkd8H/i+l0
NnID/C/HLV+WgRv5wm3gu3fvJtkKn2uxluJHunnz5sOHD5OD1157bfv27aJu
g52Mjo4ODAyQA/Izv8vAbeClboD/5bTXdakr8h94LBbbuXMnhwvxkdwjnZyc
bG9vh5OQ+m3dupX/bfCR7u5uMkDyE/6aGzu3gRfcAOfLOUrXWA4jt2VPiiuu
uOKKK6644oorrrjiiiuuuOKKK6644opO8v8BEo/g4w==
    "], {{0, 226}, {360, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 226},
  PlotRange->{{0, 360}, {0, 226}}]], "Output",
 ImageSize->{364, 226},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[57]=",
 CellID->1654297402]
}, Open  ]],

Cell["\<\
We can also plot a part of the list, corresponding, for example, to the \
values in the sub-interval {-1,0} of the horizontal range {-2,2}:\
\>", "Text",
 CellID->1062714988],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListArgColorPlot", "[", 
  RowBox[{"mytab", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[58]:=",
 CellID->429311217],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kDTz/+8cxEk=
    "], {{0, 230}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 230},
  PlotRange->{{0, 360}, {0, 230}}]], "Output",
 ImageSize->{364, 230},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[58]=",
 CellID->305657705]
}, Open  ]],

Cell["\<\
If the \"sub-interval\" is larger than the horizontal range, the list will be \
padded with zeros:\
\>", "Text",
 CellID->1952558424],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListArgColorPlot", "[", 
  RowBox[{"mytab", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[59]:=",
 CellID->951822361],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Dx2Uqrw=
    "], {{0, 232}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 232},
  PlotRange->{{0, 360}, {0, 232}}]], "Output",
 ImageSize->{364, 232},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[59]=",
 CellID->408164311]
}, Open  ]],

Cell["\<\
If you want to combine a phase-colored plot with an ordinary plot of another \
function, you can use QCombinedPlot:\
\>", "Text",
 CellID->152785513],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[60]:=",
 CellID->1623158826],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV9oW9cdx92khFBKCX1ZHudCH0fzVNK3DfqSUkrdZRQG9bBbS7MmeTgK
zMMmrodVhoaH8zA/ZDC6Nwd7pngUj8A2d/XsoVlJX0yXefTBM0RbxkiwK82b
Je0X/5bTO139Obr3/Psd/T6ciuuTW/n66Ht/5/s759yj/uHvvpE41dfXlz0L
L28Mfe9rV64Mff/r5+CHb4xlR5NjI+9cGrs6khy5cnH4NFT+BP57AP89Oq67
yuDMh1BsX4UaEomE7UtQQ+79LW8+FMPc+OATb5oucYLtq1CAT0HGPNB0f//n
57avQgF+iLl+8olAiLZ9FVSB1oMobfsqFOCHniG2wCey89l92xdCFW96Nz/0
zOY5Jt5YaD/07E14sYgfFtqPfJDNc3z8sNAeiJnNsxL86OM80DObZyX4YaE9
0LMfgcUFPLDQfujZA+PnAm625NHRUaFQKJfLDfXVanV7e7uhkno+CLbZg6ji
CA72dDs7OxMTE/v7+1NTU5ubm6K+VqtlMplSqZRKpSqViqgnLeY6m2elOGih
c7kcxGE8TiaTwfrDw0M4gLg9Ozsr6qnr2cGQQhpnO7vV1dXl5WXxY1C3rY4p
Au3/i9/8yfZV+IObFnpjYyObzQZrvNQzmmfbV+EVDvZ3i4uL4C4aKoPyTqfT
4jjxGEMXpxQ2z8pxzUKvr68vLCyE64vF4traGhzAa3CUg6iSEWj58flf274K
33BqsjXx/+zt7c3MzOA/zc/PQw28Npxv4zLVwOZZB25aaEno6pnNsyYctNDy
0NUzm2dNfHR7j27D0k0G2TzrA9oWVG37KqJAVMx1Ns86oWs5iOqZdJ/oPtDx
EW1eonqmG0BIQDdc0NUzm2etEB21o5gP8gNWBiDaA5ITMwBpIMWmpoVrE9+S
UNQz0dBBDmfXjraBqJ55dwIDULTQ5PTMD1gZg2I/SC4f5GluY1DMU2iJuc4j
dWYhN/FNUc88zW0McpaDlp7pzlsRhdzENy09kwsX1HEngOzv7zfU3H/MwcGB
qKSVD7J5No8Lo3ajo6O3bt1qqEyn04snbG19MXhLSMw8zW0F630iSHRzc7NB
z/fu3VtaWmp6sqnriguP1FnBhYnvO3fuNOh5ZWVlcnIS3cXx8bGoJ6Rn64Gi
Z7E+ahfW8927d4+OjuDgwYMH4EZEPaH9N3ikzhbWI0lYz0Eo7o/kTqLdg1gf
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
rGfGJwg98cEwHWExMz7BemYYhmF6nP8CFuDFtw==
    "], {{0, 149}, {240, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[60]=",
 CellID->954806459]
}, Open  ]],

Cell["\<\
There is also a \"ListPlot\"-version of QCombinedPlot, where a list of \
complex values is plotted together with an ordinary function:\
\>", "Text",
 CellID->1668806187],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mytab", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"QListCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mytab", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[61]:=",
 CellID->1489155089],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV9oXmcZwLM/lDHGKLuxl+tgl2O7GtvdFG9aZK6zMhisM92aNGlSbVO0
0kgXaaZEqulNL6bIEMHUdsWVjUpho2JJJSarN2GbFYUYaGdVVpolRpN+vu2z
vDs75/tOzne+c96/vx9n4fQ0zU6+c97feZ7n/XM27/zmsz13dnV1Dd2jvjzb
/Z0v7t/f/d2vbVR/+Preob7evbte3rL3wK7eXfuf2HmXOvg39d/uO7q6bu03
4uC13/xpx8jbts/CJ3p6emyfgjeMvn6RuytU1JX9x78/sX0W3oA3iqNuLbwR
KurKqqjD9ll4A94oDrdWwPBQaAu8URAVxBLKBgwljrbAGwWhuBE8PBeK07OG
7RNxHeLY4CEPLQ7GKIi6qVTIYfssoEZ4NBQHbxRBihuzf71m+0SgRihxFAdv
FIHiRgyo5wIljoLgjSIQwUYCJY6C4I0iUNyIBB4QBcEb60JxIx5ISAuCN9bl
jXc/4F6KhN+9N8e1LgKDN9aF2DUq1LVWTwrbZ+E6SGNdKG5EBY+JIuCNfChu
xMa+8Xfi9Mby8vLU1NTi4mLq+Orq6vT0dOog3siH4kZsxFnimJ2dPXjw4Pz8
/PDw8OTkpD5+8+bNwcHBq1ev9vf3Ly0t6eN4Ix+i1ghRV1zZw/ZZGGV0dFTF
FbLf29ubPL6wsKB2VBxy5MgRfRxv5KNuIRW42j4LMErMD4szZ86cOnVK/zHp
h1b7kILiRpxEW+K4cOHC0NBQ8kiON5hK3wqKG3ESZ4ljYmJCZSWpg0mNDAwM
6H10kUPM8WrkxFbiOH/+/PHjx7PHZ2Zmzp49q3bU12SvCt7IgeJGtMT2yOj5
PHNzcyMjI/JX4+Pj6oj6mvp+G6fpBxQ3oiXaEkdB8EYr4kxyQeDq54M3WsET
J3JiK3G0Bd5oBcWNyImtxNEWeKMVzIuMHALOHBi50RRZatL2WYBNKHHkgDSa
wrpP0KDE0Rq80RSKG9CgxNEavNEURm5AgxJHa/BGFqalgECJoxV4IwvRKWh4
o0pT8EYWFhQFDQ+RpuCNFKy5AUnoWWsKi2+koLgBSaTEwUtjU2CMFMSlkIIS
Rxa8kYLiBqTgUZIFbyShuAFZVLCBN1LgjSQUwaAplDhS4I0kRKTQFEocKfBG
Em4PaAoPlBR4Q8PceWgFJY4UDN7QUNyAHCiYJ0EaGubOQw7ksEnwhoaFASEH
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
    "], {{0, 223}, {360, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 223},
  PlotRange->{{0, 360}, {0, 223}}]], "Output",
 ImageSize->{364, 223},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[62]=",
 CellID->1434346029]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mytab", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[63]:=",
 CellID->1308246759],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 214}, {
    360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 214},
  PlotRange->{{0, 360}, {0, 214}}]], "Output",
 ImageSize->{364, 214},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[63]=",
 CellID->1549771828]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QListCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mytab", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}], "-", 
      RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"QHorizontalRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[64]:=",
 CellID->52239396],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnc1rHOcdx9X20qNvubp/gCHHHlvIpcem9NJDIKGRu2KVYm+hKQqIBW0p
AoFOOfhQfFRQLIyhCAQxEQlaWPTii2sLQQ6LQCKCIJAiISpp+7Me/OTxzOx4
Z3Zmnpf5fPhmGY1G3nnZ+eR5nf3VR399f/LnExMTrV/Ky/sf/v239+9/+I8/
3JIf/vhJq3H3k4///LtP/vbx3Y/v//qjX8jK/8p/f/nZxMSr5cHYTE5Ojv+P
AECtwBsAoNnf34+sOXrNycmJXok3AEDRaDTW1tYiK5vN5tIN3W5Xr8QbADC4
UcHGxkbEGwcHB8vLy4kbV7VfAOA0Ozs7EW+srKzMzMxM3nB5eanX4w0AUMS9
sbu7e3FxIQvHx8dSi9HrJ9+k6h0FgBL4/ocfP2j/5/l3R5n+Ku4NE9MPuAIg
MJQ07i1+lfUP496YnZ3t9XqysLe3t7CwoNfjDYDAEGlIcvyh6Y1+v99ut2VB
tW/Mz8+bW+INgJBQ0pAiR6nvgjcAgqHzsCvSWN/ul/1GeAMgDB49fSnSePD4
WQXvhTcAAiB3W2g+8AaA71QsjQHeAPCf3B0oucEbAF5TvTQGxnjRit8XAMZH
6iY5xoWOD8YA8BTV6/ro6cvq3xpvAPiI6nWtsi3UBG8AeEf1HSgR8AaAXyhp
VN8WaoI3APzCujQGeAPAK1yQxgBvAPiDrV7XOHgDwAss9rrGwRsA7lPlXNdR
YLwogOOsb/ft9rrGwRgALmN9qEYieAPAWVwYqpEI3gBwFjelMcAbAK5SzROG
84E3ABzEnaEaieANANdwaqhGIngDwClcG6qRCN4AcAe7T9UYHbwB4AhuDtVI
hPGiAC7gkTQGlDcAHMDZ8V3DwBsA1vFLGgO8AWAbl8d3DQNvAFjER2kM8AaA
PRwfFJoC3gCwgpKGy4NCU8AbANXz4PEz9weFpoA3ACrGl0GhKeANgCoJQBoD
xosCVIiDTwrNB8YAqAa/RpKngzcAKsC7keTp4A2AsglMGgO8AVAyfkljf38/
subq6mpzczOyEm8AlIpH0mg0Gmtra+aa6+vr6enpw8PDqamp8/NzvR5vAJSH
R9NPRAUbGxsRb3Q6ndPTU1k4Ozubm5szN656/wDqgUfSUOzs7ES8Yfph2DIA
FIV30hhk9Mbz745U5BhVqttRgBBR0vBuomvcG61WSy83m029PPkm6nhHyb3F
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
gKzgDQDICt4AAAAAAIBi+T8K5JV7
    "], {{0, 214}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 214},
  PlotRange->{{0, 360}, {0, 214}}]], "Output",
 ImageSize->{364, 214},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[64]=",
 CellID->185958733]
}, Open  ]],

Cell["\<\
Normally, in QArgColorPlot, the range between the x-axis and the graph of the \
function is filled with a color corresponding to the phase. But we can also \
use another horizontal line at height y=y0 by using the option \
QBottomLine->y0:\
\>", "Text",
 CellID->1296596866],

Cell[CellGroupData[{

Cell["QArgColorPlot[Exp[I x - x^2],{x,-3,3}, QBottomLine\[Rule]1/3]", "Input",
 CellLabel->"In[65]:=",
 CellID->1386960753],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
RHIjXg/gc1ww5fQZrCgAAAAAAAAAAMX5P9/TPHQ=
    "], {{0, 157}, {240, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[65]=",
 CellID->819719146]
}, Open  ]],

Cell["\<\
This is useful, if we want to combine several ArgColorPlots in the same \
graphics:\
\>", "Text",
 CellID->1483911894],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"QArgColorPlot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", "\[ImaginaryI]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"QBottomLine", "\[Rule]", "1"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}]}], "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"QArgColorPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"x", "+", "\[ImaginaryI]"}], "]"}], "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Arg", "[", 
         RowBox[{"Cos", "[", 
          RowBox[{"x", "+", "\[ImaginaryI]"}], "]"}], "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2"}], ",", "1.7"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[66]:=",
 CellID->1379609847],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
qsKoWvmo1USVYPF5/D5nsVF8Fp/FZ/FZfC4ln50bEZ/F50L5rP14UHwWn42t
z6Pnfz5z5szevXvFZ/G56HwePf/z2bNn6+rqjh8/PmfOnNOnT4vP4nOx+Fw9
1vzPK1asOHXqlFoYGBhYvny5+Cw+F4vPHGs+RuczMy2Lz+Kz+Cw+i8/e+zx/
/nx7ee7cuc4tOMdJKoScuOiiiwr9EoqVNBXH6fO+ffu2b9+uFtRP5yhH/iN+
AiWMmhiPz/b8z+vWrVPPVz/HswVhQkgYtaD9fIqQGxJGLYjPhiBh1IL4bAgS
Ri1o/z6SkBsSw/xx4/tIQm5IGLUgPhuChFEL4rMhSBi1ID4bgoRRC+KzIUgY
tSDjG4YgMcwfGd8wBwmjFsRnQ5AwakF8NgQJoxbEZ0OQMGpBfDYECaMWxGdD
kDBqQcbrDEFimD8yXmcOEkYtiM+GIGHUgvhsCBJGLYjPhiBh1IL4bAgSRi3I
+IYhSAzzR8Y3zEHCqIUxwzjmPM+KxLucPHky+xaEiSJh1MLoMGaa55nWtHUb
Ldrb27NsQRg/b73924OvJXbvP6rCuCX6qlqw7w4p5MBoGzPN89zb29vW1pZ9
C/atutXCeO4ePglRYbGj5HxUW/cfTHuMvo2sYGPfiVhFyV452udMc+FGIpGG
hobhLvfQ0NCYz1HBr2yNpWUk+w3EJwlpt4FWj5V3rX7p89MTHy6nD7wgOV8u
8XvEe4mLuyuuiQRq0p6v3gWFbkThSbsNtHpUNUfVGvsJ4/e5p6dncHBQLfT3
99fW1mbaAnjUmpL4VV/f/srWnU6x9TatKEirxi13hvhJ8C/Aj4AfsmaJfh9G
+0z8MfEn1hzZHyU+EQnUOzM4OSu2syBUNUWnbHszOUV0PDkvtpPRPmea5znT
X1W/y/Cvts/gL8F9YLuvLzYJrVYm262uXxROzvB+NfhXyMFnwk98mvhMJPDA
JLRatdRutb81jv8gOohOjvZ5zPG6TPM8NzY2dnR0qIVDhw41Nzc7N+L889E+
g/8O/hzc7o/9y2Sw2mlypCbI68C/hRafic8TX0iU3TpJrLZNrloVLX/2BF4g
XmQWn5lhdCJtnmd7/ufh/nNTU1OWLWTx2boRQps/tqWErVaNGjG5LsibwZug
3WfrzhxfSZTNLGGr7ZpQtSLqe3oAEev2G7n6PCEm6jP4DPhkZWukxHJhF5PI
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
+OxlaryRTRAEQRAEQRAEQSg6/g+QR8VP
    "], {{0, 156}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 156},
  PlotRange->{{0, 240}, {0, 156}}]], "Output",
 ImageSize->{244, 156},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[66]=",
 CellID->912091317]
}, Open  ]],

Cell["Some more options for use with QArgColorPlot:", "Text",
 CellID->1664110834],

Cell["\<\
QSquared->True plots the square of the curve instead of the absolute value:\
\>", "Text",
 CellID->2031252157],

Cell[CellGroupData[{

Cell["QArgColorPlot[Sin[x],{x,-2Pi,Pi}, QSquared->True]", "Input",
 CellLabel->"In[67]:=",
 CellID->707466340],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JFsbmdZaa6211lprrbXWWmuttdYI7P+36edR
    "], {{0, 157}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 157},
  PlotRange->{{0, 240}, {0, 157}}]], "Output",
 ImageSize->{244, 157},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[67]=",
 CellID->780492533]
}, Open  ]],

Cell["\<\
QShiftPlot->number performs a vertical shift of the whole plot by number.\
\>", "Text",
 CellID->1179701281],

Cell[CellGroupData[{

Cell["\<\
QArgColorPlot[Sin[x],{x,-2Pi,Pi}, QShiftPlot->1, PlotRange->{0,2}]\
\>", "Input",
 CellLabel->"In[68]:=",
 CellID->1670400663],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnV9oHccVxtU/hD6Ukj75sQ2FvjXpWwt9aaEE+ta49KUFU5tYqpQr17Za
oiBjYdA1RkYgYxAhuMWPcqWotqAIBDYqFVJ9kWrXRWkUgQOqgpQ4tDKSpYhK
2o51qvF49969+2dm5+zp9+Pksl5fnJmz33x7ZnakfenEr462fr6lpaXrS+rj
6PE3f3D27PG3fvKi+sNPT3W1t506+fqPTv36ZNvJs9898QV1ckT9t67+e3oc
AABA4ezs7NRqta2trdD5vb29ubk5L00CIBsLCwvd3d0rKyvnzp2bmZnR5/f3
9zs7O9fW1jo6Ora3tz22EIDkVKtV5cN03NbWZp7f3NxUB8q3+/r6/DQOgKyM
j4+Pjo7qP7a2ttY9BoA/09PTXV1d5hno2Tuf/OvJsQt/rBvv3nnfd+vs4KKP
w8PDqroInTTlXalU9HHrIdn+X0lQfTwzeLtuH6vXZ939f1mhuzz2/Z8FLS06
1B/1X/luY170Vf7ezb+1BIGOIx9+qvuoxJDq35yamhoaGoqen5+fn5iYUAfq
01zlcO3ValRSR86e+d2jF4/o66iOdR8XHj5y2ga/aMsKKdmMf3z9W6VOhe7j
q9dnTSWb8eV/b9F33rl5P/m/3Po8y8vLFy5coL8aHBxUZ9Rn6Ps2O/Y8WsmN
rqMK+o4a2u6a4RF9oWMyEErFn/667LvV6dB9VIptJGYdR6/ccXpfdqfnpqak
4+LxSyIlnUrMJZW07mNTJetQHu5O0o70TH00C4z4+PO3fyhM0hnEbEq6LIVH
WjGbknYxC3ah57RiNiUtZoaYTcympH33oDnJy4xGhYf1YWtdz9WDoafEmeE6
UuEhYPGKZvppR3S5JE0X+hv3/5lBzBQu+mh3sU4Vfk8nsK+dyXkd067qsIKS
kGTiEBO0/sP2bkXVlPLYzGJ2JGmLYqY+xq9myLCmGGwlQd+teBbS2crmaCh7
t3tHtqjnPBVjiawpHltJ4Dy0qdLIVja7tmhbeqabbLayuVzWFIOVSoP50KYb
UMxzE7+StqVnWzdZ5tYUj/Uk6KHtu2fPsFVpmPHK1Ae27MuKnmk6b/c60iPg
Eq110F3YbhK4DW26AR358FO7erZo0fn1TDegPGsa/K9jElyYMwXtWeJQfVlZ
06gbtGcp/4PR/Ot1dmdAUUmzqh4b4eIOxW1ov3PzvsVpoCOLzilmZRoWp4HR
4FY91sXdHUoHPTz1a9HuzNmUdKrdd1E4mzMfa4qngCR4zwPNDpyKueXwIXie
dubRM80O1MTN6XVUvsdZzwWYMwVNkH1tvSvAnK1YdB49F+NL3q0pnsKS4DEP
xZizFYvOrGeqnF2bc8DbogszZwqy6OKr6MLMOb9FZ9Zzkb7k0ZricbfmzCcP
tKxRmJhzWnQ2PZMvFWPOFDwXOlSTVMOK1DMtdBS5/7Bgc9YWnW2mkG39uWBz
1tbEai26eHPWeShsaLt7INhUz9n6mEHMZM4Wd90kDG4W7e6BYHwUOZtwsVsj
SdA+0gwzhbKYs7amnOvttiDj8pKEoKhbFRlX8eacx6Kz6bngotG8jkws2uOg
VqHuCwXkwZc5mxadts1p9eyraKSg/cDef5y/+Olw3aHt+lZlfZ9zBotOextK
q2dfRaN5Hb1btF9zLiYPxS/TRSPDwl0qPVPRmOfHlvMHLVilvDiWKfIZSqNw
/WzFyzJdXYtOdTtOtV7HwZcC3wt3fiuuUB4cDW2/M8GQnlP1MbmYqY/utoYm
D78Ld94rLh3uFu78zgTNSDsrTK5nPr4UHFiTl1lhkbtWEubBxazQ+0wwZNFK
eysrK6FGPjpkY2NDn0xVbDDxpcDfrJBJxeU0DxxmgmaokdXa9svJyclQOyuV
yvABs7PPis+EeubmS8VvYyA4zARd54HJTFCHkujxN99++/rvzUaurq6OjIxE
G59Qz9x8KfAxKyTj8t7xaB4sWjQZF4eZoBm/eOu3J35zxWzn2NhYT08PrWbs
7u7q88n1zMqXgqKekYWSwKfi0mF3dsxnJmjGd/5wW+nZvA0tLi7u7Oyog/X1
9fb2dn0+iZ55+lJwYE2FbW7n8EwwJg+2ZsfHIm8/4RBfu39f6bnRrwcPveuq
6RI0T18Kip0VslrecZQHbjNBU88/Pz9k9rG3t7dWq6mDpaWlgYEBfb6pP3P2
pYJ3TvIc1IG9Z6Y8iw3S88uTk09vQ3/5u34fENXP/f39Zhea6pnhTNCMYnaQ
clvecZEHMq48v5/cdSS5DSXRs6/doQmvY2E7J713Nibyz46L/CHubKEK+5x6
9rtrPUkUsz2J4fJOKGh7Up6FaG7Lzo0sOn7m23QmyFzPgfuFaHolqPduJslD
5qHNZwNSUz3H9zFGz75+TjBtuF6ILsWgzpkH/sUGRdOSI2axjvMKVSjcLUTz
2VWYMA/ZFqJZbUBqatExM98Yf+a8QhW9jo4sukSDOnMeaPXGu1CT6zmmj430
zHnZORpOdwKXZVBnzgPbZee6QTuiG818BRQbFC52RJdrUGfOA89n3PEW3ajk
aKTncvlS4KbkKN2gzpAHWr3xLtFUEfNzsnX1XEZfclFylG5QZ8hDuYoNCnrZ
St0VgLp6LqMvBbZLjjIOap2H5M++1ZdfmfrAu0TTRqPbUN31ujL6UmC75Cjp
oE6VB7Yb6prGq3R1IkTFzH/vTaOwW3KUdFAHafYAlLHYMC06WnLUNeeS+lJg
b7tdeQd18jzw31DXVM/RYVtXz5w31DW9jhZ3AnvvjtM8lOUZd6OoW3KE9Ey+
5P1yZA6LO9vLO6gT5qEUG+qaWnRoBSCk57L7UmCj5Ch7sZEkD2XZUNdUz6Fh
G9VzqX0psFFyCBjUTfNQ9mKDIrrdztRz2YsNivwlh4BB3TQPAoqNlkOLNksO
c/1Zhi8F+UoOGYM6Pg8yig2tZ3PYmv4sw5eCfCWHmEEdkwcZxQZFqOTQeub/
o4LJI0/JIWZQB41/u52YYoPCLDnkFRsU2UoOScVGozxIKja0nrV9mXoW40tB
1pJD2KCumwdJxQaFWXKQniUVGxTZSg5hgzqoV3IIKzYodMlBepbnS0H6kkNe
sRHNg7xiQ+uZ7IvW6+T5UpC+5BA5qEN5kFdsUOiSQ4lZqi+lLTlEDupQHkQW
GxRUcpA5i9RzkKbkkDqozTyUutj46kcfhc58bm/vpfl5U88qpBYb+jomtGjB
g1rnobzFxuvt7S9PTj53cn//+KlTX/n44xNvvPHFzz5rOSw5SM/eE+4oUv2k
htRBrfNQ0mJDSfSbs7MhPf/44sUXnjxRBy9sb79WrbYcWrRsPQfJSg7ZxYbO
w7HS/jQK/T7zkMijx6Rnwb4UJCs5ZBcbZh68K9Opnp++qVC/P8V3wh1FkpLj
3Tvve3wheDGoe5Dqpu9WZOTevXuh92l2dXXp40qloo+Tvx+2vJwZvF38mzeB
RaJ6np+fn5iYUAfqc25uTp//f9AzKDtaz8vLy/p9QIODg0q96tP8JvQMJAE9
A0lAz0AS0DOQBPQMJNH05d0AlAiIGUgCegaSgJ6BJKBnIAnoGUgCegaSwHod
kATEDCQBPQNJQM9AEtAzkAT0DCQBPQNJYL0OSAJiBpKAnoEkoGcgCegZSAJ6
BpKAnoEkoGcgCaw/A0lAzIA5e3t75m8Q1Tw6ZGNjQ5+EngFn9vf3Ozs719bW
Ojo6tre3zb+qVCrDB8zOPvvd3dAz4Ey1Wt3c3FQHW1tbfX19+vzq6urIyEj0
+9Az4IypT/N4bGysp6eHZn+7u7t1vwMANxrpeXFxcWdnRx2sr6+3t7fX/Q4A
3Gj0nhSTkOaxZAfY0ug9Kb29vbVaTR0sLS0NDAzo81AyYI75nhTz/SlUP/f3
95tfhp6BJKBnIAnoGUgCegaSgJ6BJLBYByQBMQNJQM9AEtAzkAT0DCQBPQNJ
QM9AEtAzkATWn4EkIGYgCegZSAJ6BpKAnoEkoGcgCegZSALrdUASEDOQBPQM
JAE9A0lAz0AS0DOQBPQMJIH1OiAJiBlIAnoGkoCegSSgZyAJ6LkRDDPDrUnc
2hPwaxKf9iRpScLW2vqnpH6HYZO4fafp11oBEEGSsQAAAAAAAADIxoMHDx4/
fuy7FWHm5+d9N+F/7Ozs1Gq1ra0t3w0J9vb2zHdueodPZjRq/riysnL+/Pm7
d+/6bsszxsfHmUxsFxYWuru7VYrOnTs3MzPjsSX7+/udnZ1ra2sdHR3b29se
W0LwyYzm8uXL9NJzxcOHD/02RqMuVn9/PxM9V6tV5Yp03NbW5rclm5ub6kD5
YV9fn8eW6PYwyYxGaUbd1tXn6dOnfbflGaRkJnrWqFvG6OioxwaYCWGVHF+Z
2d3d/Y9BcJAWulO89957quTg0KQrV65QMe/lkkXbQ0xPT3d1dRXfHhOeevaY
mRs3blw3CBikqG6TPD4birZHMTw8rO6tBbckiimbSqXisSUaJpnRTE1N3bp1
Sx0sLy9fvXrVd3Oeg4kFqRQNDQ35bsVTVGU4MTGhDtQnh1UOPpkxuXbtmlLO
pUuXfDckDBM9s9pLMDg4qNqgPv02g2CVGQAAAAAAAAAAUvkv4F+EhA==
    "], {{0, 171}, {
    240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 171},
  PlotRange->{{0, 240}, {0, 171}}]], "Output",
 ImageSize->{244, 171},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[68]=",
 CellID->907886255]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellLabel->"In[69]:=",
 CellID->1125063311],

Cell["QPlotDown->True lets the whole plot appear uside down.", "Text",
 CellID->345556142],

Cell[CellGroupData[{

Cell["QArgColorPlot[Sin[x],{x,-2Pi,Pi}, QPlotDown->True]", "Input",
 CellLabel->"In[70]:=",
 CellID->966297106],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
lOwjKtfRYMVCUeBZ1/ZOhcKTVZnX8Mt564/SR+ru7t68eTN7wm3btvX29sL1
lStX2H15PuNxHd1nUnjgyapY3aSQZFUoP9lcJ86N6ezspD9XrFjBP7Y8nwka
19Gj88zGAYM0trpJecmqpJ73xQRvgs+nTp2iF5cuXaIuB3+/UB8xuI5eMinY
xsH2JuXFhU6c90U3iLqFS5ngXbJkCXu8BLf560IhOwxbrZdMCrZxsL1JYciq
TGi/XPv+7uPHj9PnoT8///xz9njt7e0fffQRvbh27drOnTvZ/UL2GYPr6CuT
wgODNLa9SWHIqkAmZfv27ZSl9CcZZO/GjRvhCXfv3k3vt7a28o9diM8Egevo
K5PCA4M0drBJec+qKAheBT77dR29O89sHDxKYzeblPesioLgVeCzX9PkMZOC
ZxyoSXGwqP1mVeTfSeFRlM/eXWjvzjPArwvtZpPym1WRfyeFh3xwA+D3XRW6
xWNwNohvF9pZhMdjVkVtzRa1z8SrC231e3+KwpcL7TLC4/FdFbVskRqffZkm
JM4zwNc4uIzw+HKh1ZxnosRnj66jxzIkEb7GwWWEx5cLreY8EyU++3Id/ZYh
ifA1Do7To15caOU1q8Bn4smF9l6GJMK9C+0+PerFhVbeiJX57N40oXKeAe7H
wX161L0Lrew8k+LxOoCXKDQq5xng3oV2nx5170IrO89E1T67j0JjKNsQ4d6F
9lJbSP8otZkunQ3HfCbOXWgkZRsiXLrQvmoLHbvQOhuxDp9dmiaEzjPA5Tj4
UsQuXWgd55lo8NmlC42h5jkLzeDsuVrUXvjsshZax3kmGnwmDmuhcTrPAJdS
YsDHO3rBSzed1UJrbsRq8Q3WRzcuNFrnGeBmHPymk9y4HIWOXkyFpn12s9V6
EfXycDMOftNJbl4nTD16sb+/n39zkKG3t5fef/DgAX9Th89uolWYnWeAGynh
VxHDXNtOfIsb8aNHj5YuXSqej3Tr1q3ly5d3dXWtWLHi5s3/cUOHz8RJtAph
mluE7XHAsKgdRO3Ejbi5ufnu3btEOB/p8OHD58+fJ4Pnb+zfv5/d1+ezbdOE
NlLHw/Y4YFjUtl3o1Ehd1jkb1Ampr6+nrKY3+/r6Un9HAbajVRjskgxsJ74x
KGLbUbuB0wk2tD3kQLL5fObMmS1btlAPpLW1lV6n/o4arEarMEfqeNj+tk0k
tStWo3b0wxe//+FeDvQvNjY2sr9u/HykrD7ai1ZhsEuSsDcOeN6atOdyZEXq
Ojs7U89Hampqunr1Kr24ffv26tWr2X19+2x1q/WYQSgKe+OAZ1Hbq7XLSQtm
nY+0fv16en/t2rX8L+vz2V7UDo9dkoG9cUAVfrfkcphS/fp8Jta2Wjx2SRI2
xgHbW2Y2XA79tCCDKT7bME2o7JIMbIwDtkVtw+XQrEHiYYTPNrbasJwNgI3a
JISL2rjLYTDFYITPxMJWi80uScLsOOBc1GZdDoPOBtGrr+NhfKtFaJdkYDbK
gXNRm3U5DDobxJx9NrvV4rRLMjA7DmjDlQZrOczWM5jiMxl8sJba1ojtkiRM
bVVuDsVVgymXA2o2DNYzGOSzqa0WajYwpHfVYKqmBXMhlqlaDuOGyyCfiaGy
SQy1ZJrQV4X4C7FqTJzeb9yhMs5nfdOE2S5JQn8c8HtcsA3hUYIAU/ENAHUS
NOcR0mGY7ZIMYDumfdHhM04lyIM+5IT2y0iUIMCsfSbaqhC/XZKEjokOxePS
UYVjLly3YbiM81lHDYHTSI2b2UfyAp2tKhSPC6q+1XKFlgyXcT4TDTUUjXEG
qJlozGE6EWom2niYjsEGn9UCd2Cc8TuN8oA8WtHcSijGGQAmuuhpjfYMlw0+
EyUTHZlxBhQ10aF4zjyKmmhLnjPAEp+Lmuj4jDOAaoGGlXskAx0wCMFVrdy4
fa9Q+tvqBmQ2XseDPjadyifZOAPkTXS4gyAfi4avmLf3JJbITB57jzKmCV7i
Dj3mnAOZpQ0yMNxBkPE6wNNQ24W7uroSd1LPAbPHZyJnmmCTDUgBKQBidzlh
ecgiBT0IIAyp+c0iM9Q5q/Vx0aJFJ06c4O9knQNmlc9EgtLhbrKFADtyqkaO
ZkXDjpxa1AFkVptoStFTp04l+Jx1DphtPsOyzaL0E0JmAGjkhOMBvlYEZAbA
sk04HnBqqM5Enz9/PsHnnPNklP+KJBil+UgsVOzTRtWx7QfAA3A8Ei0aMgPY
dCv0sa+vL3HeF6AQn+2FOBggpCM2q38ULRir44tPMrA+UibLm6yDBw8mzvsC
iHyWOQfMNvg+hivkS7iHyOesc8Bc8rlECTUwPvPnffHngDGUfC4RE0o+l4gJ
JZ9LxISSzyVigoNgXYkSJUqUKCGP/wKd9mNi
    "], {{0, 149}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 149},
  PlotRange->{{0, 240}, {0, 149}}]], "Output",
 ImageSize->{244, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[70]=",
 CellID->972975850]
}, Open  ]],

Cell[TextData[{
 "In quantum mechanics, a ",
 Cell[BoxData[
  SuperscriptBox["\[DoubleStruckCapitalC]", "2"]]],
 "-valued functions is called a spinor function. The ArgColorPlot has a \
method to plot such functions by combining QArgColorPlots of the two \
component-functions. By default, the second component is plotted upside down \
and with less saturation:"
}], "Text",
 CellID->26591546],

Cell["\<\
RM: QSpinorPlot does not add black boundary-lines for the second component. \
OK?\
\>", "Program",
 CellID->247515046],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spinorfunction", "[", "x_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"3", " ", "x"}], "]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox["1", "4"]}], ")"}], "2"]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "x"}], "]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "+", 
            FractionBox["1", "4"]}], ")"}], "2"]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "x"}]}]]}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"QSpinorPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"spinorfunction", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3."}], ",", "3."}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[71]:=",
 CellID->309553883],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
SkpKSkpKSkpKSkpx1P8DDvqYEw==
    "], {{0, 152}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 152},
  PlotRange->{{0, 240}, {0, 152}}]], "Output",
 ImageSize->{244, 152},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[72]=",
 CellID->1864622692]
}, Open  ]],

Cell["\<\
Like the other commands, this command accepts options and allows a \
combination with an ordinary plot\
\>", "Text",
 CellID->173835516],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spinorlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"spinorfunction", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"QListSpinorCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"spinorlist", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"QCurveStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.2", ",", " ", "0.5"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.04", "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[73]:=",
 CellID->1075757492],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
lSpVLer/Axo5rXM=
    "], {{0, 223}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 223},
  PlotRange->{{0, 360}, {0, 223}}]], "Output",
 ImageSize->{364, 223},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[74]=",
 CellID->484723773]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spinorlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"spinorfunction", "[", "x", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"QListSpinorCombinedPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"spinorlist", ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"QCurveStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0.7", ",", "0.9"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[75]:=",
 CellID->163466141],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQt0HcWZ528yuzmZPZ5dn909Uc4ykzFoyCaz65jdsCFBk4xIHPFyAMsQ
ggwXJGwZybZiScayLeO+Mta1gg2xogwPOVGk8DBPcRMSSEhQRDRgCC9pmIkm
TjKaIDjrydWJ2AmIIWDXVvfXXS71s6q7qrrvvf0/Fx9xdXW7u7rq19/3r6+r
T236cn3zezOZTOf78T/1jV3ndHQ07lizFP/PZW2dLRva1q87v23r+g3rOz7Z
9Ef4zRn833XvyWT0n1GqklJzc3Pcu5AqVaoSU8qNVKlS8SrlRqpUqXiVciNV
qlS8SrmRKlUqXjVbintHUqVKpUi//d2bg4XJ9oNPPDT2j+G+ISVGqlSVI0yM
bM/3nS/e70m5kSpVhQhHF0CJC7+0qdbSxdfshDdx+MH+VSk3UqWqBAE0Gnbc
U+umL7bfzhV4pNxIlars9eSLr/hAA7TyvIsBHf/wT8XAL2ThBs6JeoePkGAG
74OIQ0mVKpUKgafhDw2iq3fdiz9Mj/Hjx48///zztu/05wZgyvXFAqVUqVLF
LhiwLNBYv3796tWr4fODhUn8tydOnNi8efOxY8daW1vfeust8p1e3KB913Mv
uco1nsFBiKIjT5UqVSjh6zseqhdfszMQGhgFF110EeZGrWV34OSit7f3jTfe
wN+zsLCwd+9e8rWu3CC+q8/myDera4JUqVJxij3YwFq1ahVwgwxwmg9ePyMq
zGDJhta0fIXEM6lSVaDosDyB11DwGWz5AiM3sPAfYj7gb8CHiRzcoAUtgDMR
xg0BlOBrE96GJSHShrgB0zZMuIj7h89U6AIqqeIKNpzcwLp23TpyaNe1tJJv
BoaQ6RKWPMgm+MPkt2HyRdLDtA2TLyC8je2JOmXgbLAHG67cwO/U19djLDRt
Pdi4/RDpliTGCAeNWiOYcY0xEtWGyRecZboNSewR416l8pLXqUnOKeMNNmzc
OPfcc6+++mr8w9q1azElrrzySpyGgDUB3Bhc3T64pt1r9oRFyW/DhMv14gVK
2zCBgoDQ9VfA/9hNP+hRdD15dJGJ1OLSU/Q85b0Z9L4M+uNM8ZQqZ/k6IzRc
p2WhDUPfc1c58oFD2oZJEwxJHzL4UEWZwHkQDo2O9mGUeT/K/HuaG+hPMmhp
hivqgG/D0QsYpM79Ty+XgQokQ9qGiRLL6Yi9ugnvAB6SYqGhH3VmiRc30H/N
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

    "], {{0, 223}, {360, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{360, 223},
  PlotRange->{{0, 360}, {0, 223}}]], "Output",
 ImageSize->{364, 223},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[76]=",
 CellID->1346979740]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ArgColorPlot",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:VQM/guide/VQM", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2018, 6, 21, 18, 18, 20.164032}", 
    "history" -> {"0.0", "11.3", "", ""}, "context" -> "VQM`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "V Q M Tutorial", "language" -> "en", "paclet" -> "VQM", "status" -> 
    "None", "summary" -> 
    "The package VQM`ArgColorPlot provides methods to visualize \
complex-valued functions of one real variable. This package is part of the \
VQM packages which can be obtained here: \
https://vqm.uni-graz.at/pages/software.html (free download). The VQM packages \
are part of the Visual Quantum Mechanics project, see \
https://vqm.uni-graz.at. In particular, these packages are distributed with \
the book Advanced Visual Quantum Mechanics, Springer-Verlag New York, 2004. \
Plot the absolute value Abs[f[x]] of a complex-valued function f depending on \
a real variable x and fill the space between the plotted function and the \
x-axis with a color corresponding to the argument Arg[f[x]]. The saturation \
and brightness of the colors can be set using the options QSaturation and \
QBrightness. works like QArgColorPlot with respect to f. The curve g is drawn \
in front of the QArgColorPlot of f. ", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$9955, "title" -> 
    "ArgColorPlot", "titlemodifier" -> "", "windowtitle" -> "ArgColorPlot", 
    "type" -> "Tutorial", "uri" -> "VQM/tutorial/ArgColorPlot", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "VQM`ArgColorPlot`"->{
  Cell[21404, 413, 399, 8, 70, "Text",ExpressionUUID->"bbe4a6a7-dfad-49ac-bc99-0308cc9ded6e",
   CellTags->"VQM`ArgColorPlot`",
   CellID->468673075]},
 "RasterizedOutput"->{
  Cell[27554, 578, 7689, 134, 70, "Output",ExpressionUUID->"e0a5a522-55de-4ff3-b2e4-e268c24da3b7",
   CellTags->"RasterizedOutput",
   CellID->1710643653],
  Cell[38872, 819, 11901, 203, 70, "Output",ExpressionUUID->"48dfb560-1615-4ced-b420-e880bdd1772e",
   CellTags->"RasterizedOutput",
   CellID->276809935],
  Cell[164016, 4096, 4439, 81, 70, "Output",ExpressionUUID->"57d9414e-f708-45e3-a7aa-de6836567e37",
   CellTags->"RasterizedOutput",
   CellID->894998143],
  Cell[168715, 4191, 6347, 112, 70, "Output",ExpressionUUID->"5618e15d-4ecc-4315-adf3-be805740a9b0",
   CellTags->"RasterizedOutput",
   CellID->1258325813],
  Cell[179331, 4443, 12674, 216, 70, "Output",ExpressionUUID->"9a93ed3b-9295-4114-87a3-dbeae90fead6",
   CellTags->"RasterizedOutput",
   CellID->262983435],
  Cell[194139, 4722, 5293, 95, 70, "Output",ExpressionUUID->"ae8f4bca-0fb8-4764-a036-bbf72d574991",
   CellTags->"RasterizedOutput",
   CellID->441246519],
  Cell[200420, 4858, 10962, 188, 70, "Output",ExpressionUUID->"08aa57ba-4f8a-4b1c-8f58-70d378a18b22",
   CellTags->"RasterizedOutput",
   CellID->769211742],
  Cell[211758, 5065, 5191, 93, 70, "Output",ExpressionUUID->"b83368c0-aec8-4cd0-a558-c758e8f8a945",
   CellTags->"RasterizedOutput",
   CellID->290192854],
  Cell[223346, 5326, 5386, 96, 70, "Output",ExpressionUUID->"8f6c7e5c-99d2-4895-b190-1776db1a1348",
   CellTags->"RasterizedOutput",
   CellID->335934841],
  Cell[234217, 5571, 14776, 250, 70, "Output",ExpressionUUID->"60f3e1f3-4555-441a-a2d9-071b13bfc60c",
   CellTags->"RasterizedOutput",
   CellID->322364724],
  Cell[249688, 5845, 14684, 249, 70, "Output",ExpressionUUID->"cba90b47-e69b-46b1-bcdb-f895fba4a585",
   CellTags->"RasterizedOutput",
   CellID->2030158534],
  Cell[264659, 6109, 14611, 248, 70, "Output",ExpressionUUID->"68bebcc8-a0fe-4a51-bb8b-246e68fa74a5",
   CellTags->"RasterizedOutput",
   CellID->1654297402],
  Cell[279938, 6384, 9083, 157, 70, "Output",ExpressionUUID->"54cc7619-36ae-4774-b34b-d3bf1d173107",
   CellTags->"RasterizedOutput",
   CellID->305657705],
  Cell[289648, 6568, 13288, 226, 70, "Output",ExpressionUUID->"8524c6f6-048a-4d16-838a-c4731ee1ccd0",
   CellTags->"RasterizedOutput",
   CellID->408164311],
  Cell[303621, 6824, 4907, 89, 70, "Output",ExpressionUUID->"eec855a0-4dd7-4fda-942d-d13b1faab072",
   CellTags->"RasterizedOutput",
   CellID->954806459],
  Cell[309457, 6951, 6811, 120, 70, "Output",ExpressionUUID->"65b0e643-e446-499e-a302-4569592f46f8",
   CellTags->"RasterizedOutput",
   CellID->1434346029],
  Cell[316666, 7090, 6205, 110, 70, "Output",ExpressionUUID->"0dc18127-7d9e-49b3-9c04-8a1bcce6cc7a",
   CellTags->"RasterizedOutput",
   CellID->1549771828],
  Cell[323395, 7223, 5561, 99, 70, "Output",ExpressionUUID->"21802fc7-ba10-4569-a3bd-d240796fe5f4",
   CellTags->"RasterizedOutput",
   CellID->185958733],
  Cell[329406, 7339, 5517, 99, 70, "Output",ExpressionUUID->"6e8e2042-896c-40c3-9cdd-5c5331d06c0a",
   CellTags->"RasterizedOutput",
   CellID->819719146],
  Cell[336405, 7490, 6297, 111, 70, "Output",ExpressionUUID->"3c2044e9-102e-4ccd-82f7-d3496a4c05ec",
   CellTags->"RasterizedOutput",
   CellID->912091317],
  Cell[343060, 7618, 6484, 114, 70, "Output",ExpressionUUID->"e80f10f4-2d7e-47a7-a604-4b201814163d",
   CellTags->"RasterizedOutput",
   CellID->780492533],
  Cell[349841, 7748, 5167, 93, 70, "Output",ExpressionUUID->"27165162-da1e-41df-b065-bee90e9f3ea7",
   CellTags->"RasterizedOutput",
   CellID->907886255],
  Cell[355327, 7857, 6606, 116, 70, "Output",ExpressionUUID->"138a7a92-5016-4d0b-ac52-3b01b8739d5e",
   CellTags->"RasterizedOutput",
   CellID->972975850],
  Cell[363963, 8043, 9344, 161, 70, "Output",ExpressionUUID->"a69437b0-9414-4647-a077-a03ea57d07b8",
   CellTags->"RasterizedOutput",
   CellID->1864622692],
  Cell[374661, 8252, 18969, 319, 70, "Output",ExpressionUUID->"e512b88b-de7a-46da-a9d9-342d3437adf4",
   CellTags->"RasterizedOutput",
   CellID->484723773],
  Cell[394606, 8607, 19564, 329, 70, "Output",ExpressionUUID->"4c51517a-6c64-4e00-a64f-f13ade8373b1",
   CellTags->"RasterizedOutput",
   CellID->1346979740]},
 "Info493734618833-9791720"->{
  Cell[217361, 5178, 527, 8, 70, "Print",ExpressionUUID->"4cb6c7f7-410a-4740-9c73-5951b7a94c11",
   CellTags->"Info493734618833-9791720",
   CellID->14400426]},
 "Info513734618833-9791720"->{
  Cell[222438, 5293, 256, 4, 70, "Print",ExpressionUUID->"aa6754c4-29dd-44c8-ab4d-a5c5db84e5d6",
   CellTags->"Info513734618833-9791720",
   CellID->23335248]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"VQM`ArgColorPlot`", 417242, 9008},
 {"RasterizedOutput", 417417, 9012},
 {"Info493734618833-9791720", 421536, 9091},
 {"Info513734618833-9791720", 421728, 9095}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 2287, 53, 70, "AnchorBarGrid",ExpressionUUID->"7d4eab09-9749-43e4-a5d1-bd67552cfaf1",
 CellID->1],
Cell[CellGroupData[{
Cell[2896, 78, 49, 1, 70, "Title",ExpressionUUID->"1164fd8b-0d3a-4e51-a10a-6e9e21e6387a",
 CellID->509267359],
Cell[2948, 81, 17658, 309, 70, "TutorialJumpBox",ExpressionUUID->"8113917c-15fd-49ca-a631-4b724a850d6f"],
Cell[20609, 392, 792, 19, 70, "Text",ExpressionUUID->"af96d167-69c8-48ce-9139-c910c004755d",
 CellID->1534169418],
Cell[21404, 413, 399, 8, 70, "Text",ExpressionUUID->"bbe4a6a7-dfad-49ac-bc99-0308cc9ded6e",
 CellTags->"VQM`ArgColorPlot`",
 CellID->468673075],
Cell[21806, 423, 4808, 114, 70, "DefinitionBox",ExpressionUUID->"8d098123-dcf5-44d4-a4ca-61df381b5273",
 CellID->2096742444],
Cell[26617, 539, 92, 1, 70, "Caption",ExpressionUUID->"ac196e59-0791-4d42-8e8b-d99755cd8988",
 CellID->1891092685],
Cell[CellGroupData[{
Cell[26734, 544, 71, 1, 70, "Section",ExpressionUUID->"9e36195c-2df9-4530-a713-e01eaefd0d8e",
 CellID->1892760991],
Cell[26808, 547, 173, 4, 70, "Text",ExpressionUUID->"d53deb94-78da-49f0-914f-57cfc2f92d22",
 CellID->958712726],
Cell[CellGroupData[{
Cell[27006, 555, 52, 1, 70, "Subsection",ExpressionUUID->"138d5811-338c-45b9-89a1-fb561b8fe5f6",
 CellID->514982441],
Cell[27061, 558, 96, 2, 70, "Text",ExpressionUUID->"e39e9d20-e3b4-475d-8966-682b26727df7",
 CellID->950788477],
Cell[CellGroupData[{
Cell[27182, 564, 369, 12, 70, "Input",ExpressionUUID->"b6bb15a6-e04e-4648-9fc9-f81c54328163",
 CellID->476115612],
Cell[27554, 578, 7689, 134, 70, "Output",ExpressionUUID->"e0a5a522-55de-4ff3-b2e4-e268c24da3b7",
 CellTags->"RasterizedOutput",
 CellID->1710643653]
}, Open  ]],
Cell[CellGroupData[{
Cell[35280, 717, 673, 21, 70, "Input",ExpressionUUID->"d4c617be-a30c-4f0a-906d-2e383283199a",
 CellID->1079990870],
Cell[35956, 740, 1783, 38, 70, "Output",ExpressionUUID->"7d330b53-b340-41f2-a9d7-1d37a5e4275c",
 CellID->433346769]
}, Open  ]],
Cell[37754, 781, 107, 2, 70, "Text",ExpressionUUID->"90e1b0d7-328c-4bdd-9e1f-63f8bc458645",
 CellID->546778960],
Cell[CellGroupData[{
Cell[37886, 787, 983, 30, 70, "Input",ExpressionUUID->"edbae05f-e678-4232-84c8-2a6e154a6bac",
 CellID->631455207],
Cell[38872, 819, 11901, 203, 70, "Output",ExpressionUUID->"48dfb560-1615-4ced-b420-e880bdd1772e",
 CellTags->"RasterizedOutput",
 CellID->276809935]
}, Open  ]],
Cell[50788, 1025, 180, 5, 70, "Text",ExpressionUUID->"786e2a7e-8689-4594-9dea-c7cb104ebd2f",
 CellID->515965556]
}, Open  ]],
Cell[CellGroupData[{
Cell[51005, 1035, 75, 1, 70, "Subsection",ExpressionUUID->"45b3840a-34ec-431f-bb10-41438ff378be",
 CellID->294133106],
Cell[51083, 1038, 428, 8, 70, "Text",ExpressionUUID->"33a83504-f29a-448d-bce4-07896e70a415",
 CellID->2135240795],
Cell[51514, 1048, 88, 1, 70, "Text",ExpressionUUID->"c000218c-4776-430e-8b41-522e3ebca51d",
 CellID->392816548],
Cell[51605, 1051, 87, 2, 70, "Input",ExpressionUUID->"08bf7c33-ec92-4b73-8acc-83a03875c7d2",
 CellID->702991358],
Cell[51695, 1055, 180, 4, 70, "Text",ExpressionUUID->"2f50cc24-b390-47b7-b962-83b18ff5327b",
 CellID->1868211759],
Cell[51878, 1061, 94, 2, 70, "Input",ExpressionUUID->"ddb64bc5-a0e4-417f-b3dc-75de9dad89f6",
 CellID->676630726],
Cell[51975, 1065, 517, 10, 70, "Text",ExpressionUUID->"fa25a3f6-e5b6-460c-99f1-e026663d85de",
 CellID->1206701017],
Cell[52495, 1077, 82, 2, 70, "Input",ExpressionUUID->"2c662606-f960-4fc0-a987-508c68c8ff29",
 CellID->188430451],
Cell[52580, 1081, 304, 6, 70, "Text",ExpressionUUID->"13bf89d7-a2ab-4e6e-9dfe-fdd4a0b73389",
 CellID->1559694279],
Cell[CellGroupData[{
Cell[52909, 1091, 78, 2, 70, "Input",ExpressionUUID->"ea6e40fe-dc3a-4776-9c77-012c65b8eada",
 CellID->1596351871],
Cell[52990, 1095, 556, 14, 70, "Output",ExpressionUUID->"8ffa8b84-378b-4be1-a4ed-110fae358a9d",
 CellID->818669517]
}, Open  ]],
Cell[53561, 1112, 79, 1, 70, "Text",ExpressionUUID->"d41ba830-2eb3-4956-88ad-47771b327888",
 CellID->449994561],
Cell[53643, 1115, 85, 2, 70, "Input",ExpressionUUID->"b423984c-c28b-4a22-adad-f330b554f446",
 CellID->1768665640],
Cell[53731, 1119, 60, 1, 70, "Text",ExpressionUUID->"ab92efb2-f376-476f-ac8e-be01e5954cf1",
 CellID->494769706],
Cell[53794, 1122, 81, 2, 70, "Input",ExpressionUUID->"23c00599-6bab-4363-a8e4-74a583bba5e0",
 CellID->537767558],
Cell[53878, 1126, 201, 4, 70, "Text",ExpressionUUID->"dc9febab-7d82-488d-bb20-a7999534612f",
 CellID->1648160730],
Cell[CellGroupData[{
Cell[54104, 1134, 96, 2, 70, "Input",ExpressionUUID->"32db6c3a-e21d-4288-b384-819784fe1731",
 CellID->245826457],
Cell[54203, 1138, 427, 12, 70, "Output",ExpressionUUID->"75eeea7a-dfd6-416f-83a3-4db100e06020",
 CellID->464389039]
}, Open  ]],
Cell[54645, 1153, 157, 4, 70, "Text",ExpressionUUID->"99b72850-0d63-4d94-821b-898617201efa",
 CellID->903770997],
Cell[CellGroupData[{
Cell[54827, 1161, 100, 2, 70, "Input",ExpressionUUID->"30effd39-6520-4c74-a4f6-4387bdefd1ad",
 CellID->527311348],
Cell[54930, 1165, 102521, 2704, 70, "Output",ExpressionUUID->"b72bb8f1-3f94-41a2-9f5d-d791e5e83ad2",
 CellID->29157221]
}, Open  ]],
Cell[157466, 3872, 78, 1, 70, "Text",ExpressionUUID->"d9bb398b-28b0-44b7-bfae-237136a37c29",
 CellID->813276556],
Cell[157547, 3875, 100, 2, 70, "Input",ExpressionUUID->"56eb2ee2-ec8b-48c0-b0c7-5047c90f9571",
 CellID->5663537],
Cell[157650, 3879, 450, 8, 70, "Text",ExpressionUUID->"93bc9e6d-3a2c-4e57-b456-3b4195200e22",
 CellID->697785891],
Cell[158103, 3889, 108, 2, 70, "Input",ExpressionUUID->"8f52a553-1ea2-4623-a684-723faea31421",
 CellID->279273770],
Cell[158214, 3893, 170, 4, 70, "Text",ExpressionUUID->"310b4f38-0352-4dc7-80a4-a7306e2d0cc7",
 CellID->1502483695],
Cell[CellGroupData[{
Cell[158409, 3901, 87, 2, 70, "Input",ExpressionUUID->"9e0a02fd-437b-4e09-a058-aba80e43c846",
 CellID->2130740439],
Cell[158499, 3905, 1018, 21, 70, "Output",ExpressionUUID->"a5807cc4-add5-4bd5-972e-10493a222c51",
 CellID->49735328]
}, Open  ]],
Cell[159532, 3929, 153, 4, 70, "Text",ExpressionUUID->"2c8f0a3c-77df-4158-a748-8d3a707c01ae",
 CellID->973366363],
Cell[159688, 3935, 1287, 42, 70, "Text",ExpressionUUID->"8fad3e45-f2bf-4054-bbdd-13c0bcf92f9d",
 CellID->1985523742],
Cell[160978, 3979, 96, 2, 70, "Input",ExpressionUUID->"babd5b44-4439-48a5-b4e9-d5b7cf137121",
 CellID->949141061],
Cell[161077, 3983, 191, 7, 70, "Text",ExpressionUUID->"17db9375-6c17-40e4-a882-19e28dc48f25",
 CellID->705282311],
Cell[161271, 3992, 100, 2, 70, "Input",ExpressionUUID->"51f82bcd-f56d-45e6-93a6-416de4706b3d",
 CellID->1717553184],
Cell[161374, 3996, 262, 11, 70, "Text",ExpressionUUID->"f0c11250-6b14-471d-b119-3a7b3e00b72b",
 CellID->441180514],
Cell[161639, 4009, 102, 2, 70, "Input",ExpressionUUID->"ae42b616-8929-4f0c-b564-045094bbf93a",
 CellID->1807349354],
Cell[161744, 4013, 194, 4, 70, "Text",ExpressionUUID->"09c5f045-4563-47c0-b7a4-717509f1a15a",
 CellID->2111889510],
Cell[161941, 4019, 168, 5, 70, "Input",ExpressionUUID->"88abc7bf-106f-4283-a8bf-bced26166fa2",
 CellID->917276954],
Cell[CellGroupData[{
Cell[162134, 4028, 83, 2, 70, "Input",ExpressionUUID->"a4a3e47d-85ab-4a83-a290-cddfa3a26735",
 CellID->2036147712],
Cell[162220, 4032, 1087, 33, 70, "Output",ExpressionUUID->"d297bd71-eda5-4988-af88-45142d5ed67a",
 CellID->81698886]
}, Open  ]],
Cell[163322, 4068, 137, 4, 70, "Text",ExpressionUUID->"c5fa5c26-9760-44d0-a018-4c8e7c876bb6",
 CellID->792955486],
Cell[163462, 4074, 100, 2, 70, "Input",ExpressionUUID->"c94be77a-2be8-4cf9-a120-9823f8a7eecd",
 CellID->2066823567],
Cell[163565, 4078, 121, 3, 70, "Text",ExpressionUUID->"ac376cc8-f3e3-40c3-9bf3-a035c786d12b",
 CellID->1555700344],
Cell[163689, 4083, 116, 2, 70, "Input",ExpressionUUID->"9e155bb1-1bd0-4bd0-9b5c-fc9366b41d50",
 CellID->1042279383],
Cell[163808, 4087, 61, 1, 70, "Text",ExpressionUUID->"1ea56525-a26b-4fb8-8bed-5d8ddf49e6ad",
 CellID->565481502],
Cell[CellGroupData[{
Cell[163894, 4092, 119, 2, 70, "Input",ExpressionUUID->"722c5494-ebbf-43cb-a5a0-cf7cef339b0a",
 CellID->1432466139],
Cell[164016, 4096, 4439, 81, 70, "Output",ExpressionUUID->"57d9414e-f708-45e3-a7aa-de6836567e37",
 CellTags->"RasterizedOutput",
 CellID->894998143]
}, Open  ]],
Cell[168470, 4180, 84, 1, 70, "Text",ExpressionUUID->"6fff51f9-b162-49c3-bbe4-9927222d4299",
 CellID->1103895342],
Cell[CellGroupData[{
Cell[168579, 4185, 133, 4, 70, "Input",ExpressionUUID->"54f6ecba-bd2b-4982-94a6-2dc64ab1a2db",
 CellID->1057786561],
Cell[168715, 4191, 6347, 112, 70, "Output",ExpressionUUID->"5618e15d-4ecc-4315-adf3-be805740a9b0",
 CellTags->"RasterizedOutput",
 CellID->1258325813]
}, Open  ]],
Cell[175077, 4306, 124, 4, 70, "Text",ExpressionUUID->"f85bbec1-482f-408b-a408-33fcfb2f9b70",
 CellID->1205825801],
Cell[175204, 4312, 2498, 66, 70, "Input",ExpressionUUID->"254986b0-cb14-448a-bd42-019e02e08f71",
 CellID->511060668],
Cell[177705, 4380, 80, 1, 70, "Text",ExpressionUUID->"53c71b64-b904-4f21-91a0-fea97d2543df",
 CellID->1609542723],
Cell[CellGroupData[{
Cell[177810, 4385, 117, 2, 70, "Input",ExpressionUUID->"0323756a-3d30-41a1-9e4c-43090300f2e3",
 CellID->1880527849],
Cell[177930, 4389, 543, 12, 70, "Output",ExpressionUUID->"76073e79-d775-4397-a038-2ab9dfa46022",
 CellID->275694856]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178522, 4407, 61, 1, 70, "Subsection",ExpressionUUID->"37cc2343-1a01-4ec9-ab98-9109d6e048e8",
 CellID->1716024370],
Cell[178586, 4410, 145, 4, 70, "Text",ExpressionUUID->"5f59dc49-65c9-44dd-ba97-2b94dd58c952",
 CellID->516207380],
Cell[178734, 4416, 291, 11, 70, "Input",ExpressionUUID->"c5b5a610-54bf-4bbd-9b5a-a6f7cd2c39e1",
 CellID->63501780],
Cell[179028, 4429, 85, 2, 70, "Input",ExpressionUUID->"487f29f2-e7bd-49b2-a6b8-30be3e9cb597",
 CellID->2122527548],
Cell[179116, 4433, 100, 2, 70, "Input",ExpressionUUID->"22914aa3-6aa9-41dd-9027-271bf9cffb74",
 CellID->1469638919],
Cell[CellGroupData[{
Cell[179241, 4439, 87, 2, 70, "Input",ExpressionUUID->"42891653-50d6-4f5e-8778-f490bcbea2f9",
 CellID->2011887486],
Cell[179331, 4443, 12674, 216, 70, "Output",ExpressionUUID->"9a93ed3b-9295-4114-87a3-dbeae90fead6",
 CellTags->"RasterizedOutput",
 CellID->262983435]
}, Open  ]],
Cell[192020, 4662, 252, 7, 70, "Text",ExpressionUUID->"8754fe47-d686-4786-9d95-fab21ef29c36",
 CellID->1935645851],
Cell[CellGroupData[{
Cell[192297, 4673, 1839, 47, 70, "Input",ExpressionUUID->"734940c4-30e2-44a9-a49e-737e203d9e37",
 CellID->170049354],
Cell[194139, 4722, 5293, 95, 70, "Output",ExpressionUUID->"ae8f4bca-0fb8-4764-a036-bbf72d574991",
 CellTags->"RasterizedOutput",
 CellID->441246519]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199493, 4824, 68, 1, 70, "Section",ExpressionUUID->"ef32b7c7-7657-41e4-b313-6e394c5cc28e",
 CellID->1933453141],
Cell[199564, 4827, 164, 5, 70, "Text",ExpressionUUID->"48079a5e-80e4-4a11-aef2-927ba1c89cdb",
 CellID->1971878030],
Cell[199731, 4834, 90, 2, 70, "Input",ExpressionUUID->"a6e9e425-e800-4598-a00f-19f05d731bdc",
 CellID->1386409706],
Cell[199824, 4838, 372, 9, 70, "Text",ExpressionUUID->"3bf244ce-0adb-4d65-87b9-0eacc0a7cbb7",
 CellID->1190358792],
Cell[CellGroupData[{
Cell[200221, 4851, 196, 5, 70, "Input",ExpressionUUID->"6ad6f52c-c126-4466-93d1-ed98be0b24f1",
 CellID->402561692],
Cell[200420, 4858, 10962, 188, 70, "Output",ExpressionUUID->"08aa57ba-4f8a-4b1c-8f58-70d378a18b22",
 CellTags->"RasterizedOutput",
 CellID->769211742]
}, Open  ]],
Cell[211397, 5049, 81, 2, 70, "Input",ExpressionUUID->"f1ee2505-064b-45c0-ba3b-04f4e3c567a0",
 CellID->1195827430],
Cell[211481, 5053, 81, 1, 70, "Text",ExpressionUUID->"d7fd28d1-c7d6-44a7-8b2a-ac03b6a72078",
 CellID->2119647384],
Cell[CellGroupData[{
Cell[211587, 5058, 168, 5, 70, "Input",ExpressionUUID->"0b691d9c-1d04-4b3f-a5f5-1ef987cf0924",
 CellID->307362805],
Cell[211758, 5065, 5191, 93, 70, "Output",ExpressionUUID->"b83368c0-aec8-4cd0-a558-c758e8f8a945",
 CellTags->"RasterizedOutput",
 CellID->290192854]
}, Open  ]],
Cell[216964, 5161, 211, 6, 70, "Text",ExpressionUUID->"f0a274b9-ba61-4f6a-a6a5-2c58b94f26b1",
 CellID->1132108964],
Cell[217178, 5169, 80, 1, 70, "Text",ExpressionUUID->"c75d7364-6778-4102-9e9e-3ca63ddcb181",
 CellID->650245528],
Cell[CellGroupData[{
Cell[217283, 5174, 75, 2, 70, "Input",ExpressionUUID->"bea882b0-2d9e-48e2-81f2-762c735ac83c",
 CellID->132309513],
Cell[217361, 5178, 527, 8, 70, "Print",ExpressionUUID->"4cb6c7f7-410a-4740-9c73-5951b7a94c11",
 CellTags->"Info493734618833-9791720",
 CellID->14400426]
}, Open  ]],
Cell[CellGroupData[{
Cell[217925, 5191, 84, 2, 70, "Input",ExpressionUUID->"5205a667-fc74-484b-a97a-662a8ca7ff94",
 CellID->1482449837],
Cell[218012, 5195, 4312, 89, 70, "Output",ExpressionUUID->"1387902a-d00f-457a-afb8-33f17c6a5486",
 CellID->642320949]
}, Open  ]],
Cell[CellGroupData[{
Cell[222361, 5289, 74, 2, 70, "Input",ExpressionUUID->"30acb370-f5a6-40d8-a9b6-9ecb8e0665fd",
 CellID->1271691129],
Cell[222438, 5293, 256, 4, 70, "Print",ExpressionUUID->"aa6754c4-29dd-44c8-ab4d-a5c5db84e5d6",
 CellTags->"Info513734618833-9791720",
 CellID->23335248]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222743, 5303, 82, 1, 70, "Section",ExpressionUUID->"42fe3921-2fc6-4974-b08b-d05037a882b0",
 CellID->559656922],
Cell[222828, 5306, 90, 1, 70, "Text",ExpressionUUID->"49df2113-b719-4c88-ae09-ec8be3325232",
 CellID->175514194],
Cell[CellGroupData[{
Cell[222943, 5311, 400, 13, 70, "Input",ExpressionUUID->"aeb81444-0879-4183-b634-030c9770a979",
 CellID->1372011227],
Cell[223346, 5326, 5386, 96, 70, "Output",ExpressionUUID->"8f6c7e5c-99d2-4895-b190-1776db1a1348",
 CellTags->"RasterizedOutput",
 CellID->335934841]
}, Open  ]],
Cell[228747, 5425, 221, 5, 70, "Text",ExpressionUUID->"a93edb71-17ba-4541-ad07-3691ce3cc95e",
 CellID->230149189],
Cell[CellGroupData[{
Cell[228993, 5434, 1770, 49, 70, "Input",ExpressionUUID->"6cb0173e-379e-4748-b696-69985b3e4b6a",
 CellID->499371276],
Cell[230766, 5485, 2704, 54, 70, "Output",ExpressionUUID->"60ec713e-da54-477b-9d10-170c9564fbb7",
 CellID->685634315]
}, Open  ]],
Cell[233485, 5542, 141, 4, 70, "Text",ExpressionUUID->"edca5eda-2426-4d7e-9447-1f08add5f385",
 CellID->230361853],
Cell[233629, 5548, 474, 15, 70, "Input",ExpressionUUID->"bbfceedb-527a-460b-a189-1892fb299d6c",
 CellID->1926131477],
Cell[CellGroupData[{
Cell[234128, 5567, 86, 2, 70, "Input",ExpressionUUID->"4b7a0525-53b7-490d-9817-360792a6e5dc",
 CellID->1323239061],
Cell[234217, 5571, 14776, 250, 70, "Output",ExpressionUUID->"60f3e1f3-4555-441a-a2d9-071b13bfc60c",
 CellTags->"RasterizedOutput",
 CellID->322364724]
}, Open  ]],
Cell[249008, 5824, 348, 6, 70, "Text",ExpressionUUID->"05564eaf-c353-4f60-80fb-76568e824e5b",
 CellID->576771656],
Cell[CellGroupData[{
Cell[249381, 5834, 304, 9, 70, "Input",ExpressionUUID->"4e412b5a-d8f1-437a-a339-3e1aed8fde09",
 CellID->60039834],
Cell[249688, 5845, 14684, 249, 70, "Output",ExpressionUUID->"cba90b47-e69b-46b1-bcdb-f895fba4a585",
 CellTags->"RasterizedOutput",
 CellID->2030158534]
}, Open  ]],
Cell[264387, 6097, 88, 1, 70, "Text",ExpressionUUID->"406c6678-df22-4795-a36d-02dde2fffadd",
 CellID->2071984284],
Cell[CellGroupData[{
Cell[264500, 6102, 156, 5, 70, "Input",ExpressionUUID->"a6647fff-43eb-437f-9859-a1e79e69b520",
 CellID->245041436],
Cell[264659, 6109, 14611, 248, 70, "Output",ExpressionUUID->"68bebcc8-a0fe-4a51-bb8b-246e68fa74a5",
 CellTags->"RasterizedOutput",
 CellID->1654297402]
}, Open  ]],
Cell[279285, 6360, 184, 4, 70, "Text",ExpressionUUID->"52b58d7b-3a7c-47cf-8234-7bd869725584",
 CellID->1062714988],
Cell[CellGroupData[{
Cell[279494, 6368, 441, 14, 70, "Input",ExpressionUUID->"5346f337-9e9d-4c27-8cc5-2365e0c8a14d",
 CellID->429311217],
Cell[279938, 6384, 9083, 157, 70, "Output",ExpressionUUID->"54cc7619-36ae-4774-b34b-d3bf1d173107",
 CellTags->"RasterizedOutput",
 CellID->305657705]
}, Open  ]],
Cell[289036, 6544, 143, 4, 70, "Text",ExpressionUUID->"db0eeebf-2ccc-425b-8581-fa674750e0f9",
 CellID->1952558424],
Cell[CellGroupData[{
Cell[289204, 6552, 441, 14, 70, "Input",ExpressionUUID->"30d87307-9141-47eb-98c0-377ca4a69f34",
 CellID->951822361],
Cell[289648, 6568, 13288, 226, 70, "Output",ExpressionUUID->"8524c6f6-048a-4d16-838a-c4731ee1ccd0",
 CellTags->"RasterizedOutput",
 CellID->408164311]
}, Open  ]],
Cell[302951, 6797, 159, 4, 70, "Text",ExpressionUUID->"3662e284-b490-4ae8-8247-868bb8e54966",
 CellID->152785513],
Cell[CellGroupData[{
Cell[303135, 6805, 483, 17, 70, "Input",ExpressionUUID->"7fcf609a-50b9-4a09-9904-19180542e8d6",
 CellID->1623158826],
Cell[303621, 6824, 4907, 89, 70, "Output",ExpressionUUID->"eec855a0-4dd7-4fda-942d-d13b1faab072",
 CellTags->"RasterizedOutput",
 CellID->954806459]
}, Open  ]],
Cell[308543, 6916, 179, 4, 70, "Text",ExpressionUUID->"32050b90-acea-4f5a-8690-0199c57146f4",
 CellID->1668806187],
Cell[CellGroupData[{
Cell[308747, 6924, 707, 25, 70, "Input",ExpressionUUID->"98b7d063-7040-4859-9501-95e2bb69838c",
 CellID->1489155089],
Cell[309457, 6951, 6811, 120, 70, "Output",ExpressionUUID->"65b0e643-e446-499e-a302-4569592f46f8",
 CellTags->"RasterizedOutput",
 CellID->1434346029]
}, Open  ]],
Cell[CellGroupData[{
Cell[316305, 7076, 358, 12, 70, "Input",ExpressionUUID->"5821829d-b821-4224-afa0-826c922894d6",
 CellID->1308246759],
Cell[316666, 7090, 6205, 110, 70, "Output",ExpressionUUID->"0dc18127-7d9e-49b3-9c04-8a1bcce6cc7a",
 CellTags->"RasterizedOutput",
 CellID->1549771828]
}, Open  ]],
Cell[CellGroupData[{
Cell[322908, 7205, 484, 16, 70, "Input",ExpressionUUID->"863927e9-785b-4540-bd0c-5c41b29437b5",
 CellID->52239396],
Cell[323395, 7223, 5561, 99, 70, "Output",ExpressionUUID->"21802fc7-ba10-4569-a3bd-d240796fe5f4",
 CellTags->"RasterizedOutput",
 CellID->185958733]
}, Open  ]],
Cell[328971, 7325, 284, 6, 70, "Text",ExpressionUUID->"b9077e40-1274-4c5f-95fd-9e9ce1b240aa",
 CellID->1296596866],
Cell[CellGroupData[{
Cell[329280, 7335, 123, 2, 70, "Input",ExpressionUUID->"a8fd0c5e-25fc-4705-a246-ca74fe5a8d31",
 CellID->1386960753],
Cell[329406, 7339, 5517, 99, 70, "Output",ExpressionUUID->"6e8e2042-896c-40c3-9cdd-5c5331d06c0a",
 CellTags->"RasterizedOutput",
 CellID->819719146]
}, Open  ]],
Cell[334938, 7441, 128, 4, 70, "Text",ExpressionUUID->"98dd5823-1ea7-4d5e-80ad-d39fdf170195",
 CellID->1483911894],
Cell[CellGroupData[{
Cell[335091, 7449, 1311, 39, 70, "Input",ExpressionUUID->"354ae13b-cf6b-4c0b-9e06-a87ff17df9e2",
 CellID->1379609847],
Cell[336405, 7490, 6297, 111, 70, "Output",ExpressionUUID->"3c2044e9-102e-4ccd-82f7-d3496a4c05ec",
 CellTags->"RasterizedOutput",
 CellID->912091317]
}, Open  ]],
Cell[342717, 7604, 82, 1, 70, "Text",ExpressionUUID->"aa474cb2-f6dd-473a-85fa-cb66d06dd6c8",
 CellID->1664110834],
Cell[342802, 7607, 120, 3, 70, "Text",ExpressionUUID->"ef1399ba-d723-48e6-b22b-a2adc84164b7",
 CellID->2031252157],
Cell[CellGroupData[{
Cell[342947, 7614, 110, 2, 70, "Input",ExpressionUUID->"ca3e6e9f-675c-4d70-94ee-9259484a46f0",
 CellID->707466340],
Cell[343060, 7618, 6484, 114, 70, "Output",ExpressionUUID->"e80f10f4-2d7e-47a7-a604-4b201814163d",
 CellTags->"RasterizedOutput",
 CellID->780492533]
}, Open  ]],
Cell[349559, 7735, 118, 3, 70, "Text",ExpressionUUID->"682dab35-ee12-4a82-b8c3-c366b633b6de",
 CellID->1179701281],
Cell[CellGroupData[{
Cell[349702, 7742, 136, 4, 70, "Input",ExpressionUUID->"7402db60-c355-455f-ae2e-9da6d76c46ee",
 CellID->1670400663],
Cell[349841, 7748, 5167, 93, 70, "Output",ExpressionUUID->"27165162-da1e-41df-b065-bee90e9f3ea7",
 CellTags->"RasterizedOutput",
 CellID->907886255]
}, Open  ]],
Cell[355023, 7844, 72, 2, 70, "Input",ExpressionUUID->"83d62bca-054f-4ff5-830f-06d8cdd129e4",
 CellID->1125063311],
Cell[355098, 7848, 90, 1, 70, "Text",ExpressionUUID->"b68fd4da-960b-4ec2-aa29-7aee1969cd35",
 CellID->345556142],
Cell[CellGroupData[{
Cell[355213, 7853, 111, 2, 70, "Input",ExpressionUUID->"63a6f9ff-3425-4dd0-84cc-edcd9fdd7f21",
 CellID->966297106],
Cell[355327, 7857, 6606, 116, 70, "Output",ExpressionUUID->"138a7a92-5016-4d0b-ac52-3b01b8739d5e",
 CellTags->"RasterizedOutput",
 CellID->972975850]
}, Open  ]],
Cell[361948, 7976, 393, 9, 70, "Text",ExpressionUUID->"366b5f23-33d4-4233-ace7-c3fac5a141c4",
 CellID->26591546],
Cell[362344, 7987, 128, 4, 70, "Program",ExpressionUUID->"0a9559dc-3de2-4276-a0af-2853af204568",
 CellID->247515046],
Cell[CellGroupData[{
Cell[362497, 7995, 1463, 46, 70, "Input",ExpressionUUID->"14f09271-9f26-48f1-a57e-f1de42f43eaa",
 CellID->309553883],
Cell[363963, 8043, 9344, 161, 70, "Output",ExpressionUUID->"a69437b0-9414-4647-a077-a03ea57d07b8",
 CellTags->"RasterizedOutput",
 CellID->1864622692]
}, Open  ]],
Cell[373322, 8207, 146, 4, 70, "Text",ExpressionUUID->"f4132182-b458-4a5a-bddb-932fcbf62d65",
 CellID->173835516],
Cell[CellGroupData[{
Cell[373493, 8215, 1165, 35, 70, "Input",ExpressionUUID->"770a6746-6552-4ca9-94ac-ce949e8f16ee",
 CellID->1075757492],
Cell[374661, 8252, 18969, 319, 70, "Output",ExpressionUUID->"e512b88b-de7a-46da-a9d9-342d3437adf4",
 CellTags->"RasterizedOutput",
 CellID->484723773]
}, Open  ]],
Cell[CellGroupData[{
Cell[393667, 8576, 936, 29, 70, "Input",ExpressionUUID->"49527fb7-b2b9-433d-adcf-819bf9345cbc",
 CellID->163466141],
Cell[394606, 8607, 19564, 329, 70, "Output",ExpressionUUID->"4c51517a-6c64-4e00-a64f-f13ade8373b1",
 CellTags->"RasterizedOutput",
 CellID->1346979740]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[414209, 8941, 23, 0, 70, "FooterCell",ExpressionUUID->"5a511f4a-c2b8-48dc-9cb3-c6241dee7efd"]
}
]
*)

(* End of internal cache information *)
